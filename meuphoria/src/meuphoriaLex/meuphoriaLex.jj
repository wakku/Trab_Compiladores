/* 
 * MeuPhoria
 * 
 * NOME DO GRUPO
 */


PARSER_BEGIN(Meuphoria)

/* MeuPhoria Parser */
public class Meuphoria {

  /** Main entry point. */
  public static void main(String args[]) throws ParseException {
    Simple3 parser = new Meuphoria(System.in);
    parser.Input();
  }

}

PARSER_END(Meuphoria)

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
}

/* ADD THE TOKENS, SUCH AS THE FIRST 5 IN RULES IN THE GRAMMAR */
TOKEN :
{
  < ALPHA: ["a"-"z","A"-"Z"] > | 
  < NUM: ( ["0"-"9"] )+ > | 
  < USCORE: "_" > | 
  /* don't know what to do with the EOL */
  //< EOL: " "> | 
  /* CAN I USE IT LIKE THIS OR DO I HAVE TO CREATE A RULE LIKE THE BRACE MATCHER? */
  /*< NAME: ( alpha1 | uscore3 ) { alpha1 | digit2 | uscore3 }> */
  <LBRACE: "{">
| <RBRACE: "}">
}



/* THE CODE HAS TO BE CHANGE FROM NOW ON */

/** Root production. */
void Input() :
{ int count; }
{
  count=MatchedBraces() <EOF>
  { System.out.println("The levels of nesting is " + count); }
}

/** Brace counting production. */
int MatchedBraces() :
{ int nested_count=0; }
{
  <LBRACE> [ nested_count=MatchedBraces() ] <RBRACE>
  { return ++nested_count; }
}