/* ***********************************************
        	ANALISADOR LEXICO
    ********************************
    
	Integrantes: 
        Ariel Morelli                   7573419         
        Marcos Vinicius Cruz            7711677
        Roberty Manzini Bertolo         7573399

    Documento:
        Codigo fonte

*********************************************** */

/** Options **/
options {
    STATIC = false;
}

/** Inicialização do AnalisadorLexico **/
PARSER_BEGIN(AnalisadorLexico)
class AnalisadorLexico
{
     public static void main(String[] args) throws ParseException, TokenMgrError
     {
		try
		{
			AnalisadorLexico analisadorlexico = new AnalisadorLexico(System.in);
			analisadorlexico.Main();
			System.out.println("Analisado com sucesso!");
		}
		catch(ParseException e)
		{
			System.out.println(e.getMessage());
   			System.out.println("Ocorreu uma excecao!");
		}
		catch(TokenMgrError e)
		{
       		System.out.println(e.getMessage());
			System.out.println("Existem erros no codigo! Por favor, verifica-los.");
		}
	 }

}
PARSER_END(AnalisadorLexico)

/************************
        SKIP
************************/
SKIP: { "\t"|"\r"|" "|<"#"(~["\n"])* "\n"> }

/************************
        TOKENS
************************/

/***********
GERAIS
***********/
TOKEN: { <EOL : "\n"> }

/***********
COMANDOS
***********/
TOKEN: { <WARRANTY : "warranty"> }
TOKEN: { <LIMITS : "limits"> }
TOKEN: { <BREAK : "break"> }
TOKEN: { <CONTINUE : "continue"> }
TOKEN: { <QUIT : "quit"> }
TOKEN: { <HALT : "halt"> }
TOKEN: { <RETURN : "return"> }
TOKEN: { <FOR : "for"> }
TOKEN: { <IF : "if"> }
TOKEN: { <WHILE : "while"> }
TOKEN: { <PRINT : "print"> }
TOKEN: { <ELSE : "else"> }

/***********
DEFINICAO DE FUNCAO
***********/
TOKEN: { <DEFINE : "define"> }

/***********
EXPRESSOES GERAIS
***********/
TOKEN: { <VIRGULA : ","> }
TOKEN: { <PARENTESESESQ : "("> }
TOKEN: { <PARENTESESDIR : ")"> }
TOKEN: { <COLCHETESESQ : "["> }
TOKEN: { <COLCHETESDIR : "]"> }
TOKEN: { <CHAVESESQ : "{"> }
TOKEN: { <CHAVESDIR : "}"> }
TOKEN: { <PONTOEVIRGULA : ";"> }
TOKEN: { <PONTO : "."> }
TOKEN: { <UNDERLINE : "_"> }

/*********** Palavras reservadas ***********/
//unary_exp
TOKEN: { <LENGHT : "length"> }
TOKEN: { <SQRT : "sqrt"> }
TOKEN: { <SCALE : "scale"> }
TOKEN: { <READ : "read"> }

//named_expression
TOKEN: { <IBASE : "ibase"> }
TOKEN: { <OBASE : "obase"> }
TOKEN: { <LAST : "last"> }

//opt_auto_define_list
TOKEN: { <AUTO : "auto"> }

/*********** OPERADORES ***********/
// expression, and_exp, not_exp, 
TOKEN: { <OU : "||"> }
TOKEN: { <E : "&&"> }
TOKEN: { <NOT : "!"> }

// rel_op
TOKEN: { <MAIOR : ">"> }
TOKEN: { <MAIORIGUAL : ">="> }
TOKEN: { <MENOR : "<"> }
TOKEN: { <MENORIGUAL : "<="> }
TOKEN: { <COMPARACAO : "=="> }
TOKEN: { <DIFERENTE : "!="> }

// assign_op
TOKEN: { <ATRIBUICAO : "="> }
TOKEN: { <ATRIBUICAOSOMA : "+="> }
TOKEN: { <ATRIBUICAOSUB : "-="> }
TOKEN: { <ATRIBUICAOMULT : "*="> }
TOKEN: { <ATRIBUICAODIV : "/="> }
TOKEN: { <ATRIBUICAOMOD : "%="> }
TOKEN: { <ATRIBUICAOPOT : "^="> }

// add_op
TOKEN: { <ADD : "+"> }
TOKEN: { <SUB : "-"> }

// mul_op
TOKEN: { <MULT : "*"> }
TOKEN: { <DIV : "/"> }
TOKEN: { <RESTO : "%"> }

// incr_decr_op
TOKEN: { <INCREMENTO : "++"> }
TOKEN: { <DECREMENTO : "--"> }

// power_exp
TOKEN: { <POTENCIA : "^"> }

/**** NOMES GERAIS ****/
TOKEN: { <LETRAS : ["a"-"z","A"-"Z"]> }
TOKEN: { <DIGITOS : (["0" - "9"])+> }
TOKEN: { <CARACTERES : ([" " - "~"])> }
TOKEN: { <STRING: "\"" (<CARACTERES>)* "\""> }
TOKEN: { <IDENTIFICADOR: ["a" - "z","A"-"Z"](["a" - "z","A" - "Z","0" - "9", "_"])*> }


void Main():
{
	Token t;
}
{
	(
    /************ GERAIS ************/
      t = <EOL>         { System.out.println("@("+t.beginLine+","+t.beginColumn+") EOL:\t"+t.toString());}

    /************ COMANDOS ************/

	| t = <WARRANTY>    { System.out.println("@("+t.beginLine+","+t.beginColumn+") WARRANTY:\t"+t.toString());}
    | t = <LIMITS>      { System.out.println("@("+t.beginLine+","+t.beginColumn+") LIMITS:\t"+t.toString());}
    | t = <BREAK>       { System.out.println("@("+t.beginLine+","+t.beginColumn+") BREAK:\t"+t.toString());}
    | t = <CONTINUE>    { System.out.println("@("+t.beginLine+","+t.beginColumn+") CONTINUE:\t"+t.toString());}
    | t = <QUIT>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") QUIT:\t"+t.toString());}
    | t = <HALT>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") HALT:\t"+t.toString());}
    | t = <RETURN>      { System.out.println("@("+t.beginLine+","+t.beginColumn+") RETURN:\t"+t.toString());}
    | t = <FOR>         { System.out.println("@("+t.beginLine+","+t.beginColumn+") FOR:\t"+t.toString());}
    | t = <IF>          { System.out.println("@("+t.beginLine+","+t.beginColumn+") IF:\t"+t.toString());}
    | t = <WHILE>       { System.out.println("@("+t.beginLine+","+t.beginColumn+") WHILE:\t"+t.toString());}
    | t = <PRINT>       { System.out.println("@("+t.beginLine+","+t.beginColumn+") PRINT:\t"+t.toString());}
    | t = <ELSE>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") ELSE:\t"+t.toString());}

/***********
DEFINICAO DE FUNCAO
***********/
    | t = <DEFINE>      { System.out.println("@("+t.beginLine+","+t.beginColumn+") DEFINE:\t"+t.toString());}

/***********
EXPRESSOES GERAIS
***********/
    | t = <VIRGULA>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") VIRGULA:\t"+t.toString());}
    | t = <PARENTESESESQ>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") PARENTESESESQ:\t"+t.toString());}
    | t = <PARENTESESDIR>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") PARENTESESDIR:\t"+t.toString());}
    | t = <COLCHETESESQ>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") COLCHETESESQ:\t"+t.toString());}
    | t = <COLCHETESDIR>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") COLCHETESDIR:\t"+t.toString());}
    | t = <CHAVESESQ>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") CHAVESESQ:\t"+t.toString());}
    | t = <CHAVESDIR>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") CHAVESDIR:\t"+t.toString());}
    | t = <PONTOEVIRGULA>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") PONTOEVIRGULA:\t"+t.toString());}
    | t = <PONTO>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") PONTO:\t"+t.toString());}
    | t = <UNDERLINE>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") UNDERLINE:\t"+t.toString());}

/*********** Palavras reservadas ***********/
//unary_exp
    | t = <LENGHT>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") LENGHT:\t"+t.toString());}
    | t = <SQRT>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") SQRT:\t"+t.toString());}
    | t = <SCALE>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") SCALE:\t"+t.toString());}
    | t = <READ>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") READ:\t"+t.toString());}

//named_expression
    | t = <IBASE>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") IBASE:\t"+t.toString());}
    | t = <OBASE>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") OBASE:\t"+t.toString());}
    | t = <LAST>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") LAST:\t"+t.toString());}

//opt_auto_define_list
    | t = <AUTO>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") AUTO:\t"+t.toString());}

/*********** OPERADORES ***********/
// expression, and_exp, not_exp, 
    | t = <OU>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") OU:\t"+t.toString());}
    | t = <E>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") E:\t"+t.toString());}
    | t = <NOT>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") NOT:\t"+t.toString());}

// rel_op
    | t = <MAIOR>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") MAIOR:\t"+t.toString());}
    | t = <MAIORIGUAL>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") MAIORIGUAL:\t"+t.toString());}
    | t = <MENOR>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") MENOR:\t"+t.toString());}
    | t = <MENORIGUAL>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") MENORIGUAL:\t"+t.toString());}
    | t = <COMPARACAO>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") COMPARACAO:\t"+t.toString());}
    | t = <DIFERENTE>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") DIFERENTE:\t"+t.toString());}


// assign_op
    | t = <ATRIBUICAO>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") ATRIBUICAO:\t"+t.toString());}
    | t = <ATRIBUICAOSOMA>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") ATRIBUICAOSOMA:\t"+t.toString());}
    | t = <ATRIBUICAOSUB>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") ATRIBUICAOSUB:\t"+t.toString());}
    | t = <ATRIBUICAOMULT>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") ATRIBUICAOMULT:\t"+t.toString());}
    | t = <ATRIBUICAODIV>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") ATRIBUICAODIV:\t"+t.toString());}
    | t = <ATRIBUICAOMOD>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") ATRIBUICAOMOD:\t"+t.toString());}
    | t = <ATRIBUICAOPOT>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") ATRIBUICAOPOT:\t"+t.toString());}

// add_op
    | t = <ADD>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") ADD:\t"+t.toString());}
    | t = <SUB>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") SUB:\t"+t.toString());}

// mul_op
    | t = <MULT>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") MULT:\t"+t.toString());}
    | t = <DIV>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") DIV:\t"+t.toString());}
    | t = <RESTO>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") RESTO:\t"+t.toString());}

// incr_decr_op
    | t = <INCREMENTO>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") INCREMENTO:\t"+t.toString());}
    | t = <DECREMENTO>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") DECREMENTO:\t"+t.toString());}

// power_exp
    | t = <POTENCIA>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") POTENCIA:\t"+t.toString());}

/**** NOMES GERAIS ****/
    | t = <LETRAS>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") LETRAS:\t"+t.toString());}
    | t = <DIGITOS>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") DIGITOS:\t"+t.toString());}
    | t = <CARACTERES>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") CARACTERES:\t"+t.toString());}
    | t = <STRING>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") STRING:\t"+t.toString());}
    | t = <IDENTIFICADOR>        { System.out.println("@("+t.beginLine+","+t.beginColumn+") IDENTIFICADOR:\t"+t.toString());}

    /************ TERMINAL ************/
	| t = <EOF>{return;}
)*
}
