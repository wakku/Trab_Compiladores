/* Generated By:JavaCC: Do not edit this line. AnalisadorLexicoConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AnalisadorLexicoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EOL = 5;
  /** RegularExpression Id. */
  int WARRANTY = 6;
  /** RegularExpression Id. */
  int LIMITS = 7;
  /** RegularExpression Id. */
  int BREAK = 8;
  /** RegularExpression Id. */
  int CONTINUE = 9;
  /** RegularExpression Id. */
  int QUIT = 10;
  /** RegularExpression Id. */
  int HALT = 11;
  /** RegularExpression Id. */
  int RETURN = 12;
  /** RegularExpression Id. */
  int FOR = 13;
  /** RegularExpression Id. */
  int IF = 14;
  /** RegularExpression Id. */
  int WHILE = 15;
  /** RegularExpression Id. */
  int PRINT = 16;
  /** RegularExpression Id. */
  int ELSE = 17;
  /** RegularExpression Id. */
  int DEFINE = 18;
  /** RegularExpression Id. */
  int VIRGULA = 19;
  /** RegularExpression Id. */
  int PARENTESESESQ = 20;
  /** RegularExpression Id. */
  int PARENTESESDIR = 21;
  /** RegularExpression Id. */
  int COLCHETESESQ = 22;
  /** RegularExpression Id. */
  int COLCHETESDIR = 23;
  /** RegularExpression Id. */
  int CHAVESESQ = 24;
  /** RegularExpression Id. */
  int CHAVESDIR = 25;
  /** RegularExpression Id. */
  int PONTOEVIRGULA = 26;
  /** RegularExpression Id. */
  int PONTO = 27;
  /** RegularExpression Id. */
  int UNDERLINE = 28;
  /** RegularExpression Id. */
  int LENGHT = 29;
  /** RegularExpression Id. */
  int SQRT = 30;
  /** RegularExpression Id. */
  int SCALE = 31;
  /** RegularExpression Id. */
  int READ = 32;
  /** RegularExpression Id. */
  int IBASE = 33;
  /** RegularExpression Id. */
  int OBASE = 34;
  /** RegularExpression Id. */
  int LAST = 35;
  /** RegularExpression Id. */
  int AUTO = 36;
  /** RegularExpression Id. */
  int OU = 37;
  /** RegularExpression Id. */
  int E = 38;
  /** RegularExpression Id. */
  int NOT = 39;
  /** RegularExpression Id. */
  int MAIOR = 40;
  /** RegularExpression Id. */
  int MAIORIGUAL = 41;
  /** RegularExpression Id. */
  int MENOR = 42;
  /** RegularExpression Id. */
  int MENORIGUAL = 43;
  /** RegularExpression Id. */
  int COMPARACAO = 44;
  /** RegularExpression Id. */
  int DIFERENTE = 45;
  /** RegularExpression Id. */
  int ATRIBUICAO = 46;
  /** RegularExpression Id. */
  int ATRIBUICAOSOMA = 47;
  /** RegularExpression Id. */
  int ATRIBUICAOSUB = 48;
  /** RegularExpression Id. */
  int ATRIBUICAOMULT = 49;
  /** RegularExpression Id. */
  int ATRIBUICAODIV = 50;
  /** RegularExpression Id. */
  int ATRIBUICAOMOD = 51;
  /** RegularExpression Id. */
  int ATRIBUICAOPOT = 52;
  /** RegularExpression Id. */
  int ADD = 53;
  /** RegularExpression Id. */
  int SUB = 54;
  /** RegularExpression Id. */
  int MULT = 55;
  /** RegularExpression Id. */
  int DIV = 56;
  /** RegularExpression Id. */
  int RESTO = 57;
  /** RegularExpression Id. */
  int INCREMENTO = 58;
  /** RegularExpression Id. */
  int DECREMENTO = 59;
  /** RegularExpression Id. */
  int POTENCIA = 60;
  /** RegularExpression Id. */
  int LETRAS = 61;
  /** RegularExpression Id. */
  int DIGITOS = 62;
  /** RegularExpression Id. */
  int CARACTERES = 63;
  /** RegularExpression Id. */
  int STRING = 64;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 65;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\t\"",
    "\"\\r\"",
    "\" \"",
    "<token of kind 4>",
    "\"\\n\"",
    "\"warranty\"",
    "\"limits\"",
    "\"break\"",
    "\"continue\"",
    "\"quit\"",
    "\"halt\"",
    "\"return\"",
    "\"for\"",
    "\"if\"",
    "\"while\"",
    "\"print\"",
    "\"else\"",
    "\"define\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\".\"",
    "\"_\"",
    "\"length\"",
    "\"sqrt\"",
    "\"scale\"",
    "\"read\"",
    "\"ibase\"",
    "\"obase\"",
    "\"last\"",
    "\"auto\"",
    "\"||\"",
    "\"&&\"",
    "\"!\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"==\"",
    "\"!=\"",
    "\"=\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"^=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"++\"",
    "\"--\"",
    "\"^\"",
    "<LETRAS>",
    "<DIGITOS>",
    "<CARACTERES>",
    "<STRING>",
    "<IDENTIFICADOR>",
  };

}
