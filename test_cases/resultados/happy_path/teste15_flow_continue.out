Call:   javacc_input
  Call:   stmblk(LOOKING AHEAD...)
    Call:   statement(LOOKING AHEAD...)
      Call:   Flow(LOOKING AHEAD...)
        Visited token: <"for" at line 1 column 1>; Expected token: <"break">
        Visited token: <"for" at line 1 column 1>; Expected token: <"continue">
        Visited token: <"for" at line 1 column 1>; Expected token: <"retry">
        Visited token: <"for" at line 1 column 1>; Expected token: <"exit">
        Visited token: <"for" at line 1 column 1>; Expected token: <"fallthru">
      Return: Flow(LOOKAHEAD FAILED)
      Call:   Loop(LOOKING AHEAD...)
        Call:   ForStatement(LOOKING AHEAD...)
          Visited token: <"for" at line 1 column 1>; Expected token: <"for">
          Call:   ForIDX(LOOKING AHEAD...)
            Visited token: <<IDENTIFIER>: "a" at line 1 column 5>; Expected token: <<IDENTIFIER>>
            Call:   stmblk
              Call:   statement
                Call:   Loop
                  Call:   ForStatement
                    Consumed token: <"for" at line 1 column 1>
                    Call:   ForIDX
                      Consumed token: <<IDENTIFIER>: "a" at line 1 column 5>
                      Consumed token: <"=" at line 1 column 7>
                      Call:   Expression
                        Call:   Expression00
                          Call:   Expression01
                            Call:   Expression02
                              Call:   Expression03
                                Call:   Expression04
                                  Call:   Expression05
                                    Call:   Expression06
                                      Call:   Atom
                                        Consumed token: <<INTEGER>: "3" at line 1 column 9>
                                      Return: Atom
                                    Return: Expression06
                                  Return: Expression05
                                Return: Expression04
                              Return: Expression03
                            Return: Expression02
                          Return: Expression01
                        Return: Expression00
                      Return: Expression
                      Consumed token: <"to" at line 1 column 11>
                      Call:   Expression
                        Call:   Expression00
                          Call:   Expression01
                            Call:   Expression02
                              Call:   Expression03
                                Call:   Expression04
                                  Call:   Expression05
                                    Call:   Expression06
                                      Call:   Atom
                                        Consumed token: <<INTEGER>: "6" at line 1 column 14>
                                      Return: Atom
                                    Return: Expression06
                                  Return: Expression05
                                Return: Expression04
                              Return: Expression03
                            Return: Expression02
                          Return: Expression01
                        Return: Expression00
                      Return: Expression
                    Return: ForIDX
                    Consumed token: <"do" at line 1 column 16>
                    Call:   stmblk
                      Consumed token: <"\n": "
" at line 1 column 18>
                    Return: stmblk
                    Call:   stmblk
                      Call:   statement
                        Visited token: <<IDENTIFIER>: "printf" at line 2 column 4>; Expected token: <<IDENTIFIER>>
                        Call:   Assignment(LOOKING AHEAD...)
                          Call:   AssignmentMulti(LOOKING AHEAD...)
                            Call:   Variable(LOOKING AHEAD...)
                              Visited token: <"(" at line 2 column 10>; Expected token: <"[">
                            Return: Variable(LOOKAHEAD FAILED)
                            Visited token: <"(" at line 2 column 10>; Expected token: <",">
                            Visited token: <"(" at line 2 column 10>; Expected token: <"=">
                          Return: AssignmentMulti(LOOKAHEAD FAILED)
                          Call:   AssignmentWihOp(LOOKING AHEAD...)
                            Visited token: <"(" at line 2 column 10>; Expected token: <"+">
                            Visited token: <"(" at line 2 column 10>; Expected token: <"-">
                            Visited token: <"(" at line 2 column 10>; Expected token: <"/">
                            Visited token: <"(" at line 2 column 10>; Expected token: <"*">
                            Visited token: <"(" at line 2 column 10>; Expected token: <"&">
                          Return: AssignmentWihOp(LOOKAHEAD FAILED)
                        Return: Assignment(LOOKAHEAD FAILED)
                        Call:   Call(LOOKING AHEAD...)
                          Visited token: <"(" at line 2 column 10>; Expected token: <"(">
                          Consumed token: <<IDENTIFIER>: "printf" at line 2 column 4>
                          Call:   Call
                            Consumed token: <"(" at line 2 column 10>
                            Call:   ArgList
                              Call:   Expression
                                Call:   Expression00
                                  Call:   Expression01
                                    Call:   Expression02
                                      Call:   Expression03
                                        Call:   Expression04
                                          Call:   Expression05
                                            Call:   Expression06
                                              Call:   Atom
                                                Consumed token: <<INTEGER>: "1" at line 2 column 11>
                                              Return: Atom
                                            Return: Expression06
                                          Return: Expression05
                                        Return: Expression04
                                      Return: Expression03
                                    Return: Expression02
                                  Return: Expression01
                                Return: Expression00
                              Return: Expression
                              Consumed token: <"," at line 2 column 12>
                              Call:   Expression
                                Call:   Expression00
                                  Call:   Expression01
                                    Call:   Expression02
                                      Call:   Expression03
                                        Call:   Expression04
                                          Call:   Expression05
                                            Call:   Expression06
                                              Consumed token: <<STRINGLIT>: ""valor de a %d\n"" at line 2 column 14>
                                            Return: Expression06
                                          Return: Expression05
                                        Return: Expression04
                                      Return: Expression03
                                    Return: Expression02
                                  Return: Expression01
                                Return: Expression00
                              Return: Expression
                              Consumed token: <"," at line 2 column 31>
                              Call:   Expression
                                Call:   Expression00
                                  Call:   Expression01
                                    Call:   Expression02
                                      Call:   Expression03
                                        Call:   Expression04
                                          Call:   Expression05
                                            Call:   Expression06
                                              Consumed token: <<IDENTIFIER>: "a" at line 2 column 33>
                                            Return: Expression06
                                          Return: Expression05
                                        Return: Expression04
                                      Return: Expression03
                                    Return: Expression02
                                  Return: Expression01
                                Return: Expression00
                              Return: Expression
                            Return: ArgList
                            Consumed token: <")" at line 2 column 34>
                          Return: Call
                        Return: statement
                      Return: stmblk
                      Call:   stmblk
                        Consumed token: <"\n": "
" at line 2 column 35>
                      Return: stmblk
                      Call:   stmblk
                        Call:   statement
                          Call:   Branch
                            Call:   IfStatement
                              Call:   IfTest
                                Consumed token: <"if" at line 3 column 4>
                                Call:   Expression
                                  Call:   Expression00
                                    Call:   Expression01
                                      Call:   Expression02
                                        Call:   Expression03
                                          Call:   Expression04
                                            Call:   Expression05
                                              Call:   Expression06
                                                Consumed token: <<IDENTIFIER>: "a" at line 3 column 7>
                                              Return: Expression06
                                            Return: Expression05
                                          Return: Expression04
                                        Return: Expression03
                                      Return: Expression02
                                      Consumed token: <"=" at line 3 column 9>
                                      Call:   Expression02
                                        Call:   Expression03
                                          Call:   Expression04
                                            Call:   Expression05
                                              Call:   Expression06
                                                Call:   Atom
                                                  Consumed token: <<INTEGER>: "4" at line 3 column 11>
                                                Return: Atom
                                              Return: Expression06
                                            Return: Expression05
                                          Return: Expression04
                                        Return: Expression03
                                      Return: Expression02
                                    Return: Expression01
                                  Return: Expression00
                                Return: Expression
                                Consumed token: <"then" at line 3 column 13>
                                Call:   stmblk
                                  Consumed token: <"\n": "
" at line 3 column 17>
                                Return: stmblk
                                Call:   stmblk
                                  Call:   statement
                                    Visited token: <<IDENTIFIER>: "puts" at line 4 column 7>; Expected token: <<IDENTIFIER>>
                                    Call:   Assignment(LOOKING AHEAD...)
                                      Call:   AssignmentMulti(LOOKING AHEAD...)
                                        Call:   Variable(LOOKING AHEAD...)
                                          Visited token: <"(" at line 4 column 11>; Expected token: <"[">
                                        Return: Variable(LOOKAHEAD FAILED)
                                        Visited token: <"(" at line 4 column 11>; Expected token: <",">
                                        Visited token: <"(" at line 4 column 11>; Expected token: <"=">
                                      Return: AssignmentMulti(LOOKAHEAD FAILED)
                                      Call:   AssignmentWihOp(LOOKING AHEAD...)
                                        Visited token: <"(" at line 4 column 11>; Expected token: <"+">
                                        Visited token: <"(" at line 4 column 11>; Expected token: <"-">
                                        Visited token: <"(" at line 4 column 11>; Expected token: <"/">
                                        Visited token: <"(" at line 4 column 11>; Expected token: <"*">
                                        Visited token: <"(" at line 4 column 11>; Expected token: <"&">
                                      Return: AssignmentWihOp(LOOKAHEAD FAILED)
                                    Return: Assignment(LOOKAHEAD FAILED)
                                    Call:   Call(LOOKING AHEAD...)
                                      Visited token: <"(" at line 4 column 11>; Expected token: <"(">
                                      Consumed token: <<IDENTIFIER>: "puts" at line 4 column 7>
                                      Call:   Call
                                        Consumed token: <"(" at line 4 column 11>
                                        Call:   ArgList
                                          Call:   Expression
                                            Call:   Expression00
                                              Call:   Expression01
                                                Call:   Expression02
                                                  Call:   Expression03
                                                    Call:   Expression04
                                                      Call:   Expression05
                                                        Call:   Expression06
                                                          Call:   Atom
                                                            Consumed token: <<INTEGER>: "1" at line 4 column 12>
                                                          Return: Atom
                                                        Return: Expression06
                                                      Return: Expression05
                                                    Return: Expression04
                                                  Return: Expression03
                                                Return: Expression02
                                              Return: Expression01
                                            Return: Expression00
                                          Return: Expression
                                          Consumed token: <"," at line 4 column 13>
                                          Call:   Expression
                                            Call:   Expression00
                                              Call:   Expression01
                                                Call:   Expression02
                                                  Call:   Expression03
                                                    Call:   Expression04
                                                      Call:   Expression05
                                                        Call:   Expression06
                                                          Consumed token: <<STRINGLIT>: ""(2)\n"" at line 4 column 14>
                                                        Return: Expression06
                                                      Return: Expression05
                                                    Return: Expression04
                                                  Return: Expression03
                                                Return: Expression02
                                              Return: Expression01
                                            Return: Expression00
                                          Return: Expression
                                        Return: ArgList
                                        Consumed token: <")" at line 4 column 21>
                                      Return: Call
                                    Return: statement
                                  Return: stmblk
                                  Call:   stmblk
                                    Consumed token: <"\n": "
" at line 4 column 22>
                                  Return: stmblk
                                  Call:   stmblk
                                    Call:   statement
                                      Call:   Flow
                                        Consumed token: <"continue" at line 5 column 7>
                                      Return: Flow
                                    Return: statement
                                  Return: stmblk
                                  Call:   stmblk
                                    Consumed token: <"\n": "
" at line 5 column 15>
                                  Return: stmblk
                                Return: IfTest
                                Consumed token: <"end" at line 6 column 4>
                                Consumed token: <"if" at line 6 column 8>
                              Return: IfStatement
                            Return: Branch
                          Return: statement
                        Return: stmblk
                        Call:   stmblk
                          Consumed token: <"\n": "
" at line 6 column 10>
                        Return: stmblk
                        Call:   stmblk
                          Call:   statement
                            Visited token: <<IDENTIFIER>: "printf" at line 7 column 4>; Expected token: <<IDENTIFIER>>
                            Call:   Assignment(LOOKING AHEAD...)
                              Call:   AssignmentMulti(LOOKING AHEAD...)
                                Call:   Variable(LOOKING AHEAD...)
                                  Visited token: <"(" at line 7 column 10>; Expected token: <"[">
                                Return: Variable(LOOKAHEAD FAILED)
                                Visited token: <"(" at line 7 column 10>; Expected token: <",">
                                Visited token: <"(" at line 7 column 10>; Expected token: <"=">
                              Return: AssignmentMulti(LOOKAHEAD FAILED)
                              Call:   AssignmentWihOp(LOOKING AHEAD...)
                                Visited token: <"(" at line 7 column 10>; Expected token: <"+">
                                Visited token: <"(" at line 7 column 10>; Expected token: <"-">
                                Visited token: <"(" at line 7 column 10>; Expected token: <"/">
                                Visited token: <"(" at line 7 column 10>; Expected token: <"*">
                                Visited token: <"(" at line 7 column 10>; Expected token: <"&">
                              Return: AssignmentWihOp(LOOKAHEAD FAILED)
                            Return: Assignment(LOOKAHEAD FAILED)
                            Call:   Call(LOOKING AHEAD...)
                              Visited token: <"(" at line 7 column 10>; Expected token: <"(">
                              Consumed token: <<IDENTIFIER>: "printf" at line 7 column 4>
                              Call:   Call
                                Consumed token: <"(" at line 7 column 10>
                                Call:   ArgList
                                  Call:   Expression
                                    Call:   Expression00
                                      Call:   Expression01
                                        Call:   Expression02
                                          Call:   Expression03
                                            Call:   Expression04
                                              Call:   Expression05
                                                Call:   Expression06
                                                  Call:   Atom
                                                    Consumed token: <<INTEGER>: "1" at line 7 column 11>
                                                  Return: Atom
                                                Return: Expression06
                                              Return: Expression05
                                            Return: Expression04
                                          Return: Expression03
                                        Return: Expression02
                                      Return: Expression01
                                    Return: Expression00
                                  Return: Expression
                                  Consumed token: <"," at line 7 column 12>
                                  Call:   Expression
                                    Call:   Expression00
                                      Call:   Expression01
                                        Call:   Expression02
                                          Call:   Expression03
                                            Call:   Expression04
                                              Call:   Expression05
                                                Call:   Expression06
                                                  Consumed token: <<STRINGLIT>: ""valor de a %d\n"" at line 7 column 14>
                                                Return: Expression06
                                              Return: Expression05
                                            Return: Expression04
                                          Return: Expression03
                                        Return: Expression02
                                      Return: Expression01
                                    Return: Expression00
                                  Return: Expression
                                  Consumed token: <"," at line 7 column 31>
                                  Call:   Expression
                                    Call:   Expression00
                                      Call:   Expression01
                                        Call:   Expression02
                                          Call:   Expression03
                                            Call:   Expression04
                                              Call:   Expression05
                                                Call:   Expression06
                                                  Consumed token: <<IDENTIFIER>: "a" at line 7 column 33>
                                                Return: Expression06
                                              Return: Expression05
                                              Consumed token: <"*" at line 7 column 34>
                                              Call:   Expression05
                                                Call:   Expression06
                                                  Consumed token: <<IDENTIFIER>: "a" at line 7 column 35>
                                                Return: Expression06
                                              Return: Expression05
                                            Return: Expression04
                                          Return: Expression03
                                        Return: Expression02
                                      Return: Expression01
                                    Return: Expression00
                                  Return: Expression
                                Return: ArgList
                                Consumed token: <")" at line 7 column 36>
                              Return: Call
                            Return: statement
                          Return: stmblk
                          Call:   stmblk
                            Consumed token: <"\n": "
" at line 7 column 38>
                          Return: stmblk
                          Consumed token: <"end" at line 8 column 1>
                          Consumed token: <"for" at line 8 column 5>
                        Return: ForStatement
                      Return: Loop
                    Return: statement
                  Return: stmblk
                  Consumed token: <<EOF> at line 8 column 7>
                Return: javacc_input
input... 
