/* MeuphoriaTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. MeuphoriaTokenManager.java */

/** Token Manager. */
@SuppressWarnings("unused")public class MeuphoriaTokenManager implements MeuphoriaConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1, long active2){
   switch (pos)
   {
      case 0:
         if ((active1 & 0x4000L) != 0L)
            return 579;
         if ((active0 & 0x4000080000800000L) != 0L)
         {
            jjmatchedKind = 95;
            return 216;
         }
         if ((active0 & 0x402000000L) != 0L)
         {
            jjmatchedKind = 95;
            return 78;
         }
         if ((active0 & 0x2000060180603000L) != 0L)
         {
            jjmatchedKind = 95;
            return 552;
         }
         if ((active1 & 0x40000L) != 0L)
            return 15;
         if ((active0 & 0x20008020000000L) != 0L)
         {
            jjmatchedKind = 95;
            return 123;
         }
         if ((active0 & 0x1004000L) != 0L)
         {
            jjmatchedKind = 95;
            return 265;
         }
         if ((active0 & 0x202004010000000L) != 0L)
         {
            jjmatchedKind = 95;
            return 436;
         }
         if ((active0 & 0x40100400L) != 0L)
         {
            jjmatchedKind = 95;
            return 501;
         }
         if ((active0 & 0x200000000000L) != 0L || (active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 95;
            return 575;
         }
         if ((active1 & 0x8000L) != 0L)
            return 5;
         if ((active1 & 0x40090000L) != 0L)
            return 580;
         if ((active0 & 0x800801004000000L) != 0L)
         {
            jjmatchedKind = 95;
            return 168;
         }
         if ((active0 & 0x15dd512a080f8800L) != 0L || (active1 & 0x1c000000L) != 0L || (active2 & 0x78L) != 0L)
         {
            jjmatchedKind = 95;
            return 581;
         }
         if ((active2 & 0x2L) != 0L)
            return 305;
         return -1;
      case 1:
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 1;
            }
            return 215;
         }
         if ((active0 & 0x40100000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 1;
            }
            return 500;
         }
         if ((active0 & 0x2004000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 1;
            }
            return 435;
         }
         if ((active0 & 0x4000800400000000L) != 0L || (active1 & 0x10000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 1;
            }
            return 582;
         }
         if ((active0 & 0x40000002000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 1;
            }
            return 551;
         }
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 1;
            }
            return 122;
         }
         if ((active0 & 0x31dd4b089827c000L) != 0L || (active1 & 0x8000000L) != 0L || (active2 & 0x78L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 1;
            }
            return 581;
         }
         if ((active0 & 0x1000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 1;
            }
            return 264;
         }
         if ((active0 & 0x2000000800L) != 0L)
            return 582;
         if ((active0 & 0x620200000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 1;
            }
            return 583;
         }
         if ((active1 & 0x2000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 1;
            }
            return 573;
         }
         if ((active0 & 0x2000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 1;
            }
            return 77;
         }
         if ((active0 & 0x100401000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 1;
            }
            return 553;
         }
         if ((active0 & 0x800001004000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 1;
            }
            return 167;
         }
         if ((active0 & 0x400L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 1;
            }
            return 507;
         }
         if ((active0 & 0x108200080000L) != 0L || (active1 & 0x4000000L) != 0L)
            return 581;
         return -1;
      case 2:
         if ((active0 & 0x10000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 2;
            return 583;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 2;
            return 214;
         }
         if ((active0 & 0x1000L) != 0L)
            return 555;
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 2;
            return 76;
         }
         if ((active0 & 0x40100000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 2;
            return 499;
         }
         if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 2;
            return 510;
         }
         if ((active0 & 0x20000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 2;
            return 121;
         }
         if ((active0 & 0x400L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 2;
            return 502;
         }
         if ((active0 & 0x2004000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 2;
            return 429;
         }
         if ((active1 & 0x2000L) != 0L)
            return 574;
         if ((active0 & 0x4000000000000000L) != 0L || (active1 & 0x10000000L) != 0L)
            return 584;
         if ((active0 & 0xc400400004000L) != 0L || (active2 & 0x8L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 2;
            return 582;
         }
         if ((active0 & 0x3fe1bb099867a000L) != 0L || (active2 & 0x70L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 2;
            return 581;
         }
         if ((active0 & 0x1004000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 2;
            return 166;
         }
         if ((active0 & 0x1000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 2;
            return 218;
         }
         if ((active1 & 0x8000000L) != 0L)
            return 581;
         return -1;
      case 3:
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 3;
            }
            return 213;
         }
         if ((active0 & 0x2000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 3;
            }
            return 582;
         }
         if ((active0 & 0x1000000L) != 0L)
            return 263;
         if ((active0 & 0x400L) != 0L)
            return 506;
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 3;
            }
            return 498;
         }
         if ((active0 & 0x3bbcfb181057c000L) != 0L || (active2 & 0x78L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 3;
            }
            return 581;
         }
         if ((active0 & 0x40000000000L) != 0L)
            return 511;
         if ((active0 & 0x2000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 3;
            }
            return 35;
         }
         if ((active0 & 0x4000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 3;
            }
            return 125;
         }
         if ((active0 & 0x2004000000000L) != 0L)
            return 434;
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 3;
            }
            return 80;
         }
         if ((active0 & 0x441000588200000L) != 0L)
            return 581;
         return -1;
      case 4:
         if ((active0 & 0x4000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 4;
            }
            return 583;
         }
         if ((active0 & 0x2000000000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 4;
            }
            return 449;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 4;
            }
            return 212;
         }
         if ((active0 & 0x4000000L) != 0L)
            return 126;
         if ((active0 & 0x2000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 4;
            }
            return 584;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 4;
            }
            return 497;
         }
         if ((active0 & 0x800000000000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 4;
            }
            return 582;
         }
         if ((active0 & 0x13cce91880138000L) != 0L || (active2 & 0x70L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 4;
            }
            return 581;
         }
         if ((active0 & 0x2000000L) != 0L)
            return 36;
         if ((active0 & 0x20000000L) != 0L)
            return 81;
         if ((active0 & 0x2030120010440000L) != 0L)
            return 581;
         return -1;
      case 5:
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 5;
            return 496;
         }
         if ((active0 & 0x22cce90880008000L) != 0L || (active2 & 0x70L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 5;
            return 581;
         }
         if ((active0 & 0x1100001000034000L) != 0L)
            return 581;
         if ((active0 & 0x2000L) != 0L)
            return 585;
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 5;
            return 211;
         }
         if ((active0 & 0x800000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 5;
            return 584;
         }
         if ((active0 & 0x100000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 5;
            return 583;
         }
         if ((active0 & 0x2000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 5;
            return 448;
         }
         return -1;
      case 6:
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 6;
            }
            return 455;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 6;
            }
            return 170;
         }
         if ((active0 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 6;
            }
            return 582;
         }
         if ((active0 & 0x20c0400800000000L) != 0L || (active2 & 0x30L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 6;
            }
            return 581;
         }
         if ((active0 & 0x800000000000000L) != 0L)
            return 585;
         if ((active0 & 0x100000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 6;
            }
            return 270;
         }
         if ((active0 & 0x2000000000000L) != 0L)
            return 586;
         if ((active0 & 0x210000000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 6;
            }
            return 583;
         }
         if ((active0 & 0x20c800080008000L) != 0L)
            return 581;
         return -1;
      case 7:
         if ((active0 & 0x2000080800100000L) != 0L)
            return 581;
         if ((active0 & 0x800000L) != 0L)
            return 171;
         if ((active0 & 0xc8610000000000L) != 0L || (active2 & 0x20L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 7;
            return 581;
         }
         if ((active0 & 0x40000000L) != 0L)
            return 456;
         return -1;
      case 8:
         if ((active0 & 0x610000000000L) != 0L)
            return 581;
         if ((active0 & 0xc8000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 8;
            return 581;
         }
         return -1;
      case 9:
         if ((active0 & 0x40000000000000L) != 0L)
            return 581;
         if ((active0 & 0x88000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 9;
            return 581;
         }
         return -1;
      case 10:
         if ((active0 & 0x88000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 10;
            return 581;
         }
         return -1;
      case 11:
         if ((active0 & 0x8000000000000L) != 0L)
            return 581;
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 11;
            return 581;
         }
         return -1;
      case 12:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 12;
            return 581;
         }
         return -1;
      case 13:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 13;
            return 581;
         }
         return -1;
      case 14:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 14;
            return 581;
         }
         return -1;
      case 15:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 15;
            return 581;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1, long active2){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1, active2), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 9);
      case 33:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x2000000L, 0x0L);
      case 36:
         return jjStartNfaWithStates_0(0, 94, 580);
      case 38:
         return jjStartNfaWithStates_0(0, 83, 580);
      case 40:
         return jjStopAtPos(0, 63);
      case 41:
         return jjStopAtPos(0, 64);
      case 42:
         return jjStartNfaWithStates_0(0, 80, 580);
      case 43:
         return jjStartNfaWithStates_0(0, 78, 579);
      case 44:
         return jjStopAtPos(0, 70);
      case 45:
         return jjStartNfaWithStates_0(0, 79, 5);
      case 46:
         jjmatchedKind = 71;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x200L, 0x0L);
      case 47:
         jjmatchedKind = 81;
         return jjMoveStringLiteralDfa1_0(0x10L, 0x0L, 0x0L);
      case 48:
         return jjStartNfaWithStates_0(0, 129, 305);
      case 49:
         return jjStopAtPos(0, 130);
      case 58:
         return jjStopAtPos(0, 76);
      case 59:
         return jjStopAtPos(0, 69);
      case 60:
         jjmatchedKind = 85;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x400000L, 0x0L);
      case 61:
         return jjStopAtPos(0, 88);
      case 62:
         jjmatchedKind = 84;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x800000L, 0x0L);
      case 63:
         return jjStopAtPos(0, 93);
      case 91:
         return jjStopAtPos(0, 67);
      case 92:
         return jjStartNfaWithStates_0(0, 82, 15);
      case 93:
         return jjStopAtPos(0, 68);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x80000L, 0x8000000L, 0x8L);
      case 98:
         return jjMoveStringLiteralDfa1_0(0x20008020000000L, 0x0L, 0x0L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x40100400L, 0x0L, 0x0L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x10000000800L, 0x0L, 0x0L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x2000060180603000L, 0x0L, 0x0L);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x4000080000800000L, 0x0L, 0x0L);
      case 103:
         return jjMoveStringLiteralDfa1_0(0x1004000L, 0x0L, 0x0L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x180100200008000L, 0x0L, 0x10L);
      case 108:
         return jjMoveStringLiteralDfa1_0(0x402000000L, 0x0L, 0x0L);
      case 110:
         return jjMoveStringLiteralDfa1_0(0x200000000000L, 0x2000L, 0x0L);
      case 111:
         return jjMoveStringLiteralDfa1_0(0x800000000L, 0x4000000L, 0x40L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0xc400000010000L, 0x0L, 0x0L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x800801004000000L, 0x0L, 0x0L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x1400000000020000L, 0x0L, 0x20L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x51002008000000L, 0x0L, 0x0L);
      case 117:
         return jjMoveStringLiteralDfa1_0(0x40000L, 0x0L, 0x0L);
      case 119:
         return jjMoveStringLiteralDfa1_0(0x202004010000000L, 0x0L, 0x0L);
      case 120:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x10000000L, 0x0L);
      case 123:
         return jjStopAtPos(0, 65);
      case 125:
         return jjStopAtPos(0, 66);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1, long active2){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1, active2);
      return 1;
   }
   switch(curChar)
   {
      case 42:
         if ((active0 & 0x10L) != 0L)
            return jjStopAtPos(1, 4);
         break;
      case 46:
         if ((active1 & 0x200L) != 0L)
            return jjStopAtPos(1, 73);
         break;
      case 61:
         if ((active1 & 0x400000L) != 0L)
            return jjStopAtPos(1, 86);
         else if ((active1 & 0x800000L) != 0L)
            return jjStopAtPos(1, 87);
         else if ((active1 & 0x2000000L) != 0L)
            return jjStopAtPos(1, 89);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x620200002800400L, active1, 0L, active2, 0L);
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0x40L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x800011004000000L, active1, 0L, active2, 0x20L);
      case 102:
         if ((active0 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 33;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000L, active1, 0L, active2, 0L);
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x18000000L, active1, 0L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x2004000000000L, active1, 0L, active2, 0L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000020080204000L, active1, 0L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x180000100449000L, active1, 0x8000000L, active2, 0x10L);
      case 111:
         if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(1, 11, 582);
         else if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 37, 582);
         return jjMoveStringLiteralDfa2_0(active0, 0x4000800441100000L, active1, 0x10002000L, active2, 0L);
      case 114:
         if ((active1 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(1, 90, 581);
         return jjMoveStringLiteralDfa2_0(active0, 0x1c400020000000L, active1, 0L, active2, 0L);
      case 115:
         if ((active0 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(1, 19, 581);
         break;
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000000L, active1, 0L, active2, 0x8L);
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000010000L, active1, 0L, active2, 0L);
      case 118:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000L, active1, 0L, active2, 0L);
      case 119:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000L, active1, 0L, active2, 0L);
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000002000L, active1, 0L, active2, 0L);
      case 121:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 39, 581);
         return jjMoveStringLiteralDfa2_0(active0, 0x41000000000000L, active1, 0L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1, active2);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1, long old2, long active2){
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(0, old0, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1, active2);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000000000L, active1, 0L, active2, 0L);
      case 98:
         return jjMoveStringLiteralDfa3_0(active0, 0x2010000L, active1, 0L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000L, active1, 0L, active2, 0L);
      case 100:
         if ((active0 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(2, 12, 555);
         else if ((active1 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(2, 91, 581);
         return jjMoveStringLiteralDfa3_0(active0, 0x80100000000000L, active1, 0L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x828000000L, active1, 0L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x40010020000L, active1, 0L, active2, 0L);
      case 106:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0L, active2, 0x40L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000800000L, active1, 0L, active2, 0L);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000000L, active1, 0L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x80040100000L, active1, 0L, active2, 0L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0xc400400004000L, active1, 0L, active2, 0x8L);
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0x41010000002000L, active1, 0L, active2, 0L);
      case 113:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0L, active2, 0x20L);
      case 114:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 62, 584);
         else if ((active1 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(2, 92, 584);
         return jjMoveStringLiteralDfa3_0(active0, 0x1200000000000000L, active1, 0L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x2800020080200400L, active1, 0L, active2, 0L);
      case 116:
         if ((active1 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(2, 77, 574);
         return jjMoveStringLiteralDfa3_0(active0, 0x22005005440000L, active1, 0L, active2, 0x10L);
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x800100000000L, active1, 0L, active2, 0L);
      case 118:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L, active1, 0L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1, active2);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1, long old2, long active2){
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(1, old0, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, 0L, active2);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x20000000L, active2, 0L);
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x30480000000000L, active2, 0L);
      case 101:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(3, 10, 506);
         else if ((active0 & 0x200000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 3;
         }
         else if ((active0 & 0x1000000000000L) != 0L)
         {
            jjmatchedKind = 48;
            jjmatchedPos = 3;
         }
         else if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 58, 581);
         return jjMoveStringLiteralDfa4_0(active0, 0x40300082000000L, active2, 0x50L);
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0xc000000000000L, active2, 0L);
      case 104:
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 38;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x3180020000040000L, active2, 0L);
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0x10818000L, active2, 0L);
      case 109:
         if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(3, 32, 581);
         else if ((active2 & 0x8L) != 0L)
            return jjStartNfaWithStates_0(3, 95, 581);
         break;
      case 110:
         if ((active0 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(3, 27, 581);
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000000L, active2, 0L);
      case 111:
         if ((active0 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_0(3, 24, 263);
         return jjMoveStringLiteralDfa4_0(active0, 0x2000L, active2, 0L);
      case 112:
         if ((active0 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(3, 34, 581);
         break;
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0x10804400000L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000L, active2, 0L);
      case 116:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 42, 511);
         return jjMoveStringLiteralDfa4_0(active0, 0x800800040020000L, active2, 0L);
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000L, active2, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, 0L, active2);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old2, long active2){
   if (((active0 &= old0) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(2, old0, 0L, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, 0L, active2);
      return 4;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa5_0(active0, 0x40000000000000L, active2, 0L);
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x4000L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x1000000000020000L, active2, 0x40L);
      case 100:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000L, active2, 0L);
      case 101:
         if ((active0 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(4, 28, 581);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 52, 581);
         return jjMoveStringLiteralDfa5_0(active0, 0x410000000000L, active2, 0x20L);
      case 102:
         if ((active0 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 41;
            jjmatchedPos = 4;
         }
         else if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 44, 581);
         return jjMoveStringLiteralDfa5_0(active0, 0x2000000000000000L, active2, 0L);
      case 103:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active2, 0x10L);
      case 104:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 53, 581);
         break;
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x20c800040010000L, active2, 0L);
      case 107:
         if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(4, 29, 81);
         break;
      case 108:
         if ((active0 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(4, 18, 581);
         else if ((active0 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(4, 25, 36);
         break;
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000000000000L, active2, 0L);
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x802000000000000L, active2, 0L);
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x80001800002000L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000L, active2, 0L);
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000900000L, active2, 0L);
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000L, active2, 0L);
      case 121:
         if ((active0 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(4, 22, 581);
         else if ((active0 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(4, 26, 126);
         break;
      default :
         break;
   }
   return jjStartNfa_0(3, active0, 0L, active2);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old2, long active2){
   if (((active0 &= old0) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(3, old0, 0L, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, 0L, active2);
      return 5;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000L, active2, 0L);
      case 99:
         if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(5, 16, 581);
         return jjMoveStringLiteralDfa6_0(active0, 0x40010000000000L, active2, 0L);
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000400000008000L, active2, 0L);
      case 101:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 56, 581);
         return jjMoveStringLiteralDfa6_0(active0, 0x80000080000000L, active2, 0x10L);
      case 104:
         if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(5, 17, 581);
         return jjMoveStringLiteralDfa6_0(active0, 0x800000L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x80800000000L, active2, 0L);
      case 108:
         if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(5, 14, 581);
         return jjMoveStringLiteralDfa6_0(active0, 0xc000000000000L, active2, 0L);
      case 110:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 36, 581);
         return jjMoveStringLiteralDfa6_0(active0, 0x200800040000000L, active2, 0x20L);
      case 112:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000L, active2, 0L);
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000000000L, active2, 0L);
      case 116:
         if ((active0 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(5, 13, 585);
         else if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 60, 581);
         else if ((active2 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(5, 95, 581);
         break;
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000000000000L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, 0L, active2);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old2, long active2){
   if (((active0 &= old0) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(4, old0, 0L, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, 0L, active2);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0x210000000000L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa7_0(active0, 0x80000000000000L, active2, 0x20L);
      case 100:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000000L, active2, 0L);
      case 101:
         if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(6, 15, 581);
         else if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 47, 581);
         else if ((active0 & 0x4000000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 6;
         }
         else if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 59, 585);
         return jjMoveStringLiteralDfa7_0(active0, 0x2008000000000000L, active2, 0L);
      case 102:
         if ((active0 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(6, 31, 581);
         break;
      case 103:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 57, 581);
         break;
      case 104:
         return jjMoveStringLiteralDfa7_0(active0, 0x40000000000000L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa7_0(active0, 0x100000L, active2, 0L);
      case 111:
         return jjMoveStringLiteralDfa7_0(active0, 0x80000000000L, active2, 0L);
      case 114:
         if ((active2 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(6, 95, 581);
         return jjMoveStringLiteralDfa7_0(active0, 0x800000L, active2, 0L);
      case 116:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 49, 586);
         break;
      case 117:
         return jjMoveStringLiteralDfa7_0(active0, 0x400040000000L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, 0L, active2);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old2, long active2){
   if (((active0 &= old0) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(5, old0, 0L, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, 0L, active2);
      return 7;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa8_0(active0, 0x8000000000000L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa8_0(active0, 0x200000000000L, active2, 0L);
      case 101:
         if ((active0 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(7, 30, 456);
         else if ((active0 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(7, 35, 581);
         else if ((active2 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(7, 95, 581);
         return jjMoveStringLiteralDfa8_0(active0, 0x40000000000000L, active2, 0L);
      case 102:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 61, 581);
         break;
      case 110:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 43, 581);
         break;
      case 114:
         return jjMoveStringLiteralDfa8_0(active0, 0x400000000000L, active2, 0L);
      case 116:
         if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(7, 20, 581);
         return jjMoveStringLiteralDfa8_0(active0, 0x80010000000000L, active2, 0L);
      case 117:
         if ((active0 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(7, 23, 171);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, 0L, active2);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old2, long active2){
   if (((active0 &= old0) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(6, old0, 0L, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa9_0(active0, 0x80000000000000L);
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x40000000000000L);
      case 101:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 40, 581);
         else if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 45, 581);
         else if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 46, 581);
         break;
      case 116:
         return jjMoveStringLiteralDfa9_0(active0, 0x8000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa10_0(active0, 0x88000000000000L);
      case 107:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 54, 581);
         break;
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa11_0(active0, 0x8000000000000L);
      case 110:
         return jjMoveStringLiteralDfa11_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa12_0(active0, 0x80000000000000L);
      case 101:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(11, 51, 581);
         break;
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa13_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 117:
         return jjMoveStringLiteralDfa14_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa14_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(12, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0, 0L, 0L);
      return 14;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa15_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(13, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa15_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(13, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, active0, 0L, 0L);
      return 15;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa16_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(14, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa16_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(14, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, active0, 0L, 0L);
      return 16;
   }
   switch(curChar)
   {
      case 115:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(16, 55, 581);
         break;
      default :
         break;
   }
   return jjStartNfa_0(15, active0, 0L, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 579;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 125:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 214:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 586:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 498:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 580:
               case 11:
                  if ((0x47000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddTwoStates(12, 11); }
                  break;
               case 212:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 265:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 551:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 496:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 435:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 583:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(300, 301); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(298, 299); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(293, 294); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(291, 292); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(287, 288); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(285, 286); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAdd(284); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(282, 283); }
                  if (curChar == 45)
                     { jjCheckNAddStates(6, 8); }
                  break;
               case 581:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 456:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 489;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(9, 12); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 170:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 579:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(300, 301); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(298, 299); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(293, 294); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(291, 292); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(287, 288); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(285, 286); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAdd(284); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 449:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 15:
                  if ((0x1008400000000L & l) != 0L && kind > 106)
                     kind = 106;
                  break;
               case 507:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 574:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 434:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 270:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 448:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 159;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(13, 16); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 575:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 553:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 213:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 499:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 497:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 211:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 573:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 171:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 204;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(17, 20); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 429:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 436:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 511:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 544;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(21, 24); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 0:
                  if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(25, 32); }
                  else if (curChar == 34)
                     { jjAddStates(33, 35); }
                  else if (curChar == 48)
                     { jjAddStates(36, 39); }
                  else if (curChar == 35)
                     { jjCheckNAddStates(40, 42); }
                  if (curChar == 34)
                     { jjCheckNAddStates(43, 50); }
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 263:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 585:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAdd(273); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 510:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 455:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 69;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(51, 54); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 582:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 501:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 584:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 167:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 500:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 506:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 218:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 555:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 552:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 81:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 114;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(55, 58); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 216:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 502:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  break;
               case 1:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjCheckNAddStates(40, 42); }
                  break;
               case 2:
                  if ((0x2400L & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 3:
                  if (curChar == 10 && kind > 5)
                     kind = 5;
                  break;
               case 4:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjCheckNAddStates(6, 8); }
                  break;
               case 7:
                  if ((0x2400L & l) != 0L && kind > 6)
                     kind = 6;
                  break;
               case 8:
                  if (curChar == 10 && kind > 6)
                     kind = 6;
                  break;
               case 9:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 18:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(18, 19); }
                  break;
               case 19:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAdd(19); }
                  break;
               case 21:
               case 26:
               case 34:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(22); }
                  break;
               case 22:
                  if ((0xff000000000000L & l) != 0L && kind > 106)
                     kind = 106;
                  break;
               case 24:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 25:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 29:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 30:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 32:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 33:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(59, 63); }
                  break;
               case 39:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(51, 54); }
                  break;
               case 41:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(51, 54); }
                  break;
               case 42:
               case 66:
                  if (curChar == 34 && kind > 115)
                     kind = 115;
                  break;
               case 45:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(64, 69); }
                  break;
               case 46:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(70, 74); }
                  break;
               case 48:
               case 53:
               case 61:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(49); }
                  break;
               case 49:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(51, 54); }
                  break;
               case 51:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 52:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 56:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 57:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 58:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 59:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 60:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 62:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(63, 65); }
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(75, 78); }
                  break;
               case 65:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(79, 81); }
                  break;
               case 67:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 70:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 73:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(82, 85); }
                  break;
               case 74:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(86, 88); }
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(89, 93); }
                  break;
               case 84:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(55, 58); }
                  break;
               case 86:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(55, 58); }
                  break;
               case 87:
               case 111:
                  if (curChar == 34 && kind > 116)
                     kind = 116;
                  break;
               case 90:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(94, 99); }
                  break;
               case 91:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(100, 104); }
                  break;
               case 93:
               case 98:
               case 106:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(94); }
                  break;
               case 94:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(55, 58); }
                  break;
               case 96:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 97:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 101:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 102:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 103:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 104:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 105:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 107:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(108, 110); }
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(105, 108); }
                  break;
               case 110:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(109, 111); }
                  break;
               case 112:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 115:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(112, 115); }
                  break;
               case 119:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(116, 118); }
                  break;
               case 128:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(119, 123); }
                  break;
               case 129:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(13, 16); }
                  break;
               case 131:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(13, 16); }
                  break;
               case 132:
               case 156:
                  if (curChar == 34 && kind > 118)
                     kind = 118;
                  break;
               case 135:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(124, 129); }
                  break;
               case 136:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(130, 134); }
                  break;
               case 138:
               case 143:
               case 151:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(139); }
                  break;
               case 139:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(13, 16); }
                  break;
               case 141:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 142:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 146:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 147:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 148:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 149:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 150:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 152:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(153, 155); }
                  break;
               case 154:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(135, 138); }
                  break;
               case 155:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(139, 141); }
                  break;
               case 157:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 160:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 163:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(142, 145); }
                  break;
               case 164:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(146, 148); }
                  break;
               case 173:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(149, 153); }
                  break;
               case 174:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(17, 20); }
                  break;
               case 176:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(17, 20); }
                  break;
               case 177:
               case 201:
                  if (curChar == 34 && kind > 120)
                     kind = 120;
                  break;
               case 180:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(154, 159); }
                  break;
               case 181:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(160, 164); }
                  break;
               case 183:
               case 188:
               case 196:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(184); }
                  break;
               case 184:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(17, 20); }
                  break;
               case 186:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 187:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 191:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 192:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 193:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 194:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 195:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 197:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(198, 200); }
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(165, 168); }
                  break;
               case 200:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(169, 171); }
                  break;
               case 202:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 205:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 208:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(172, 175); }
                  break;
               case 209:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(176, 178); }
                  break;
               case 220:
                  if (curChar == 34)
                     { jjCheckNAddStates(179, 182); }
                  break;
               case 222:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(183, 187); }
                  break;
               case 223:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(179, 182); }
                  break;
               case 225:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(179, 182); }
                  break;
               case 226:
               case 250:
                  if (curChar == 34 && kind > 121)
                     kind = 121;
                  break;
               case 229:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(188, 193); }
                  break;
               case 230:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(194, 198); }
                  break;
               case 232:
               case 237:
               case 245:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(233); }
                  break;
               case 233:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(179, 182); }
                  break;
               case 235:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 236:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 240:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 241:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 242:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 243:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 244:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 246:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(247, 249); }
                  break;
               case 248:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(199, 202); }
                  break;
               case 249:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(203, 205); }
                  break;
               case 251:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 254:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 257:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(206, 209); }
                  break;
               case 258:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(210, 212); }
                  break;
               case 268:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAdd(268); }
                  break;
               case 269:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 127)
                     kind = 127;
                  { jjCheckNAddStates(0, 2); }
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 127)
                     kind = 127;
                  { jjCheckNAdd(273); }
                  break;
               case 280:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 128)
                     kind = 128;
                  { jjCheckNAdd(280); }
                  break;
               case 281:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(25, 32); }
                  break;
               case 282:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 283:
               case 284:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAdd(284); }
                  break;
               case 285:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(285, 286); }
                  break;
               case 286:
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(287, 288); }
                  break;
               case 288:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 289:
               case 290:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAdd(290); }
                  break;
               case 291:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(291, 292); }
                  break;
               case 292:
               case 293:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(293, 294); }
                  break;
               case 295:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(213, 214); }
                  break;
               case 296:
               case 297:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  { jjCheckNAdd(297); }
                  break;
               case 298:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(298, 299); }
                  break;
               case 299:
               case 300:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(300, 301); }
                  break;
               case 301:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 302:
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(303, 294); }
                  break;
               case 304:
                  if (curChar == 48)
                     { jjAddStates(36, 39); }
                  break;
               case 306:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddTwoStates(306, 307); }
                  break;
               case 307:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAdd(307); }
                  break;
               case 309:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAddTwoStates(309, 310); }
                  break;
               case 310:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAdd(310); }
                  break;
               case 312:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(215, 216); }
                  break;
               case 313:
               case 314:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 102)
                     kind = 102;
                  { jjCheckNAdd(314); }
                  break;
               case 316:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(316, 317); }
                  break;
               case 317:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAdd(317); }
                  break;
               case 318:
                  if (curChar == 34)
                     { jjCheckNAddStates(43, 50); }
                  break;
               case 320:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(217, 221); }
                  break;
               case 321:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(222, 225); }
                  break;
               case 323:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(222, 225); }
                  break;
               case 324:
               case 374:
                  if (curChar == 34 && kind > 104)
                     kind = 104;
                  break;
               case 327:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(226, 231); }
                  break;
               case 328:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(232, 236); }
                  break;
               case 330:
               case 335:
               case 343:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(331); }
                  break;
               case 331:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(222, 225); }
                  break;
               case 333:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 334:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 337:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 338:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 339:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 340:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 341:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 342:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 345:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(237, 241); }
                  break;
               case 346:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(242, 245); }
                  break;
               case 348:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(242, 245); }
                  break;
               case 349:
                  if (curChar == 34 && kind > 105)
                     kind = 105;
                  break;
               case 352:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(246, 251); }
                  break;
               case 353:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 355:
               case 360:
               case 368:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(356); }
                  break;
               case 356:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(242, 245); }
                  break;
               case 358:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 359;
                  break;
               case 359:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 362:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 363:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 364:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 365:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 366:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 367:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 369:
                  if (curChar == 34)
                     { jjAddStates(33, 35); }
                  break;
               case 370:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(371, 373); }
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(257, 260); }
                  break;
               case 373:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(261, 263); }
                  break;
               case 375:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 376:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 377:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 378:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(379, 381); }
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(264, 267); }
                  break;
               case 381:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(268, 270); }
                  break;
               case 382:
                  if (curChar == 34 && kind > 111)
                     kind = 111;
                  break;
               case 383:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 384:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 385:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 386:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(387, 389); }
                  break;
               case 388:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(271, 274); }
                  break;
               case 389:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(275, 277); }
                  break;
               case 390:
                  if (curChar == 34 && kind > 113)
                     kind = 113;
                  break;
               case 391:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 392:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 393:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 396:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(278, 281); }
                  break;
               case 397:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(282, 284); }
                  break;
               case 400:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(285, 288); }
                  break;
               case 401:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(289, 291); }
                  break;
               case 404:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(292, 295); }
                  break;
               case 405:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(296, 298); }
                  break;
               case 409:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAddTwoStates(409, 410); }
                  break;
               case 410:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAdd(410); }
                  break;
               case 412:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 413:
                  if ((0xff000000000000L & l) != 0L && kind > 108)
                     kind = 108;
                  break;
               case 415:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 416:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 417:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 418:
                  if ((0xff000000000000L & l) != 0L && kind > 109)
                     kind = 109;
                  break;
               case 420:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 421;
                  break;
               case 421:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 422;
                  break;
               case 422:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 423:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 424:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 425:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 426:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 427;
                  break;
               case 427:
                  if ((0xff000000000000L & l) != 0L && kind > 110)
                     kind = 110;
                  break;
               case 458:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(299, 303); }
                  break;
               case 459:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(9, 12); }
                  break;
               case 461:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(9, 12); }
                  break;
               case 462:
               case 486:
                  if (curChar == 34 && kind > 117)
                     kind = 117;
                  break;
               case 465:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(304, 309); }
                  break;
               case 466:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(310, 314); }
                  break;
               case 468:
               case 473:
               case 481:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(469); }
                  break;
               case 469:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(9, 12); }
                  break;
               case 471:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 472;
                  break;
               case 472:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 473;
                  break;
               case 475:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 476:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 477;
                  break;
               case 477:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 478;
                  break;
               case 478:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 479:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 480:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 481;
                  break;
               case 482:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(483, 485); }
                  break;
               case 484:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(315, 318); }
                  break;
               case 485:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(319, 321); }
                  break;
               case 487:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 486;
                  break;
               case 488:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 487;
                  break;
               case 489:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 482;
                  break;
               case 490:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 489;
                  break;
               case 493:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(322, 325); }
                  break;
               case 494:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(326, 328); }
                  break;
               case 513:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(329, 333); }
                  break;
               case 514:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(21, 24); }
                  break;
               case 516:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(21, 24); }
                  break;
               case 517:
               case 541:
                  if (curChar == 34 && kind > 119)
                     kind = 119;
                  break;
               case 520:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(334, 339); }
                  break;
               case 521:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(340, 344); }
                  break;
               case 523:
               case 528:
               case 536:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(524); }
                  break;
               case 524:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(21, 24); }
                  break;
               case 526:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 527;
                  break;
               case 527:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 528;
                  break;
               case 530:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 531;
                  break;
               case 531:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 532;
                  break;
               case 532:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 533;
                  break;
               case 533:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 534;
                  break;
               case 534:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 535;
                  break;
               case 535:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 536;
                  break;
               case 537:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(538, 540); }
                  break;
               case 539:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(345, 348); }
                  break;
               case 540:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(349, 351); }
                  break;
               case 542:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 543:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 542;
                  break;
               case 544:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 537;
                  break;
               case 545:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 548:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(352, 355); }
                  break;
               case 549:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(356, 358); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 125:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 121)
                  {
                     if (kind > 118)
                        kind = 118;
                     { jjAddStates(359, 361); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 214:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 213;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 586:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 444;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 498:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 497;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 580:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 212:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 211;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 123:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 122;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 265:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 551:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 510;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 496:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 455;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 435:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 451;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 437;
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 121:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 583:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 270;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 581:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 456:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(492, 494); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 35:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 108)
                     { jjAddStates(362, 364); }
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 170:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 117)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjAddStates(365, 367); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 168:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 167;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 449:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 114)
                     { jjCheckNAddTwoStates(275, 272); }
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 448;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 166:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 125;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 15:
                  if ((0x14402010000020L & l) != 0L)
                  {
                     if (kind > 106)
                        kind = 106;
                  }
                  else if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 420;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 415;
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 412;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 409;
                  if (curChar == 92)
                     { jjAddStates(368, 371); }
                  break;
               case 507:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 270;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 502;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 215:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 270;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 214;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 305:
                  if (curChar == 120)
                     { jjCheckNAdd(316); }
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 312;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 309;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 574:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 434:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 444;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 433;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 270:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 100)
                     { jjCheckNAddTwoStates(275, 272); }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 448:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 116)
                     { jjCheckNAdd(445); }
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 126:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(162, 164); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 575:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 576;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 573;
                  break;
               case 78:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 553:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 570;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 563;
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 555;
                  break;
               case 213:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 212;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 76:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 499:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 498;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 497:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 496;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 211:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 170;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 264:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 114)
                     { jjCheckNAddTwoStates(275, 272); }
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 218;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 122:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 121;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 573:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 577;
                  else if (curChar == 114)
                     { jjCheckNAddTwoStates(275, 272); }
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 171:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(207, 209); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 429:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 450;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if (curChar == 104)
                     { jjCheckNAdd(445); }
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 436:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 452;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 446;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 511:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(547, 549); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAddStates(372, 379); }
                  }
                  else if (curChar == 92)
                     { jjAddStates(380, 383); }
                  else if (curChar == 96)
                     { jjCheckNAddStates(384, 389); }
                  if (curChar == 110)
                     { jjAddStates(390, 391); }
                  else if (curChar == 101)
                     { jjAddStates(392, 395); }
                  else if (curChar == 99)
                     { jjAddStates(396, 397); }
                  else if (curChar == 119)
                     { jjAddStates(398, 400); }
                  else if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 265;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 216;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 168;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 123;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 78;
                  else if (curChar == 92)
                     { jjAddStates(401, 402); }
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 263:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 114)
                     { jjCheckNAddTwoStates(275, 272); }
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 262;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 585:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAdd(273); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 510:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 116)
                  {
                     if (kind > 119)
                        kind = 119;
                     { jjAddStates(403, 405); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 455:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 101)
                  {
                     if (kind > 117)
                        kind = 117;
                     { jjAddStates(406, 408); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 36:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(72, 74); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 582:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 114)
                     { jjCheckNAddTwoStates(275, 272); }
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 501:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 507;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 500;
                  break;
               case 584:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAdd(273); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 274;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 167:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 166;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 80:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 270;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 107)
                  {
                     if (kind > 116)
                        kind = 116;
                     { jjAddStates(409, 411); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 500:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 114)
                     { jjCheckNAddTwoStates(275, 272); }
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 499;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 506:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 505;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 77:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 270;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 76;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 218:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 555:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 569;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 562;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 554;
                  break;
               case 552:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 565;
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 551;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 557;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 553;
                  break;
               case 81:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(117, 119); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 216:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 502:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                     { jjCheckNAdd(280); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(3, 5); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     { jjCheckNAdd(268); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 506;
                  else if (curChar == 95)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddTwoStates(12, 11); }
                  }
                  break;
               case 1:
                  { jjAddStates(40, 42); }
                  break;
               case 6:
                  { jjAddStates(6, 8); }
                  break;
               case 11:
                  if (curChar != 95)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddTwoStates(12, 11); }
                  break;
               case 12:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 13:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 14:
                  if (curChar == 92)
                     { jjAddStates(401, 402); }
                  break;
               case 16:
                  if (curChar == 92)
                     { jjAddStates(368, 371); }
                  break;
               case 17:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 19:
                  if (curChar != 95)
                     break;
                  if (kind > 106)
                     kind = 106;
                  jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 20:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 27:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 37:
               case 38:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(59, 63); }
                  break;
               case 39:
                  if (curChar == 95)
                     { jjCheckNAddStates(51, 54); }
                  break;
               case 40:
                  if (curChar == 92)
                     { jjAddStates(412, 413); }
                  break;
               case 41:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(51, 54); }
                  break;
               case 43:
                  if (curChar == 92)
                     { jjAddStates(414, 417); }
                  break;
               case 44:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 46:
                  if (curChar == 95)
                     { jjCheckNAddStates(70, 74); }
                  break;
               case 47:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 54:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 63:
               case 64:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(75, 78); }
                  break;
               case 65:
                  if (curChar == 95)
                     { jjCheckNAddStates(79, 81); }
                  break;
               case 71:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(72, 74); }
                  break;
               case 72:
               case 73:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(82, 85); }
                  break;
               case 74:
                  if (curChar == 95)
                     { jjCheckNAddStates(86, 88); }
                  break;
               case 75:
                  if (curChar == 96 && kind > 115)
                     kind = 115;
                  break;
               case 79:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 82:
               case 83:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(89, 93); }
                  break;
               case 84:
                  if (curChar == 95)
                     { jjCheckNAddStates(55, 58); }
                  break;
               case 85:
                  if (curChar == 92)
                     { jjAddStates(418, 419); }
                  break;
               case 86:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(55, 58); }
                  break;
               case 88:
                  if (curChar == 92)
                     { jjAddStates(420, 423); }
                  break;
               case 89:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 91:
                  if (curChar == 95)
                     { jjCheckNAddStates(100, 104); }
                  break;
               case 92:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 99:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 108:
               case 109:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(105, 108); }
                  break;
               case 110:
                  if (curChar == 95)
                     { jjCheckNAddStates(109, 111); }
                  break;
               case 116:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(117, 119); }
                  break;
               case 117:
               case 118:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(112, 115); }
                  break;
               case 119:
                  if (curChar == 95)
                     { jjCheckNAddStates(116, 118); }
                  break;
               case 120:
                  if (curChar == 96 && kind > 116)
                     kind = 116;
                  break;
               case 124:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 127:
               case 128:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(119, 123); }
                  break;
               case 129:
                  if (curChar == 95)
                     { jjCheckNAddStates(13, 16); }
                  break;
               case 130:
                  if (curChar == 92)
                     { jjAddStates(424, 425); }
                  break;
               case 131:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(13, 16); }
                  break;
               case 133:
                  if (curChar == 92)
                     { jjAddStates(426, 429); }
                  break;
               case 134:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 136:
                  if (curChar == 95)
                     { jjCheckNAddStates(130, 134); }
                  break;
               case 137:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 144:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 153:
               case 154:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(135, 138); }
                  break;
               case 155:
                  if (curChar == 95)
                     { jjCheckNAddStates(139, 141); }
                  break;
               case 161:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(162, 164); }
                  break;
               case 162:
               case 163:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(142, 145); }
                  break;
               case 164:
                  if (curChar == 95)
                     { jjCheckNAddStates(146, 148); }
                  break;
               case 165:
                  if (curChar == 96 && kind > 118)
                     kind = 118;
                  break;
               case 169:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 172:
               case 173:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(149, 153); }
                  break;
               case 174:
                  if (curChar == 95)
                     { jjCheckNAddStates(17, 20); }
                  break;
               case 175:
                  if (curChar == 92)
                     { jjAddStates(430, 431); }
                  break;
               case 176:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(17, 20); }
                  break;
               case 178:
                  if (curChar == 92)
                     { jjAddStates(432, 435); }
                  break;
               case 179:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 181:
                  if (curChar == 95)
                     { jjCheckNAddStates(160, 164); }
                  break;
               case 182:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 185:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 189:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 198:
               case 199:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(165, 168); }
                  break;
               case 200:
                  if (curChar == 95)
                     { jjCheckNAddStates(169, 171); }
                  break;
               case 206:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(207, 209); }
                  break;
               case 207:
               case 208:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(172, 175); }
                  break;
               case 209:
                  if (curChar == 95)
                     { jjCheckNAddStates(176, 178); }
                  break;
               case 210:
                  if (curChar == 96 && kind > 120)
                     kind = 120;
                  break;
               case 217:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 219:
                  if (curChar == 108)
                     { jjAddStates(436, 438); }
                  break;
               case 221:
               case 222:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(183, 187); }
                  break;
               case 223:
                  if (curChar == 95)
                     { jjCheckNAddStates(179, 182); }
                  break;
               case 224:
                  if (curChar == 92)
                     { jjAddStates(439, 440); }
                  break;
               case 225:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(179, 182); }
                  break;
               case 227:
                  if (curChar == 92)
                     { jjAddStates(441, 444); }
                  break;
               case 228:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 230:
                  if (curChar == 95)
                     { jjCheckNAddStates(194, 198); }
                  break;
               case 231:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 238:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 247:
               case 248:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(199, 202); }
                  break;
               case 249:
                  if (curChar == 95)
                     { jjCheckNAddStates(203, 205); }
                  break;
               case 255:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(256, 258); }
                  break;
               case 256:
               case 257:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(206, 209); }
                  break;
               case 258:
                  if (curChar == 95)
                     { jjCheckNAddStates(210, 212); }
                  break;
               case 259:
                  if (curChar == 96 && kind > 121)
                     kind = 121;
                  break;
               case 260:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 261:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 262:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 266:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(372, 379); }
                  break;
               case 268:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAdd(268); }
                  break;
               case 269:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 127)
                     kind = 127;
                  { jjCheckNAddStates(0, 2); }
                  break;
               case 271:
                  if (curChar == 116)
                     { jjCheckNAdd(272); }
                  break;
               case 272:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 127)
                     kind = 127;
                  { jjCheckNAdd(273); }
                  break;
               case 273:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 127)
                     kind = 127;
                  { jjCheckNAdd(273); }
                  break;
               case 274:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 275:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 277:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 278:
                  if (curChar == 114)
                     { jjCheckNAddTwoStates(275, 272); }
                  break;
               case 279:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 280:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 128)
                     kind = 128;
                  { jjCheckNAdd(280); }
                  break;
               case 284:
                  if (curChar != 95)
                     break;
                  if (kind > 97)
                     kind = 97;
                  jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 287:
                  if (curChar == 95)
                     { jjAddStates(445, 446); }
                  break;
               case 290:
                  if (curChar != 95)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 293:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(293, 294); }
                  break;
               case 294:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 297:
                  if (curChar != 95)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 300:
                  if (curChar == 95)
                     { jjAddStates(447, 448); }
                  break;
               case 303:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(303, 294); }
                  break;
               case 307:
                  if (curChar != 95)
                     break;
                  if (kind > 100)
                     kind = 100;
                  jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 308:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 310:
                  if (curChar != 95)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 311:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if (curChar != 95)
                     break;
                  if (kind > 102)
                     kind = 102;
                  jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 315:
                  if (curChar == 120)
                     { jjCheckNAdd(316); }
                  break;
               case 316:
                  if ((0x7eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(316, 317); }
                  break;
               case 317:
                  if ((0x8000007eL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAdd(317); }
                  break;
               case 319:
               case 320:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(217, 221); }
                  break;
               case 321:
                  if (curChar == 95)
                     { jjCheckNAddStates(222, 225); }
                  break;
               case 322:
                  if (curChar == 92)
                     { jjAddStates(449, 450); }
                  break;
               case 323:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(222, 225); }
                  break;
               case 325:
                  if (curChar == 92)
                     { jjAddStates(451, 454); }
                  break;
               case 326:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 328:
                  if (curChar == 95)
                     { jjCheckNAddStates(232, 236); }
                  break;
               case 329:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 336:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 337;
                  break;
               case 344:
               case 345:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(237, 241); }
                  break;
               case 346:
                  if (curChar == 95)
                     { jjCheckNAddStates(242, 245); }
                  break;
               case 347:
                  if (curChar == 92)
                     { jjAddStates(455, 456); }
                  break;
               case 348:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(242, 245); }
                  break;
               case 350:
                  if (curChar == 92)
                     { jjAddStates(457, 460); }
                  break;
               case 351:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 353:
                  if (curChar == 95)
                     { jjCheckNAddStates(252, 256); }
                  break;
               case 354:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 357:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 361:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 371:
               case 372:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(257, 260); }
                  break;
               case 373:
                  if (curChar == 95)
                     { jjCheckNAddStates(261, 263); }
                  break;
               case 379:
               case 380:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(264, 267); }
                  break;
               case 381:
                  if (curChar == 95)
                     { jjCheckNAddStates(268, 270); }
                  break;
               case 387:
               case 388:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(271, 274); }
                  break;
               case 389:
                  if (curChar == 95)
                     { jjCheckNAddStates(275, 277); }
                  break;
               case 394:
                  if (curChar == 96)
                     { jjCheckNAddStates(384, 389); }
                  break;
               case 395:
               case 396:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(278, 281); }
                  break;
               case 397:
                  if (curChar == 95)
                     { jjCheckNAddStates(282, 284); }
                  break;
               case 398:
                  if (curChar == 96 && kind > 104)
                     kind = 104;
                  break;
               case 399:
               case 400:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(285, 288); }
                  break;
               case 401:
                  if (curChar == 95)
                     { jjCheckNAddStates(289, 291); }
                  break;
               case 402:
                  if (curChar == 96 && kind > 111)
                     kind = 111;
                  break;
               case 403:
               case 404:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(292, 295); }
                  break;
               case 405:
                  if (curChar == 95)
                     { jjCheckNAddStates(296, 298); }
                  break;
               case 406:
                  if (curChar == 96 && kind > 112)
                     kind = 112;
                  break;
               case 407:
                  if (curChar == 92)
                     { jjAddStates(380, 383); }
                  break;
               case 408:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 410:
                  if (curChar != 95)
                     break;
                  if (kind > 107)
                     kind = 107;
                  jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 411:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 414:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 419:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 428:
                  if (curChar == 119)
                     { jjAddStates(398, 400); }
                  break;
               case 430:
                  if (curChar == 121 && kind > 114)
                     kind = 114;
                  break;
               case 431:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 432:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 431;
                  break;
               case 433:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 437:
                  if (curChar == 104)
                     { jjCheckNAdd(445); }
                  break;
               case 438:
                  if (curChar == 117 && kind > 123)
                     kind = 123;
                  break;
               case 439:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 440:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 441:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 442:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 441;
                  break;
               case 443:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 442;
                  break;
               case 444:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 445:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 446:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 447:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 450:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 451:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 450;
                  break;
               case 452:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 453:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 454:
                  if (curChar == 99)
                     { jjAddStates(396, 397); }
                  break;
               case 457:
               case 458:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(299, 303); }
                  break;
               case 459:
                  if (curChar == 95)
                     { jjCheckNAddStates(9, 12); }
                  break;
               case 460:
                  if (curChar == 92)
                     { jjAddStates(461, 462); }
                  break;
               case 461:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(9, 12); }
                  break;
               case 463:
                  if (curChar == 92)
                     { jjAddStates(463, 466); }
                  break;
               case 464:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 466:
                  if (curChar == 95)
                     { jjCheckNAddStates(310, 314); }
                  break;
               case 467:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 470:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 474:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 475;
                  break;
               case 483:
               case 484:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(315, 318); }
                  break;
               case 485:
                  if (curChar == 95)
                     { jjCheckNAddStates(319, 321); }
                  break;
               case 491:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(492, 494); }
                  break;
               case 492:
               case 493:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(322, 325); }
                  break;
               case 494:
                  if (curChar == 95)
                     { jjCheckNAddStates(326, 328); }
                  break;
               case 495:
                  if (curChar == 96 && kind > 117)
                     kind = 117;
                  break;
               case 503:
                  if (curChar == 101 && kind > 125)
                     kind = 125;
                  break;
               case 504:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 503;
                  break;
               case 505:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 504;
                  break;
               case 508:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 509:
                  if (curChar == 101)
                     { jjAddStates(392, 395); }
                  break;
               case 512:
               case 513:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(329, 333); }
                  break;
               case 514:
                  if (curChar == 95)
                     { jjCheckNAddStates(21, 24); }
                  break;
               case 515:
                  if (curChar == 92)
                     { jjAddStates(467, 468); }
                  break;
               case 516:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(21, 24); }
                  break;
               case 518:
                  if (curChar == 92)
                     { jjAddStates(469, 472); }
                  break;
               case 519:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 520;
                  break;
               case 521:
                  if (curChar == 95)
                     { jjCheckNAddStates(340, 344); }
                  break;
               case 522:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 523;
                  break;
               case 525:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 526;
                  break;
               case 529:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 530;
                  break;
               case 538:
               case 539:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(345, 348); }
                  break;
               case 540:
                  if (curChar == 95)
                     { jjCheckNAddStates(349, 351); }
                  break;
               case 546:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(547, 549); }
                  break;
               case 547:
               case 548:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(352, 355); }
                  break;
               case 549:
                  if (curChar == 95)
                     { jjCheckNAddStates(356, 358); }
                  break;
               case 550:
                  if (curChar == 96 && kind > 119)
                     kind = 119;
                  break;
               case 554:
                  if (curChar == 102 && kind > 122)
                     kind = 122;
                  break;
               case 556:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 553;
                  break;
               case 557:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 558:
                  if (curChar == 104 && kind > 124)
                     kind = 124;
                  break;
               case 559:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 558;
                  break;
               case 560:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 559;
                  break;
               case 561:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 560;
                  break;
               case 562:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 563:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 562;
                  break;
               case 564:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 557;
                  break;
               case 565:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 566:
                  if (curChar == 102 && kind > 126)
                     kind = 126;
                  break;
               case 567:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 568:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 567;
                  break;
               case 569:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 570:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 569;
                  break;
               case 571:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 572:
                  if (curChar == 110)
                     { jjAddStates(390, 391); }
                  break;
               case 576:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 577;
                  break;
               case 577:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 128)
                     kind = 128;
                  { jjCheckNAdd(280); }
                  break;
               case 578:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 576;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(40, 42); }
                  break;
               case 6:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(6, 8); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 579 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x80L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_1(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(1, 7);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   269, 277, 279, 12, 13, 11, 6, 7, 9, 457, 459, 460, 462, 127, 129, 130, 
   132, 172, 174, 175, 177, 512, 514, 515, 517, 282, 283, 285, 286, 291, 292, 298, 
   299, 377, 385, 393, 305, 308, 311, 315, 1, 2, 4, 319, 321, 322, 324, 344, 
   346, 347, 349, 37, 39, 40, 42, 82, 84, 85, 87, 37, 38, 39, 40, 42, 
   37, 39, 40, 45, 46, 42, 37, 39, 40, 46, 42, 63, 64, 65, 68, 63, 
   65, 68, 72, 73, 74, 75, 72, 74, 75, 82, 83, 84, 85, 87, 82, 84, 
   85, 90, 91, 87, 82, 84, 85, 91, 87, 108, 109, 110, 113, 108, 110, 113, 
   117, 118, 119, 120, 117, 119, 120, 127, 128, 129, 130, 132, 127, 129, 130, 135, 
   136, 132, 127, 129, 130, 136, 132, 153, 154, 155, 158, 153, 155, 158, 162, 163, 
   164, 165, 162, 164, 165, 172, 173, 174, 175, 177, 172, 174, 175, 180, 181, 177, 
   172, 174, 175, 181, 177, 198, 199, 200, 203, 198, 200, 203, 207, 208, 209, 210, 
   207, 209, 210, 221, 223, 224, 226, 221, 222, 223, 224, 226, 221, 223, 224, 229, 
   230, 226, 221, 223, 224, 230, 226, 247, 248, 249, 252, 247, 249, 252, 256, 257, 
   258, 259, 256, 258, 259, 295, 296, 312, 313, 319, 320, 321, 322, 324, 319, 321, 
   322, 324, 319, 321, 322, 327, 328, 324, 319, 321, 322, 328, 324, 344, 345, 346, 
   347, 349, 344, 346, 347, 349, 344, 346, 347, 352, 353, 349, 344, 346, 347, 353, 
   349, 371, 372, 373, 376, 371, 373, 376, 379, 380, 381, 384, 379, 381, 384, 387, 
   388, 389, 392, 387, 389, 392, 395, 396, 397, 398, 395, 397, 398, 399, 400, 401, 
   402, 399, 401, 402, 403, 404, 405, 406, 403, 405, 406, 457, 458, 459, 460, 462, 
   457, 459, 460, 465, 466, 462, 457, 459, 460, 466, 462, 483, 484, 485, 488, 483, 
   485, 488, 492, 493, 494, 495, 492, 494, 495, 512, 513, 514, 515, 517, 512, 514, 
   515, 520, 521, 517, 512, 514, 515, 521, 517, 538, 539, 540, 543, 538, 540, 543, 
   547, 548, 549, 550, 547, 549, 550, 126, 160, 161, 36, 70, 71, 171, 205, 206, 
   17, 20, 23, 27, 268, 12, 13, 11, 269, 277, 279, 280, 408, 411, 414, 419, 
   395, 397, 399, 401, 403, 405, 575, 578, 552, 556, 564, 571, 501, 508, 436, 447, 
   453, 15, 16, 511, 545, 546, 456, 490, 491, 81, 115, 116, 41, 43, 44, 47, 
   50, 54, 86, 88, 89, 92, 95, 99, 131, 133, 134, 137, 140, 144, 176, 178, 
   179, 182, 185, 189, 220, 254, 255, 225, 227, 228, 231, 234, 238, 287, 288, 300, 
   301, 323, 325, 326, 329, 332, 336, 348, 350, 351, 354, 357, 361, 461, 463, 464, 
   467, 470, 474, 516, 518, 519, 522, 525, 529, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, "\12", "\143\141\163\145", 
"\144\157", "\145\156\144", "\145\170\160\157\162\164", "\147\154\157\142\141\154", 
"\151\156\143\154\165\144\145", "\160\165\142\154\151\143", "\163\167\151\164\143\150", 
"\165\156\164\151\154", "\141\163", "\143\157\156\163\164\141\156\164", "\145\154\163\145", 
"\145\156\164\162\171", "\146\141\154\154\164\150\162\165", "\147\157\164\157", 
"\154\141\142\145\154", "\162\145\164\162\171", "\164\150\145\156", "\167\150\151\154\145", 
"\142\162\145\141\153", "\143\157\156\164\151\156\165\145", "\145\154\163\145\144\145\146", 
"\145\156\165\155", "\151\146", "\154\157\157\160", "\157\166\145\162\162\151\144\145", 
"\162\145\164\165\162\156", "\164\157", "\167\151\164\150", "\142\171", 
"\144\145\160\162\145\143\141\164\145", "\145\154\163\151\146", "\145\170\151\164", 
"\146\165\156\143\164\151\157\156", "\151\146\144\145\146", "\156\141\155\145\163\160\141\143\145", 
"\160\162\157\143\145\144\165\162\145", "\162\157\165\164\151\156\145", "\164\171\160\145", 
"\167\151\164\150\157\165\164", "\160\162\157\146\151\154\145", 
"\160\162\157\146\151\154\145\137\164\151\155\145", "\164\162\141\143\145", "\142\141\164\143\150", 
"\164\171\160\145\137\143\150\145\143\153", "\151\156\144\151\162\145\143\164\137\151\156\143\154\165\144\145\163", 
"\151\156\154\151\156\145", "\167\141\162\156\151\156\147", "\163\141\166\145", 
"\162\145\163\164\157\162\145", "\163\164\162\151\143\164", "\145\154\163\151\146\144\145\146", 
"\146\157\162", "\50", "\51", "\173", "\175", "\133", "\135", "\73", "\54", "\56", null, 
"\56\56", null, null, "\72", "\156\157\164", "\53", "\55", "\52", "\57", "\134", "\46", 
"\76", "\74", "\74\75", "\76\75", "\75", "\41\75", "\157\162", "\141\156\144", 
"\170\157\162", "\77", "\44", null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, "\60", "\61", 
"\141\164\157\155", "\151\156\164\145\147\145\162", "\163\145\161\165\145\156\143\145", 
"\157\142\152\145\143\164", };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002200L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 8)
         {
            jjmatchedKind = 8;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public MeuphoriaTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public MeuphoriaTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream)
  {
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 579; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "WithinComment",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xfffffffffffffe01L, 0xfffffffffffff2ffL, 0x7fL, 
};
static final long[] jjtoSkip = {
   0xfeL, 0x0L, 0x0L, 
};
static final long[] jjtoMore = {
   0x100L, 0x0L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[579];
    private final int[] jjstateSet = new int[2 * 579];

    
    protected char curChar;
}
