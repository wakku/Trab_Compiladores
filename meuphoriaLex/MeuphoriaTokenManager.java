/* MeuphoriaTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. MeuphoriaTokenManager.java */

/** Token Manager. */
@SuppressWarnings("unused")public class MeuphoriaTokenManager implements MeuphoriaConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x20008020000000L) != 0L)
         {
            jjmatchedKind = 99;
            return 284;
         }
         if ((active0 & 0x800801004000000L) != 0L)
         {
            jjmatchedKind = 99;
            return 398;
         }
         if ((active1 & 0x4000L) != 0L)
            return 1269;
         if ((active0 & 0x1004000L) != 0L)
         {
            jjmatchedKind = 99;
            return 633;
         }
         if ((active0 & 0x15dd512a080f8800L) != 0L || (active1 & 0x79c000000L) != 0L)
         {
            jjmatchedKind = 99;
            return 1270;
         }
         if ((active1 & 0x8000L) != 0L)
            return 5;
         if ((active0 & 0x2000060180603000L) != 0L)
         {
            jjmatchedKind = 99;
            return 1242;
         }
         if ((active1 & 0x40090000L) != 0L)
            return 1271;
         if ((active0 & 0x402000000L) != 0L)
         {
            jjmatchedKind = 99;
            return 170;
         }
         if ((active0 & 0x4000080000800000L) != 0L)
         {
            jjmatchedKind = 99;
            return 515;
         }
         if ((active0 & 0x40100400L) != 0L)
         {
            jjmatchedKind = 99;
            return 1122;
         }
         if ((active0 & 0x202004010000000L) != 0L)
         {
            jjmatchedKind = 99;
            return 988;
         }
         if ((active0 & 0x200000000000L) != 0L || (active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 99;
            return 1265;
         }
         if ((active1 & 0x40000L) != 0L)
            return 38;
         return -1;
      case 1:
         if ((active0 & 0x400L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 1128;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 514;
         }
         if ((active0 & 0x1000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 632;
         }
         if ((active0 & 0x40000002000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 1241;
         }
         if ((active0 & 0x100401000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 1243;
         }
         if ((active0 & 0x2004000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 987;
         }
         if ((active1 & 0x2000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 1263;
         }
         if ((active0 & 0x4000800400000000L) != 0L || (active1 & 0x10000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 1272;
         }
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 283;
         }
         if ((active0 & 0x108200080000L) != 0L || (active1 & 0x4000000L) != 0L)
            return 1270;
         if ((active0 & 0x620200000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 1273;
         }
         if ((active0 & 0x31dd4b089827c000L) != 0L || (active1 & 0x788000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 1270;
         }
         if ((active0 & 0x40100000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 1121;
         }
         if ((active0 & 0x2000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 169;
         }
         if ((active0 & 0x800001004000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 397;
         }
         if ((active0 & 0x2000000800L) != 0L)
            return 1272;
         return -1;
      case 2:
         if ((active0 & 0x3fe1bb099867a000L) != 0L || (active1 & 0x700000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 1270;
         }
         if ((active0 & 0x40100000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 1120;
         }
         if ((active0 & 0x20000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 282;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 513;
         }
         if ((active0 & 0x2004000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 981;
         }
         if ((active0 & 0x400L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 1123;
         }
         if ((active1 & 0x2000L) != 0L)
            return 1264;
         if ((active0 & 0x4000000000000000L) != 0L || (active1 & 0x10000000L) != 0L)
            return 1274;
         if ((active0 & 0x1004000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 396;
         }
         if ((active1 & 0x8000000L) != 0L)
            return 1270;
         if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 1131;
         }
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 168;
         }
         if ((active0 & 0xc400400004000L) != 0L || (active1 & 0x80000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 1272;
         }
         if ((active0 & 0x10000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 1273;
         }
         if ((active0 & 0x1000L) != 0L)
            return 1245;
         if ((active0 & 0x1000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 517;
         }
         return -1;
      case 3:
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 512;
         }
         if ((active0 & 0x2000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 1272;
         }
         if ((active0 & 0x2004000000000L) != 0L)
            return 986;
         if ((active0 & 0x1000000L) != 0L)
            return 631;
         if ((active0 & 0x441000588200000L) != 0L || (active1 & 0x80000000L) != 0L)
            return 1270;
         if ((active0 & 0x4000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 286;
         }
         if ((active0 & 0x3bbcfb181057c000L) != 0L || (active1 & 0x700000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 1270;
         }
         if ((active0 & 0x40000000000L) != 0L)
            return 1132;
         if ((active0 & 0x2000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 58;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 1119;
         }
         if ((active0 & 0x400L) != 0L)
            return 1127;
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 172;
         }
         return -1;
      case 4:
         if ((active0 & 0x2000000L) != 0L)
            return 59;
         if ((active0 & 0x138ce91880138000L) != 0L || (active1 & 0x700000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 4;
            }
            return 1270;
         }
         if ((active0 & 0x2000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 4;
            }
            return 1274;
         }
         if ((active0 & 0x4000000L) != 0L)
            return 287;
         if ((active0 & 0x2000000000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 4;
            }
            return 1001;
         }
         if ((active0 & 0x800000000000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 4;
            }
            return 1272;
         }
         if ((active0 & 0x40000000000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 4;
            }
            return 1275;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 4;
            }
            return 1118;
         }
         if ((active0 & 0x2030120010440000L) != 0L)
            return 1270;
         if ((active0 & 0x20000000L) != 0L)
            return 173;
         if ((active0 & 0x4000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 4;
            }
            return 1273;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 4;
            }
            return 511;
         }
         return -1;
      case 5:
         if ((active0 & 0x2000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 5;
            return 1000;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 5;
            return 510;
         }
         if ((active0 & 0x100000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 5;
            return 1273;
         }
         if ((active0 & 0x2000L) != 0L)
            return 1276;
         if ((active0 & 0x800000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 5;
            return 1274;
         }
         if ((active0 & 0x22cce90880008000L) != 0L || (active1 & 0x300000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 5;
            return 1270;
         }
         if ((active0 & 0x1100001000034000L) != 0L || (active1 & 0x400000000L) != 0L)
            return 1270;
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 5;
            return 1117;
         }
         return -1;
      case 6:
         if ((active0 & 0x100000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 6;
            }
            return 638;
         }
         if ((active0 & 0x800000000000000L) != 0L)
            return 1276;
         if ((active0 & 0x80000000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 6;
            }
            return 1272;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 6;
            }
            return 400;
         }
         if ((active0 & 0x210000000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 6;
            }
            return 1273;
         }
         if ((active0 & 0x2000000000000L) != 0L)
            return 1277;
         if ((active0 & 0x20c800080008000L) != 0L || (active1 & 0x100000000L) != 0L)
            return 1270;
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 6;
            }
            return 1007;
         }
         if ((active0 & 0x20c0400800000000L) != 0L || (active1 & 0x200000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 6;
            }
            return 1270;
         }
         return -1;
      case 7:
         if ((active0 & 0xc0610000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 7;
            return 1270;
         }
         if ((active0 & 0x800000L) != 0L)
            return 401;
         if ((active0 & 0x40000000L) != 0L)
            return 1008;
         if ((active0 & 0x2000080800100000L) != 0L || (active1 & 0x200000000L) != 0L)
            return 1270;
         if ((active0 & 0x8000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 7;
            return 1275;
         }
         return -1;
      case 8:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 8;
            return 1275;
         }
         if ((active0 & 0x48000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 8;
            return 1270;
         }
         if ((active0 & 0x610000000000L) != 0L)
            return 1270;
         return -1;
      case 9:
         if ((active0 & 0x88000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 9;
            return 1270;
         }
         if ((active0 & 0x40000000000000L) != 0L)
            return 1270;
         return -1;
      case 10:
         if ((active0 & 0x88000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 10;
            return 1270;
         }
         return -1;
      case 11:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 11;
            return 1270;
         }
         if ((active0 & 0x8000000000000L) != 0L)
            return 1270;
         return -1;
      case 12:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 12;
            return 1270;
         }
         return -1;
      case 13:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 13;
            return 1270;
         }
         return -1;
      case 14:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 14;
            return 1270;
         }
         return -1;
      case 15:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 15;
            return 1270;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 9);
      case 33:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x2000000L);
      case 36:
         return jjStartNfaWithStates_0(0, 94, 1271);
      case 38:
         return jjStartNfaWithStates_0(0, 83, 1271);
      case 40:
         return jjStopAtPos(0, 63);
      case 41:
         return jjStopAtPos(0, 64);
      case 42:
         return jjStartNfaWithStates_0(0, 80, 1271);
      case 43:
         return jjStartNfaWithStates_0(0, 78, 1269);
      case 44:
         return jjStopAtPos(0, 70);
      case 45:
         return jjStartNfaWithStates_0(0, 79, 5);
      case 46:
         jjmatchedKind = 71;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x200L);
      case 47:
         jjmatchedKind = 81;
         return jjMoveStringLiteralDfa1_0(0x10L, 0x0L);
      case 58:
         return jjStopAtPos(0, 76);
      case 59:
         return jjStopAtPos(0, 69);
      case 60:
         jjmatchedKind = 85;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x400000L);
      case 61:
         return jjStopAtPos(0, 88);
      case 62:
         jjmatchedKind = 84;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x800000L);
      case 63:
         return jjStopAtPos(0, 93);
      case 91:
         return jjStopAtPos(0, 67);
      case 92:
         return jjStartNfaWithStates_0(0, 82, 38);
      case 93:
         return jjStopAtPos(0, 68);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x80000L, 0x88000000L);
      case 98:
         return jjMoveStringLiteralDfa1_0(0x20008020000000L, 0x0L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x40100400L, 0x0L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x10000000800L, 0x0L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x2000060180603000L, 0x0L);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x4000080000800000L, 0x0L);
      case 103:
         return jjMoveStringLiteralDfa1_0(0x1004000L, 0x0L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x180100200008000L, 0x100000000L);
      case 108:
         return jjMoveStringLiteralDfa1_0(0x402000000L, 0x0L);
      case 110:
         return jjMoveStringLiteralDfa1_0(0x200000000000L, 0x2000L);
      case 111:
         return jjMoveStringLiteralDfa1_0(0x800000000L, 0x404000000L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0xc400000010000L, 0x0L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x800801004000000L, 0x0L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x1400000000020000L, 0x200000000L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x51002008000000L, 0x0L);
      case 117:
         return jjMoveStringLiteralDfa1_0(0x40000L, 0x0L);
      case 119:
         return jjMoveStringLiteralDfa1_0(0x202004010000000L, 0x0L);
      case 120:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x10000000L);
      case 123:
         return jjStopAtPos(0, 65);
      case 125:
         return jjStopAtPos(0, 66);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 42:
         if ((active0 & 0x10L) != 0L)
            return jjStopAtPos(1, 4);
         break;
      case 46:
         if ((active1 & 0x200L) != 0L)
            return jjStopAtPos(1, 73);
         break;
      case 61:
         if ((active1 & 0x400000L) != 0L)
            return jjStopAtPos(1, 86);
         else if ((active1 & 0x800000L) != 0L)
            return jjStopAtPos(1, 87);
         else if ((active1 & 0x2000000L) != 0L)
            return jjStopAtPos(1, 89);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x620200002800400L, active1, 0L);
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400000000L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x800011004000000L, active1, 0x200000000L);
      case 102:
         if ((active0 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 33;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000L, active1, 0L);
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x18000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x2004000000000L, active1, 0L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000020080204000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x180000100449000L, active1, 0x108000000L);
      case 111:
         if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(1, 11, 1272);
         else if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 37, 1272);
         return jjMoveStringLiteralDfa2_0(active0, 0x4000800441100000L, active1, 0x10002000L);
      case 114:
         if ((active1 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(1, 90, 1270);
         return jjMoveStringLiteralDfa2_0(active0, 0x1c400020000000L, active1, 0L);
      case 115:
         if ((active0 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(1, 19, 1270);
         break;
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000000L, active1, 0x80000000L);
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000010000L, active1, 0L);
      case 118:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000L, active1, 0L);
      case 119:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000L, active1, 0L);
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000002000L, active1, 0L);
      case 121:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 39, 1270);
         return jjMoveStringLiteralDfa2_0(active0, 0x41000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000000000L, active1, 0L);
      case 98:
         return jjMoveStringLiteralDfa3_0(active0, 0x2010000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000L, active1, 0L);
      case 100:
         if ((active0 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(2, 12, 1245);
         else if ((active1 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(2, 91, 1270);
         return jjMoveStringLiteralDfa3_0(active0, 0x80100000000000L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x828000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x40010020000L, active1, 0L);
      case 106:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x400000000L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000800000L, active1, 0L);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x80040100000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0xc400400004000L, active1, 0x80000000L);
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0x41010000002000L, active1, 0L);
      case 113:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200000000L);
      case 114:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 62, 1274);
         else if ((active1 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(2, 92, 1274);
         return jjMoveStringLiteralDfa3_0(active0, 0x1200000000000000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x2800020080200400L, active1, 0L);
      case 116:
         if ((active1 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(2, 77, 1264);
         return jjMoveStringLiteralDfa3_0(active0, 0x22005005440000L, active1, 0x100000000L);
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x800100000000L, active1, 0L);
      case 118:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x20000000L, active1, 0L);
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x30480000000000L, active1, 0L);
      case 101:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(3, 10, 1127);
         else if ((active0 & 0x200000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 3;
         }
         else if ((active0 & 0x1000000000000L) != 0L)
         {
            jjmatchedKind = 48;
            jjmatchedPos = 3;
         }
         else if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 58, 1270);
         return jjMoveStringLiteralDfa4_0(active0, 0x40300082000000L, active1, 0x500000000L);
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0xc000000000000L, active1, 0L);
      case 104:
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 38;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x3180020000040000L, active1, 0L);
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0x10818000L, active1, 0L);
      case 109:
         if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(3, 32, 1270);
         else if ((active1 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(3, 95, 1270);
         break;
      case 110:
         if ((active0 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(3, 27, 1270);
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000000L, active1, 0L);
      case 111:
         if ((active0 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_0(3, 24, 631);
         return jjMoveStringLiteralDfa4_0(active0, 0x2000L, active1, 0L);
      case 112:
         if ((active0 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(3, 34, 1270);
         break;
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0x10804400000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000L, active1, 0L);
      case 116:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 42, 1132);
         return jjMoveStringLiteralDfa4_0(active0, 0x800800040020000L, active1, 0L);
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000L, active1, 0x200000000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa5_0(active0, 0x40000000000000L, active1, 0L);
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x4000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x1000000000020000L, active1, 0x400000000L);
      case 100:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000L, active1, 0L);
      case 101:
         if ((active0 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(4, 28, 1270);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 52, 1270);
         return jjMoveStringLiteralDfa5_0(active0, 0x410000000000L, active1, 0x200000000L);
      case 102:
         if ((active0 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 41;
            jjmatchedPos = 4;
         }
         else if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 44, 1270);
         return jjMoveStringLiteralDfa5_0(active0, 0x2000000000000000L, active1, 0L);
      case 103:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x100000000L);
      case 104:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 53, 1270);
         break;
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x20c800040010000L, active1, 0L);
      case 107:
         if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(4, 29, 173);
         break;
      case 108:
         if ((active0 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(4, 18, 1270);
         else if ((active0 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(4, 25, 59);
         break;
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000000000000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x802000000000000L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x80001800002000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000L, active1, 0L);
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000900000L, active1, 0L);
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000L, active1, 0L);
      case 121:
         if ((active0 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(4, 22, 1270);
         else if ((active0 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(4, 26, 287);
         break;
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000L, active1, 0L);
      case 99:
         if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(5, 16, 1270);
         return jjMoveStringLiteralDfa6_0(active0, 0x40010000000000L, active1, 0L);
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000400000008000L, active1, 0L);
      case 101:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 56, 1270);
         return jjMoveStringLiteralDfa6_0(active0, 0x80000080000000L, active1, 0x100000000L);
      case 104:
         if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(5, 17, 1270);
         return jjMoveStringLiteralDfa6_0(active0, 0x800000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x80800000000L, active1, 0L);
      case 108:
         if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(5, 14, 1270);
         return jjMoveStringLiteralDfa6_0(active0, 0xc000000000000L, active1, 0L);
      case 110:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 36, 1270);
         return jjMoveStringLiteralDfa6_0(active0, 0x200800040000000L, active1, 0x200000000L);
      case 112:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000000000L, active1, 0L);
      case 116:
         if ((active0 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(5, 13, 1276);
         else if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 60, 1270);
         else if ((active1 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(5, 98, 1270);
         break;
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0x210000000000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa7_0(active0, 0x80000000000000L, active1, 0x200000000L);
      case 100:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000000L, active1, 0L);
      case 101:
         if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(6, 15, 1270);
         else if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 47, 1270);
         else if ((active0 & 0x4000000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 6;
         }
         else if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 59, 1276);
         return jjMoveStringLiteralDfa7_0(active0, 0x2008000000000000L, active1, 0L);
      case 102:
         if ((active0 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(6, 31, 1270);
         break;
      case 103:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 57, 1270);
         break;
      case 104:
         return jjMoveStringLiteralDfa7_0(active0, 0x40000000000000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa7_0(active0, 0x100000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa7_0(active0, 0x80000000000L, active1, 0L);
      case 114:
         if ((active1 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(6, 96, 1270);
         return jjMoveStringLiteralDfa7_0(active0, 0x800000L, active1, 0L);
      case 116:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 49, 1277);
         break;
      case 117:
         return jjMoveStringLiteralDfa7_0(active0, 0x400040000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa8_0(active0, 0x8000000000000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa8_0(active0, 0x200000000000L, active1, 0L);
      case 101:
         if ((active0 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(7, 30, 1008);
         else if ((active0 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(7, 35, 1270);
         else if ((active1 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(7, 97, 1270);
         return jjMoveStringLiteralDfa8_0(active0, 0x40000000000000L, active1, 0L);
      case 102:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 61, 1270);
         break;
      case 110:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 43, 1270);
         break;
      case 114:
         return jjMoveStringLiteralDfa8_0(active0, 0x400000000000L, active1, 0L);
      case 116:
         if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(7, 20, 1270);
         return jjMoveStringLiteralDfa8_0(active0, 0x80010000000000L, active1, 0L);
      case 117:
         if ((active0 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(7, 23, 401);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa9_0(active0, 0x80000000000000L);
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x40000000000000L);
      case 101:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 40, 1270);
         else if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 45, 1270);
         else if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 46, 1270);
         break;
      case 116:
         return jjMoveStringLiteralDfa9_0(active0, 0x8000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa10_0(active0, 0x88000000000000L);
      case 107:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 54, 1270);
         break;
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa11_0(active0, 0x8000000000000L);
      case 110:
         return jjMoveStringLiteralDfa11_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa12_0(active0, 0x80000000000000L);
      case 101:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(11, 51, 1270);
         break;
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa13_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 117:
         return jjMoveStringLiteralDfa14_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L);
}
private int jjMoveStringLiteralDfa14_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(12, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0, 0L);
      return 14;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa15_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(13, active0, 0L);
}
private int jjMoveStringLiteralDfa15_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(13, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, active0, 0L);
      return 15;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa16_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(14, active0, 0L);
}
private int jjMoveStringLiteralDfa16_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(14, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, active0, 0L);
      return 16;
   }
   switch(curChar)
   {
      case 115:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(16, 55, 1270);
         break;
      default :
         break;
   }
   return jjStartNfa_0(15, active0, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1269;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 400:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1120:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1277:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1123:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1263:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1245:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 988:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1265:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 632:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1122:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 366;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(18, 22); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 398:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 282:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1264:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1000:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 173:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 252;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(23, 27); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1119:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 981:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1242:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1132:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1211;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(28, 32); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1276:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAdd(641); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1270:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 59:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 138;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(33, 37); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 512:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 515:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 638:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1274:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 397:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(668, 669); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(666, 667); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(661, 662); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(659, 660); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(655, 656); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(653, 654); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 101)
                        kind = 101;
                     { jjCheckNAdd(652); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(650, 651); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(38, 41); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(34, 35); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(30, 31); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(28, 29); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(23, 24); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(21, 22); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(17, 18); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(15, 16); }
                  if (curChar == 45)
                     { jjCheckNAddStates(42, 44); }
                  break;
               case 1241:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 284:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1118:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 38:
                  if ((0x1008400000000L & l) != 0L && kind > 110)
                     kind = 110;
                  break;
               case 1131:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 986:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1128:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 0:
                  if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(45, 60); }
                  else if (curChar == 34)
                     { jjAddStates(61, 63); }
                  else if (curChar == 48)
                     { jjAddStates(64, 67); }
                  else if (curChar == 35)
                     { jjCheckNAddStates(68, 70); }
                  if (curChar == 34)
                     { jjCheckNAddStates(71, 80); }
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 511:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 172:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 517:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1127:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 631:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 401:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 480;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(81, 85); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1008:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1087;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(86, 90); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1001:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1271:
                  if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  break;
               case 987:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 514:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1269:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(668, 669); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(666, 667); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(661, 662); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(659, 660); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(655, 656); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(653, 654); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 101)
                        kind = 101;
                     { jjCheckNAdd(652); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(650, 651); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(38, 41); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(34, 35); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(30, 31); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(28, 29); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(23, 24); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(21, 22); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(17, 18); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(15, 16); }
                  break;
               case 633:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 396:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1121:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1117:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 283:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 170:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1007:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1273:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1272:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1243:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 510:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1275:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 513:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  break;
               case 1:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjCheckNAddStates(68, 70); }
                  break;
               case 2:
                  if ((0x2400L & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 3:
                  if (curChar == 10 && kind > 5)
                     kind = 5;
                  break;
               case 4:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjCheckNAddStates(42, 44); }
                  break;
               case 7:
                  if ((0x2400L & l) != 0L && kind > 6)
                     kind = 6;
                  break;
               case 8:
                  if (curChar == 10 && kind > 6)
                     kind = 6;
                  break;
               case 9:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 11:
                  if ((0x47000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(0, 2); }
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(14, 17); }
                  break;
               case 14:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(3, 10); }
                  break;
               case 15:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(15, 16); }
                  break;
               case 16:
               case 17:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(17, 18); }
                  break;
               case 18:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
               case 20:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(91, 94); }
                  break;
               case 21:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(21, 22); }
                  break;
               case 22:
               case 23:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(23, 24); }
                  break;
               case 25:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(95, 96); }
                  break;
               case 26:
               case 27:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(97, 100); }
                  break;
               case 28:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(28, 29); }
                  break;
               case 29:
               case 30:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(30, 31); }
                  break;
               case 31:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 32:
               case 33:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(33, 24); }
                  break;
               case 34:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(34, 35); }
                  break;
               case 35:
               case 36:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(38, 41); }
                  break;
               case 41:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  { jjCheckNAddTwoStates(41, 42); }
                  break;
               case 42:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  { jjCheckNAdd(42); }
                  break;
               case 44:
               case 49:
               case 57:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(45); }
                  break;
               case 45:
                  if ((0xff000000000000L & l) != 0L && kind > 110)
                     kind = 110;
                  break;
               case 47:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 48:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 52:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 53:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 55:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 56:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(101, 106); }
                  break;
               case 62:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(33, 37); }
                  break;
               case 64:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(33, 37); }
                  break;
               case 65:
               case 112:
                  if (curChar == 34 && kind > 119)
                     kind = 119;
                  break;
               case 66:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(107, 114); }
                  break;
               case 67:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(67, 68); }
                  break;
               case 68:
               case 69:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(69, 70); }
                  break;
               case 70:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 71:
               case 72:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(115, 120); }
                  break;
               case 73:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(73, 74); }
                  break;
               case 74:
               case 75:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(75, 76); }
                  break;
               case 77:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(121, 122); }
                  break;
               case 78:
               case 79:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(123, 128); }
                  break;
               case 80:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(80, 81); }
                  break;
               case 81:
               case 82:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(82, 83); }
                  break;
               case 83:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 84:
               case 85:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(85, 76); }
                  break;
               case 86:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(86, 87); }
                  break;
               case 87:
               case 88:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(129, 134); }
                  break;
               case 91:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(135, 141); }
                  break;
               case 92:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(142, 147); }
                  break;
               case 94:
               case 99:
               case 107:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(95); }
                  break;
               case 95:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(33, 37); }
                  break;
               case 97:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 98:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 102:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 103:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 104:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 105:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 106:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 108:
                  if (curChar == 34)
                     { jjCheckNAddStates(148, 150); }
                  break;
               case 110:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(151, 155); }
                  break;
               case 111:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(156, 159); }
                  break;
               case 113:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(160, 167); }
                  break;
               case 116:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(116, 117); }
                  break;
               case 117:
               case 118:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(118, 119); }
                  break;
               case 119:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 120:
               case 121:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(168, 172); }
                  break;
               case 122:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(122, 123); }
                  break;
               case 123:
               case 124:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(124, 125); }
                  break;
               case 126:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(173, 174); }
                  break;
               case 127:
               case 128:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(175, 179); }
                  break;
               case 129:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(129, 130); }
                  break;
               case 130:
               case 131:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(131, 132); }
                  break;
               case 132:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 133:
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(134, 125); }
                  break;
               case 135:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(135, 136); }
                  break;
               case 136:
               case 137:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(180, 184); }
                  break;
               case 138:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 139:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 142:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(185, 189); }
                  break;
               case 143:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(190, 193); }
                  break;
               case 145:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(194, 201); }
                  break;
               case 146:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(146, 147); }
                  break;
               case 147:
               case 148:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(148, 149); }
                  break;
               case 149:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 150:
               case 151:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(202, 206); }
                  break;
               case 152:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(152, 153); }
                  break;
               case 153:
               case 154:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(154, 155); }
                  break;
               case 156:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(207, 208); }
                  break;
               case 157:
               case 158:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(209, 213); }
                  break;
               case 159:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(159, 160); }
                  break;
               case 160:
               case 161:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(161, 162); }
                  break;
               case 162:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 163:
               case 164:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(164, 155); }
                  break;
               case 165:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(165, 166); }
                  break;
               case 166:
               case 167:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(214, 218); }
                  break;
               case 175:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(219, 224); }
                  break;
               case 176:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(23, 27); }
                  break;
               case 178:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(23, 27); }
                  break;
               case 179:
               case 226:
                  if (curChar == 34 && kind > 120)
                     kind = 120;
                  break;
               case 180:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(225, 232); }
                  break;
               case 181:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(181, 182); }
                  break;
               case 182:
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(183, 184); }
                  break;
               case 184:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 185:
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(233, 238); }
                  break;
               case 187:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(187, 188); }
                  break;
               case 188:
               case 189:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(189, 190); }
                  break;
               case 191:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(239, 240); }
                  break;
               case 192:
               case 193:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(241, 246); }
                  break;
               case 194:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(194, 195); }
                  break;
               case 195:
               case 196:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(196, 197); }
                  break;
               case 197:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 198:
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(199, 190); }
                  break;
               case 200:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(200, 201); }
                  break;
               case 201:
               case 202:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(247, 252); }
                  break;
               case 205:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(253, 259); }
                  break;
               case 206:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(260, 265); }
                  break;
               case 208:
               case 213:
               case 221:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(209); }
                  break;
               case 209:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(23, 27); }
                  break;
               case 211:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 212:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 216:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 217:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 218:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 219:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 220:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 222:
                  if (curChar == 34)
                     { jjCheckNAddStates(266, 268); }
                  break;
               case 224:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(269, 273); }
                  break;
               case 225:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(274, 277); }
                  break;
               case 227:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 228:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(278, 285); }
                  break;
               case 230:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(230, 231); }
                  break;
               case 231:
               case 232:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(232, 233); }
                  break;
               case 233:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 234:
               case 235:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(286, 290); }
                  break;
               case 236:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(236, 237); }
                  break;
               case 237:
               case 238:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 240:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(291, 292); }
                  break;
               case 241:
               case 242:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(293, 297); }
                  break;
               case 243:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(243, 244); }
                  break;
               case 244:
               case 245:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(245, 246); }
                  break;
               case 246:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 247:
               case 248:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(248, 239); }
                  break;
               case 249:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(249, 250); }
                  break;
               case 250:
               case 251:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(298, 302); }
                  break;
               case 252:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 253:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 256:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(303, 307); }
                  break;
               case 257:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(308, 311); }
                  break;
               case 259:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(312, 319); }
                  break;
               case 260:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(260, 261); }
                  break;
               case 261:
               case 262:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(262, 263); }
                  break;
               case 263:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 264:
               case 265:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(320, 324); }
                  break;
               case 266:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(266, 267); }
                  break;
               case 267:
               case 268:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(268, 269); }
                  break;
               case 270:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(325, 326); }
                  break;
               case 271:
               case 272:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(327, 331); }
                  break;
               case 273:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(273, 274); }
                  break;
               case 274:
               case 275:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(275, 276); }
                  break;
               case 276:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 277:
               case 278:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(278, 269); }
                  break;
               case 279:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(279, 280); }
                  break;
               case 280:
               case 281:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(332, 336); }
                  break;
               case 289:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(337, 342); }
                  break;
               case 290:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(18, 22); }
                  break;
               case 292:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(18, 22); }
                  break;
               case 293:
               case 340:
                  if (curChar == 34 && kind > 122)
                     kind = 122;
                  break;
               case 294:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(343, 350); }
                  break;
               case 295:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(295, 296); }
                  break;
               case 296:
               case 297:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(297, 298); }
                  break;
               case 298:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 299:
               case 300:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(351, 356); }
                  break;
               case 301:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(301, 302); }
                  break;
               case 302:
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(303, 304); }
                  break;
               case 305:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(357, 358); }
                  break;
               case 306:
               case 307:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(359, 364); }
                  break;
               case 308:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(308, 309); }
                  break;
               case 309:
               case 310:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(310, 311); }
                  break;
               case 311:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 312:
               case 313:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(313, 304); }
                  break;
               case 314:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(314, 315); }
                  break;
               case 315:
               case 316:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(365, 370); }
                  break;
               case 319:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(371, 377); }
                  break;
               case 320:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(378, 383); }
                  break;
               case 322:
               case 327:
               case 335:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(323); }
                  break;
               case 323:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(18, 22); }
                  break;
               case 325:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 326:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 329:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 330:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 331:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 332:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 333:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 334:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 336:
                  if (curChar == 34)
                     { jjCheckNAddStates(384, 386); }
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(387, 391); }
                  break;
               case 339:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(392, 395); }
                  break;
               case 341:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 343:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(396, 403); }
                  break;
               case 344:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(344, 345); }
                  break;
               case 345:
               case 346:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(346, 347); }
                  break;
               case 347:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 348:
               case 349:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(404, 408); }
                  break;
               case 350:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(350, 351); }
                  break;
               case 351:
               case 352:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(352, 353); }
                  break;
               case 354:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(409, 410); }
                  break;
               case 355:
               case 356:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(411, 415); }
                  break;
               case 357:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(357, 358); }
                  break;
               case 358:
               case 359:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(359, 360); }
                  break;
               case 360:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 361:
               case 362:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(362, 353); }
                  break;
               case 363:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(363, 364); }
                  break;
               case 364:
               case 365:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(416, 420); }
                  break;
               case 366:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 367:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(421, 425); }
                  break;
               case 371:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(426, 429); }
                  break;
               case 373:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(430, 437); }
                  break;
               case 374:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(374, 375); }
                  break;
               case 375:
               case 376:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(376, 377); }
                  break;
               case 377:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 378:
               case 379:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(438, 442); }
                  break;
               case 380:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(380, 381); }
                  break;
               case 381:
               case 382:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(382, 383); }
                  break;
               case 384:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(443, 444); }
                  break;
               case 385:
               case 386:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(445, 449); }
                  break;
               case 387:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(387, 388); }
                  break;
               case 388:
               case 389:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(389, 390); }
                  break;
               case 390:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 391:
               case 392:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(392, 383); }
                  break;
               case 393:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(393, 394); }
                  break;
               case 394:
               case 395:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(450, 454); }
                  break;
               case 403:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(455, 460); }
                  break;
               case 404:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(81, 85); }
                  break;
               case 406:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(81, 85); }
                  break;
               case 407:
               case 454:
                  if (curChar == 34 && kind > 124)
                     kind = 124;
                  break;
               case 408:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(461, 468); }
                  break;
               case 409:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(409, 410); }
                  break;
               case 410:
               case 411:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(411, 412); }
                  break;
               case 412:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 413:
               case 414:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(469, 474); }
                  break;
               case 415:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(415, 416); }
                  break;
               case 416:
               case 417:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 419:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(475, 476); }
                  break;
               case 420:
               case 421:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(477, 482); }
                  break;
               case 422:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(422, 423); }
                  break;
               case 423:
               case 424:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(424, 425); }
                  break;
               case 425:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 426:
               case 427:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(427, 418); }
                  break;
               case 428:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(428, 429); }
                  break;
               case 429:
               case 430:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(483, 488); }
                  break;
               case 433:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(489, 495); }
                  break;
               case 434:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(496, 501); }
                  break;
               case 436:
               case 441:
               case 449:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(437); }
                  break;
               case 437:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(81, 85); }
                  break;
               case 439:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 440:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 441;
                  break;
               case 443:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 444:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 445:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 446:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 447:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 448:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 450:
                  if (curChar == 34)
                     { jjCheckNAddStates(502, 504); }
                  break;
               case 452:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(505, 509); }
                  break;
               case 453:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(510, 513); }
                  break;
               case 455:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 456:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 457:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(514, 521); }
                  break;
               case 458:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(458, 459); }
                  break;
               case 459:
               case 460:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(460, 461); }
                  break;
               case 461:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 462:
               case 463:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(522, 526); }
                  break;
               case 464:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(464, 465); }
                  break;
               case 465:
               case 466:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(466, 467); }
                  break;
               case 468:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(527, 528); }
                  break;
               case 469:
               case 470:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(529, 533); }
                  break;
               case 471:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(471, 472); }
                  break;
               case 472:
               case 473:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(473, 474); }
                  break;
               case 474:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 475;
                  break;
               case 475:
               case 476:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(476, 467); }
                  break;
               case 477:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(477, 478); }
                  break;
               case 478:
               case 479:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(534, 538); }
                  break;
               case 480:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 450;
                  break;
               case 481:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 484:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(539, 543); }
                  break;
               case 485:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(544, 547); }
                  break;
               case 487:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(548, 555); }
                  break;
               case 488:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(488, 489); }
                  break;
               case 489:
               case 490:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(490, 491); }
                  break;
               case 491:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 492;
                  break;
               case 492:
               case 493:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(556, 560); }
                  break;
               case 494:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(494, 495); }
                  break;
               case 495:
               case 496:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(496, 497); }
                  break;
               case 498:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(561, 562); }
                  break;
               case 499:
               case 500:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(563, 567); }
                  break;
               case 501:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(501, 502); }
                  break;
               case 502:
               case 503:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(503, 504); }
                  break;
               case 504:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 505;
                  break;
               case 505:
               case 506:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(506, 497); }
                  break;
               case 507:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(507, 508); }
                  break;
               case 508:
               case 509:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(568, 572); }
                  break;
               case 519:
                  if (curChar == 34)
                     { jjCheckNAddStates(573, 577); }
                  break;
               case 521:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(578, 583); }
                  break;
               case 522:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(573, 577); }
                  break;
               case 524:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(573, 577); }
                  break;
               case 525:
               case 572:
                  if (curChar == 34 && kind > 125)
                     kind = 125;
                  break;
               case 526:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(584, 591); }
                  break;
               case 527:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(527, 528); }
                  break;
               case 528:
               case 529:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(529, 530); }
                  break;
               case 530:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 531;
                  break;
               case 531:
               case 532:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(592, 597); }
                  break;
               case 533:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(533, 534); }
                  break;
               case 534:
               case 535:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(535, 536); }
                  break;
               case 537:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(598, 599); }
                  break;
               case 538:
               case 539:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(600, 605); }
                  break;
               case 540:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(540, 541); }
                  break;
               case 541:
               case 542:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(542, 543); }
                  break;
               case 543:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 544:
               case 545:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(545, 536); }
                  break;
               case 546:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(546, 547); }
                  break;
               case 547:
               case 548:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(606, 611); }
                  break;
               case 551:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(612, 618); }
                  break;
               case 552:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(619, 624); }
                  break;
               case 554:
               case 559:
               case 567:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(555); }
                  break;
               case 555:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(573, 577); }
                  break;
               case 557:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 558;
                  break;
               case 558:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 559;
                  break;
               case 561:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 562;
                  break;
               case 562:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 563:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 564;
                  break;
               case 564:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 565:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 566:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 567;
                  break;
               case 568:
                  if (curChar == 34)
                     { jjCheckNAddStates(625, 627); }
                  break;
               case 570:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(628, 632); }
                  break;
               case 571:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(633, 636); }
                  break;
               case 573:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 574:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 573;
                  break;
               case 575:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(637, 644); }
                  break;
               case 576:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(576, 577); }
                  break;
               case 577:
               case 578:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(578, 579); }
                  break;
               case 579:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 580:
               case 581:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(645, 649); }
                  break;
               case 582:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(582, 583); }
                  break;
               case 583:
               case 584:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(584, 585); }
                  break;
               case 586:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(650, 651); }
                  break;
               case 587:
               case 588:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(652, 656); }
                  break;
               case 589:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(589, 590); }
                  break;
               case 590:
               case 591:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(591, 592); }
                  break;
               case 592:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 593:
               case 594:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(594, 585); }
                  break;
               case 595:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(595, 596); }
                  break;
               case 596:
               case 597:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(657, 661); }
                  break;
               case 598:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 599:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 602:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(662, 666); }
                  break;
               case 603:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(667, 670); }
                  break;
               case 605:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(671, 678); }
                  break;
               case 606:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(606, 607); }
                  break;
               case 607:
               case 608:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(608, 609); }
                  break;
               case 609:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 610;
                  break;
               case 610:
               case 611:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(679, 683); }
                  break;
               case 612:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(612, 613); }
                  break;
               case 613:
               case 614:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(614, 615); }
                  break;
               case 616:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(684, 685); }
                  break;
               case 617:
               case 618:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(686, 690); }
                  break;
               case 619:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(619, 620); }
                  break;
               case 620:
               case 621:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(621, 622); }
                  break;
               case 622:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 623;
                  break;
               case 623:
               case 624:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(624, 615); }
                  break;
               case 625:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(625, 626); }
                  break;
               case 626:
               case 627:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(691, 695); }
                  break;
               case 636:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  { jjCheckNAdd(636); }
                  break;
               case 637:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 131)
                     kind = 131;
                  { jjCheckNAddStates(11, 13); }
                  break;
               case 641:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 131)
                     kind = 131;
                  { jjCheckNAdd(641); }
                  break;
               case 648:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 132)
                     kind = 132;
                  { jjCheckNAdd(648); }
                  break;
               case 649:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(45, 60); }
                  break;
               case 650:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(650, 651); }
                  break;
               case 651:
               case 652:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAdd(652); }
                  break;
               case 653:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(653, 654); }
                  break;
               case 654:
               case 655:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(655, 656); }
                  break;
               case 656:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 657;
                  break;
               case 657:
               case 658:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 102)
                     kind = 102;
                  { jjCheckNAdd(658); }
                  break;
               case 659:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(659, 660); }
                  break;
               case 660:
               case 661:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(661, 662); }
                  break;
               case 663:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(696, 697); }
                  break;
               case 664:
               case 665:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAdd(665); }
                  break;
               case 666:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(666, 667); }
                  break;
               case 667:
               case 668:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(668, 669); }
                  break;
               case 669:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 670;
                  break;
               case 670:
               case 671:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(671, 662); }
                  break;
               case 672:
                  if (curChar == 48)
                     { jjAddStates(64, 67); }
                  break;
               case 674:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(674, 675); }
                  break;
               case 675:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAdd(675); }
                  break;
               case 677:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddTwoStates(677, 678); }
                  break;
               case 678:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAdd(678); }
                  break;
               case 680:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(698, 699); }
                  break;
               case 681:
               case 682:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAdd(682); }
                  break;
               case 684:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAddTwoStates(684, 685); }
                  break;
               case 685:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAdd(685); }
                  break;
               case 686:
                  if (curChar == 34)
                     { jjCheckNAddStates(71, 80); }
                  break;
               case 688:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(700, 705); }
                  break;
               case 689:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(706, 710); }
                  break;
               case 691:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(706, 710); }
                  break;
               case 692:
               case 788:
                  if (curChar == 34 && kind > 108)
                     kind = 108;
                  break;
               case 693:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(711, 718); }
                  break;
               case 694:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(694, 695); }
                  break;
               case 695:
               case 696:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(696, 697); }
                  break;
               case 697:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 698;
                  break;
               case 698:
               case 699:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(719, 724); }
                  break;
               case 700:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(700, 701); }
                  break;
               case 701:
               case 702:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(702, 703); }
                  break;
               case 704:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(725, 726); }
                  break;
               case 705:
               case 706:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(727, 732); }
                  break;
               case 707:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(707, 708); }
                  break;
               case 708:
               case 709:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(709, 710); }
                  break;
               case 710:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 711;
                  break;
               case 711:
               case 712:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(712, 703); }
                  break;
               case 713:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(713, 714); }
                  break;
               case 714:
               case 715:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(733, 738); }
                  break;
               case 718:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(739, 745); }
                  break;
               case 719:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(746, 751); }
                  break;
               case 721:
               case 726:
               case 734:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(722); }
                  break;
               case 722:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(706, 710); }
                  break;
               case 724:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 725;
                  break;
               case 725:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 726;
                  break;
               case 728:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 729;
                  break;
               case 729:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 730;
                  break;
               case 730:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 731;
                  break;
               case 731:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 732;
                  break;
               case 732:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 733;
                  break;
               case 733:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 734;
                  break;
               case 736:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(752, 757); }
                  break;
               case 737:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(758, 762); }
                  break;
               case 739:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(758, 762); }
                  break;
               case 740:
                  if (curChar == 34 && kind > 109)
                     kind = 109;
                  break;
               case 741:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(763, 770); }
                  break;
               case 742:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(742, 743); }
                  break;
               case 743:
               case 744:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(744, 745); }
                  break;
               case 745:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 746;
                  break;
               case 746:
               case 747:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(771, 776); }
                  break;
               case 748:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(748, 749); }
                  break;
               case 749:
               case 750:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(750, 751); }
                  break;
               case 752:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(777, 778); }
                  break;
               case 753:
               case 754:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(779, 784); }
                  break;
               case 755:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(755, 756); }
                  break;
               case 756:
               case 757:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(757, 758); }
                  break;
               case 758:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 759;
                  break;
               case 759:
               case 760:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(760, 751); }
                  break;
               case 761:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(761, 762); }
                  break;
               case 762:
               case 763:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(785, 790); }
                  break;
               case 766:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(791, 797); }
                  break;
               case 767:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(798, 803); }
                  break;
               case 769:
               case 774:
               case 782:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(770); }
                  break;
               case 770:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(758, 762); }
                  break;
               case 772:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 773;
                  break;
               case 773:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 774;
                  break;
               case 776:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 777;
                  break;
               case 777:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 778;
                  break;
               case 778:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 779;
                  break;
               case 779:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 780;
                  break;
               case 780:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 781;
                  break;
               case 781:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 782;
                  break;
               case 783:
                  if (curChar == 34)
                     { jjAddStates(61, 63); }
                  break;
               case 784:
                  if (curChar == 34)
                     { jjCheckNAddStates(804, 806); }
                  break;
               case 786:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(807, 811); }
                  break;
               case 787:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(812, 815); }
                  break;
               case 789:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 788;
                  break;
               case 790:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 789;
                  break;
               case 791:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(816, 823); }
                  break;
               case 792:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(792, 793); }
                  break;
               case 793:
               case 794:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(794, 795); }
                  break;
               case 795:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 796;
                  break;
               case 796:
               case 797:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(824, 828); }
                  break;
               case 798:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(798, 799); }
                  break;
               case 799:
               case 800:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(800, 801); }
                  break;
               case 802:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(829, 830); }
                  break;
               case 803:
               case 804:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(831, 835); }
                  break;
               case 805:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(805, 806); }
                  break;
               case 806:
               case 807:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(807, 808); }
                  break;
               case 808:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 809;
                  break;
               case 809:
               case 810:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(810, 801); }
                  break;
               case 811:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(811, 812); }
                  break;
               case 812:
               case 813:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(836, 840); }
                  break;
               case 814:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 784;
                  break;
               case 815:
                  if (curChar == 34)
                     { jjCheckNAddStates(841, 843); }
                  break;
               case 817:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(844, 848); }
                  break;
               case 818:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(849, 852); }
                  break;
               case 819:
                  if (curChar == 34 && kind > 115)
                     kind = 115;
                  break;
               case 820:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 819;
                  break;
               case 821:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 820;
                  break;
               case 822:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(853, 860); }
                  break;
               case 823:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(823, 824); }
                  break;
               case 824:
               case 825:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(825, 826); }
                  break;
               case 826:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 827;
                  break;
               case 827:
               case 828:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(861, 865); }
                  break;
               case 829:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(829, 830); }
                  break;
               case 830:
               case 831:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(831, 832); }
                  break;
               case 833:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(866, 867); }
                  break;
               case 834:
               case 835:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(868, 872); }
                  break;
               case 836:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(836, 837); }
                  break;
               case 837:
               case 838:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(838, 839); }
                  break;
               case 839:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 840;
                  break;
               case 840:
               case 841:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(841, 832); }
                  break;
               case 842:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(842, 843); }
                  break;
               case 843:
               case 844:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(873, 877); }
                  break;
               case 845:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 815;
                  break;
               case 846:
                  if (curChar == 34)
                     { jjCheckNAddStates(878, 880); }
                  break;
               case 848:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(881, 885); }
                  break;
               case 849:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(886, 889); }
                  break;
               case 850:
                  if (curChar == 34 && kind > 117)
                     kind = 117;
                  break;
               case 851:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 850;
                  break;
               case 852:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 851;
                  break;
               case 853:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(890, 897); }
                  break;
               case 854:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(854, 855); }
                  break;
               case 855:
               case 856:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(856, 857); }
                  break;
               case 857:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 858;
                  break;
               case 858:
               case 859:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(898, 902); }
                  break;
               case 860:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(860, 861); }
                  break;
               case 861:
               case 862:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(862, 863); }
                  break;
               case 864:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(903, 904); }
                  break;
               case 865:
               case 866:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(905, 909); }
                  break;
               case 867:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(867, 868); }
                  break;
               case 868:
               case 869:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(869, 870); }
                  break;
               case 870:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 871;
                  break;
               case 871:
               case 872:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(872, 863); }
                  break;
               case 873:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(873, 874); }
                  break;
               case 874:
               case 875:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(910, 914); }
                  break;
               case 876:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 846;
                  break;
               case 879:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(915, 919); }
                  break;
               case 880:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(920, 923); }
                  break;
               case 882:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(924, 931); }
                  break;
               case 883:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(883, 884); }
                  break;
               case 884:
               case 885:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(885, 886); }
                  break;
               case 886:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 887;
                  break;
               case 887:
               case 888:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(932, 936); }
                  break;
               case 889:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(889, 890); }
                  break;
               case 890:
               case 891:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(891, 892); }
                  break;
               case 893:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(937, 938); }
                  break;
               case 894:
               case 895:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(939, 943); }
                  break;
               case 896:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(896, 897); }
                  break;
               case 897:
               case 898:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(898, 899); }
                  break;
               case 899:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 900;
                  break;
               case 900:
               case 901:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(901, 892); }
                  break;
               case 902:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(902, 903); }
                  break;
               case 903:
               case 904:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(944, 948); }
                  break;
               case 906:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(949, 953); }
                  break;
               case 907:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(954, 957); }
                  break;
               case 909:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(958, 965); }
                  break;
               case 910:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(910, 911); }
                  break;
               case 911:
               case 912:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(912, 913); }
                  break;
               case 913:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 914;
                  break;
               case 914:
               case 915:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(966, 970); }
                  break;
               case 916:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(916, 917); }
                  break;
               case 917:
               case 918:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(918, 919); }
                  break;
               case 920:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(971, 972); }
                  break;
               case 921:
               case 922:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(973, 977); }
                  break;
               case 923:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(923, 924); }
                  break;
               case 924:
               case 925:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(925, 926); }
                  break;
               case 926:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 927;
                  break;
               case 927:
               case 928:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(928, 919); }
                  break;
               case 929:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(929, 930); }
                  break;
               case 930:
               case 931:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(978, 982); }
                  break;
               case 933:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(983, 987); }
                  break;
               case 934:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(988, 991); }
                  break;
               case 936:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(992, 999); }
                  break;
               case 937:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(937, 938); }
                  break;
               case 938:
               case 939:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(939, 940); }
                  break;
               case 940:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 941;
                  break;
               case 941:
               case 942:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1000, 1004); }
                  break;
               case 943:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(943, 944); }
                  break;
               case 944:
               case 945:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(945, 946); }
                  break;
               case 947:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(1005, 1006); }
                  break;
               case 948:
               case 949:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1007, 1011); }
                  break;
               case 950:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(950, 951); }
                  break;
               case 951:
               case 952:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(952, 953); }
                  break;
               case 953:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 954;
                  break;
               case 954:
               case 955:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(955, 946); }
                  break;
               case 956:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(956, 957); }
                  break;
               case 957:
               case 958:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1012, 1016); }
                  break;
               case 961:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 111)
                     kind = 111;
                  { jjCheckNAddTwoStates(961, 962); }
                  break;
               case 962:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 111)
                     kind = 111;
                  { jjCheckNAdd(962); }
                  break;
               case 964:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 965;
                  break;
               case 965:
                  if ((0xff000000000000L & l) != 0L && kind > 112)
                     kind = 112;
                  break;
               case 967:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 968;
                  break;
               case 968:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 969;
                  break;
               case 969:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 970;
                  break;
               case 970:
                  if ((0xff000000000000L & l) != 0L && kind > 113)
                     kind = 113;
                  break;
               case 972:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 973;
                  break;
               case 973:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 974;
                  break;
               case 974:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 975;
                  break;
               case 975:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 976;
                  break;
               case 976:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 977;
                  break;
               case 977:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 978;
                  break;
               case 978:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 979;
                  break;
               case 979:
                  if ((0xff000000000000L & l) != 0L && kind > 114)
                     kind = 114;
                  break;
               case 1010:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1017, 1022); }
                  break;
               case 1011:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(86, 90); }
                  break;
               case 1013:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(86, 90); }
                  break;
               case 1014:
               case 1061:
                  if (curChar == 34 && kind > 121)
                     kind = 121;
                  break;
               case 1015:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(1023, 1030); }
                  break;
               case 1016:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1016, 1017); }
                  break;
               case 1017:
               case 1018:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1018, 1019); }
                  break;
               case 1019:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1020;
                  break;
               case 1020:
               case 1021:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1031, 1036); }
                  break;
               case 1022:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1022, 1023); }
                  break;
               case 1023:
               case 1024:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1024, 1025); }
                  break;
               case 1026:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(1037, 1038); }
                  break;
               case 1027:
               case 1028:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1039, 1044); }
                  break;
               case 1029:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1029, 1030); }
                  break;
               case 1030:
               case 1031:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1031, 1032); }
                  break;
               case 1032:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1033;
                  break;
               case 1033:
               case 1034:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1034, 1025); }
                  break;
               case 1035:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1035, 1036); }
                  break;
               case 1036:
               case 1037:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1045, 1050); }
                  break;
               case 1040:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(1051, 1057); }
                  break;
               case 1041:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(1058, 1063); }
                  break;
               case 1043:
               case 1048:
               case 1056:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(1044); }
                  break;
               case 1044:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(86, 90); }
                  break;
               case 1046:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1047;
                  break;
               case 1047:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1048;
                  break;
               case 1050:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1051;
                  break;
               case 1051:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1052;
                  break;
               case 1052:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1053;
                  break;
               case 1053:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1054;
                  break;
               case 1054:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1055;
                  break;
               case 1055:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1056;
                  break;
               case 1057:
                  if (curChar == 34)
                     { jjCheckNAddStates(1064, 1066); }
                  break;
               case 1059:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1067, 1071); }
                  break;
               case 1060:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(1072, 1075); }
                  break;
               case 1062:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1061;
                  break;
               case 1063:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1062;
                  break;
               case 1064:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(1076, 1083); }
                  break;
               case 1065:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1065, 1066); }
                  break;
               case 1066:
               case 1067:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1067, 1068); }
                  break;
               case 1068:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1069;
                  break;
               case 1069:
               case 1070:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1084, 1088); }
                  break;
               case 1071:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1071, 1072); }
                  break;
               case 1072:
               case 1073:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1073, 1074); }
                  break;
               case 1075:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(1089, 1090); }
                  break;
               case 1076:
               case 1077:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1091, 1095); }
                  break;
               case 1078:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1078, 1079); }
                  break;
               case 1079:
               case 1080:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1080, 1081); }
                  break;
               case 1081:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1082;
                  break;
               case 1082:
               case 1083:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1083, 1074); }
                  break;
               case 1084:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1084, 1085); }
                  break;
               case 1085:
               case 1086:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1096, 1100); }
                  break;
               case 1087:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1057;
                  break;
               case 1088:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1087;
                  break;
               case 1091:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1101, 1105); }
                  break;
               case 1092:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(1106, 1109); }
                  break;
               case 1094:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(1110, 1117); }
                  break;
               case 1095:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1095, 1096); }
                  break;
               case 1096:
               case 1097:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1097, 1098); }
                  break;
               case 1098:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1099;
                  break;
               case 1099:
               case 1100:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1118, 1122); }
                  break;
               case 1101:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1101, 1102); }
                  break;
               case 1102:
               case 1103:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1103, 1104); }
                  break;
               case 1105:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(1123, 1124); }
                  break;
               case 1106:
               case 1107:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1125, 1129); }
                  break;
               case 1108:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1108, 1109); }
                  break;
               case 1109:
               case 1110:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1110, 1111); }
                  break;
               case 1111:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1112;
                  break;
               case 1112:
               case 1113:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1113, 1104); }
                  break;
               case 1114:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1114, 1115); }
                  break;
               case 1115:
               case 1116:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1130, 1134); }
                  break;
               case 1134:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1135, 1140); }
                  break;
               case 1135:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(28, 32); }
                  break;
               case 1137:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(28, 32); }
                  break;
               case 1138:
               case 1185:
                  if (curChar == 34 && kind > 123)
                     kind = 123;
                  break;
               case 1139:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(1141, 1148); }
                  break;
               case 1140:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1140, 1141); }
                  break;
               case 1141:
               case 1142:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1142, 1143); }
                  break;
               case 1143:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1144;
                  break;
               case 1144:
               case 1145:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1149, 1154); }
                  break;
               case 1146:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1146, 1147); }
                  break;
               case 1147:
               case 1148:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1148, 1149); }
                  break;
               case 1150:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(1155, 1156); }
                  break;
               case 1151:
               case 1152:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1157, 1162); }
                  break;
               case 1153:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1153, 1154); }
                  break;
               case 1154:
               case 1155:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1155, 1156); }
                  break;
               case 1156:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1157;
                  break;
               case 1157:
               case 1158:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1158, 1149); }
                  break;
               case 1159:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1159, 1160); }
                  break;
               case 1160:
               case 1161:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1163, 1168); }
                  break;
               case 1164:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(1169, 1175); }
                  break;
               case 1165:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(1176, 1181); }
                  break;
               case 1167:
               case 1172:
               case 1180:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(1168); }
                  break;
               case 1168:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(28, 32); }
                  break;
               case 1170:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1171;
                  break;
               case 1171:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1172;
                  break;
               case 1174:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1175;
                  break;
               case 1175:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1176;
                  break;
               case 1176:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1177;
                  break;
               case 1177:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1178;
                  break;
               case 1178:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1179;
                  break;
               case 1179:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1180;
                  break;
               case 1181:
                  if (curChar == 34)
                     { jjCheckNAddStates(1182, 1184); }
                  break;
               case 1183:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1185, 1189); }
                  break;
               case 1184:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(1190, 1193); }
                  break;
               case 1186:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1185;
                  break;
               case 1187:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1186;
                  break;
               case 1188:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(1194, 1201); }
                  break;
               case 1189:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1189, 1190); }
                  break;
               case 1190:
               case 1191:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1191, 1192); }
                  break;
               case 1192:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1193;
                  break;
               case 1193:
               case 1194:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1202, 1206); }
                  break;
               case 1195:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1195, 1196); }
                  break;
               case 1196:
               case 1197:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1197, 1198); }
                  break;
               case 1199:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(1207, 1208); }
                  break;
               case 1200:
               case 1201:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1209, 1213); }
                  break;
               case 1202:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1202, 1203); }
                  break;
               case 1203:
               case 1204:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1204, 1205); }
                  break;
               case 1205:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1206;
                  break;
               case 1206:
               case 1207:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1207, 1198); }
                  break;
               case 1208:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1208, 1209); }
                  break;
               case 1209:
               case 1210:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1214, 1218); }
                  break;
               case 1211:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1181;
                  break;
               case 1212:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1211;
                  break;
               case 1215:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1219, 1223); }
                  break;
               case 1216:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(1224, 1227); }
                  break;
               case 1218:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(1228, 1235); }
                  break;
               case 1219:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1219, 1220); }
                  break;
               case 1220:
               case 1221:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1221, 1222); }
                  break;
               case 1222:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1223;
                  break;
               case 1223:
               case 1224:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1236, 1240); }
                  break;
               case 1225:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1225, 1226); }
                  break;
               case 1226:
               case 1227:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1227, 1228); }
                  break;
               case 1229:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(1241, 1242); }
                  break;
               case 1230:
               case 1231:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1243, 1247); }
                  break;
               case 1232:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1232, 1233); }
                  break;
               case 1233:
               case 1234:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1234, 1235); }
                  break;
               case 1235:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1236;
                  break;
               case 1236:
               case 1237:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1237, 1228); }
                  break;
               case 1238:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1238, 1239); }
                  break;
               case 1239:
               case 1240:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1248, 1252); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 400:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 117)
                  {
                     if (kind > 124)
                        kind = 124;
                     { jjAddStates(1253, 1255); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1120:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 1119;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1277:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 996;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1123:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 1127;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1263:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 1267;
                  else if (curChar == 114)
                     { jjCheckNAddTwoStates(643, 640); }
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 1264;
                  break;
               case 1245:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 1259;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 1252;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 1244;
                  break;
               case 988:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 1004;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 998;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 987;
                  break;
               case 1265:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 1266;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 1263;
                  break;
               case 632:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 114)
                     { jjCheckNAddTwoStates(643, 640); }
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 517;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1122:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 1128;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 1121;
                  break;
               case 287:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddStates(1256, 1258); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 398:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 397;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 282:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 1264:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1000:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 116)
                     { jjCheckNAdd(997); }
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 173:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddStates(1259, 1261); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1119:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 1118;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 169:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 638;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 168;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 981:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 1002;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if (curChar == 104)
                     { jjCheckNAdd(997); }
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 986;
                  break;
               case 1242:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 1255;
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 1241;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 1247;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 1243;
                  break;
               case 1132:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddStates(1262, 1264); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1276:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAdd(641); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1270:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 59:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddStates(1265, 1267); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 512:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 511;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 515:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 638:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 100)
                     { jjCheckNAddTwoStates(643, 640); }
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 168:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 58;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1274:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAdd(641); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 642;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 397:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 396;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1241:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 1131;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 284:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 283;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1118:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 1117;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 38:
                  if ((0x14402010000020L & l) != 0L)
                  {
                     if (kind > 110)
                        kind = 110;
                  }
                  else if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 972;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 967;
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 964;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 961;
                  if (curChar == 92)
                     { jjAddStates(1268, 1271); }
                  break;
               case 1131:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 116)
                  {
                     if (kind > 123)
                        kind = 123;
                     { jjAddStates(1272, 1274); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 986:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 996;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 985;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 1001;
                  break;
               case 58:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 108)
                     { jjAddStates(1275, 1277); }
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1128:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 638;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 1123;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAddStates(1278, 1286); }
                  }
                  else if (curChar == 92)
                     { jjAddStates(1287, 1290); }
                  else if (curChar == 96)
                     { jjCheckNAddStates(1291, 1299); }
                  if (curChar == 110)
                     { jjAddStates(1300, 1301); }
                  else if (curChar == 101)
                     { jjAddStates(1302, 1305); }
                  else if (curChar == 99)
                     { jjAddStates(1306, 1307); }
                  else if (curChar == 119)
                     { jjAddStates(1308, 1310); }
                  else if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 633;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 515;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 398;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 284;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 170;
                  else if (curChar == 92)
                     { jjAddStates(1311, 1312); }
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 511:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 510;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 172:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 638;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 107)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjAddStates(1313, 1315); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 517:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 631;
                  break;
               case 1127:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 1126;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 631:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 114)
                     { jjCheckNAddTwoStates(643, 640); }
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 630;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 401:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddStates(1316, 1318); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1008:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddStates(1319, 1321); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1001:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 114)
                     { jjCheckNAddTwoStates(643, 640); }
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 1000;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1271:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 987:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 1003;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 989;
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 981;
                  break;
               case 514:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 638;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 513;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 633:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 396:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 286;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1121:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 114)
                     { jjCheckNAddTwoStates(643, 640); }
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 1120;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1117:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 1007;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 283:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 282;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 286:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 121)
                  {
                     if (kind > 122)
                        kind = 122;
                     { jjAddStates(1322, 1324); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 170:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 1007:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 101)
                  {
                     if (kind > 121)
                        kind = 121;
                     { jjAddStates(1325, 1327); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1273:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 638;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1272:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 114)
                     { jjCheckNAddTwoStates(643, 640); }
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1243:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 1260;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 1253;
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 1245;
                  break;
               case 510:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 400;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1275:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 513:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 132)
                        kind = 132;
                     { jjCheckNAdd(648); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     { jjCheckNAddStates(11, 13); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(14, 17); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(636); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 512;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 2); }
                  }
                  break;
               case 1:
                  { jjAddStates(68, 70); }
                  break;
               case 6:
                  { jjAddStates(42, 44); }
                  break;
               case 11:
                  if (curChar != 95)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(0, 2); }
                  break;
               case 12:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(14, 17); }
                  break;
               case 13:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(14, 17); }
                  break;
               case 17:
                  if (curChar == 95)
                     { jjAddStates(1328, 1329); }
                  break;
               case 20:
                  if (curChar != 95)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(91, 94); }
                  break;
               case 23:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(23, 24); }
                  break;
               case 24:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar != 95)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(97, 100); }
                  break;
               case 30:
                  if (curChar == 95)
                     { jjAddStates(1330, 1331); }
                  break;
               case 33:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(33, 24); }
                  break;
               case 36:
                  if (curChar != 95)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(38, 41); }
                  break;
               case 37:
                  if (curChar == 92)
                     { jjAddStates(1311, 1312); }
                  break;
               case 39:
                  if (curChar == 92)
                     { jjAddStates(1268, 1271); }
                  break;
               case 40:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 42:
                  if (curChar != 95)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 43:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 50:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 60:
               case 61:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(101, 106); }
                  break;
               case 62:
                  if (curChar == 95)
                     { jjCheckNAddStates(33, 37); }
                  break;
               case 63:
                  if (curChar == 92)
                     { jjAddStates(1332, 1333); }
                  break;
               case 64:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(33, 37); }
                  break;
               case 69:
                  if (curChar == 95)
                     { jjAddStates(1334, 1335); }
                  break;
               case 72:
                  if (curChar == 95)
                     { jjCheckNAddStates(115, 120); }
                  break;
               case 75:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(75, 76); }
                  break;
               case 76:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 95)
                     { jjCheckNAddStates(123, 128); }
                  break;
               case 82:
                  if (curChar == 95)
                     { jjAddStates(1336, 1337); }
                  break;
               case 85:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(85, 76); }
                  break;
               case 88:
                  if (curChar == 95)
                     { jjCheckNAddStates(129, 134); }
                  break;
               case 89:
                  if (curChar == 92)
                     { jjAddStates(1338, 1341); }
                  break;
               case 90:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 92:
                  if (curChar == 95)
                     { jjCheckNAddStates(142, 147); }
                  break;
               case 93:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 100:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 109:
               case 110:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(151, 155); }
                  break;
               case 111:
                  if (curChar == 95)
                     { jjCheckNAddStates(156, 159); }
                  break;
               case 118:
                  if (curChar == 95)
                     { jjAddStates(1342, 1343); }
                  break;
               case 121:
                  if (curChar == 95)
                     { jjCheckNAddStates(168, 172); }
                  break;
               case 124:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(124, 125); }
                  break;
               case 125:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 95)
                     { jjCheckNAddStates(175, 179); }
                  break;
               case 131:
                  if (curChar == 95)
                     { jjAddStates(1344, 1345); }
                  break;
               case 134:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(134, 125); }
                  break;
               case 137:
                  if (curChar == 95)
                     { jjCheckNAddStates(180, 184); }
                  break;
               case 140:
                  if (curChar == 96)
                     { jjCheckNAddStates(1265, 1267); }
                  break;
               case 141:
               case 142:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(185, 189); }
                  break;
               case 143:
                  if (curChar == 95)
                     { jjCheckNAddStates(190, 193); }
                  break;
               case 144:
                  if (curChar == 96 && kind > 119)
                     kind = 119;
                  break;
               case 148:
                  if (curChar == 95)
                     { jjAddStates(1346, 1347); }
                  break;
               case 151:
                  if (curChar == 95)
                     { jjCheckNAddStates(202, 206); }
                  break;
               case 154:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(154, 155); }
                  break;
               case 155:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if (curChar == 95)
                     { jjCheckNAddStates(209, 213); }
                  break;
               case 161:
                  if (curChar == 95)
                     { jjAddStates(1348, 1349); }
                  break;
               case 164:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(164, 155); }
                  break;
               case 167:
                  if (curChar == 95)
                     { jjCheckNAddStates(214, 218); }
                  break;
               case 171:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 174:
               case 175:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(219, 224); }
                  break;
               case 176:
                  if (curChar == 95)
                     { jjCheckNAddStates(23, 27); }
                  break;
               case 177:
                  if (curChar == 92)
                     { jjAddStates(1350, 1351); }
                  break;
               case 178:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(23, 27); }
                  break;
               case 183:
                  if (curChar == 95)
                     { jjAddStates(1352, 1353); }
                  break;
               case 186:
                  if (curChar == 95)
                     { jjCheckNAddStates(233, 238); }
                  break;
               case 189:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(189, 190); }
                  break;
               case 190:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if (curChar == 95)
                     { jjCheckNAddStates(241, 246); }
                  break;
               case 196:
                  if (curChar == 95)
                     { jjAddStates(1354, 1355); }
                  break;
               case 199:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(199, 190); }
                  break;
               case 202:
                  if (curChar == 95)
                     { jjCheckNAddStates(247, 252); }
                  break;
               case 203:
                  if (curChar == 92)
                     { jjAddStates(1356, 1359); }
                  break;
               case 204:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 206:
                  if (curChar == 95)
                     { jjCheckNAddStates(260, 265); }
                  break;
               case 207:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 214:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 223:
               case 224:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(269, 273); }
                  break;
               case 225:
                  if (curChar == 95)
                     { jjCheckNAddStates(274, 277); }
                  break;
               case 232:
                  if (curChar == 95)
                     { jjAddStates(1360, 1361); }
                  break;
               case 235:
                  if (curChar == 95)
                     { jjCheckNAddStates(286, 290); }
                  break;
               case 238:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 239:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if (curChar == 95)
                     { jjCheckNAddStates(293, 297); }
                  break;
               case 245:
                  if (curChar == 95)
                     { jjAddStates(1362, 1363); }
                  break;
               case 248:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(248, 239); }
                  break;
               case 251:
                  if (curChar == 95)
                     { jjCheckNAddStates(298, 302); }
                  break;
               case 254:
                  if (curChar == 96)
                     { jjCheckNAddStates(1259, 1261); }
                  break;
               case 255:
               case 256:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(303, 307); }
                  break;
               case 257:
                  if (curChar == 95)
                     { jjCheckNAddStates(308, 311); }
                  break;
               case 258:
                  if (curChar == 96 && kind > 120)
                     kind = 120;
                  break;
               case 262:
                  if (curChar == 95)
                     { jjAddStates(1364, 1365); }
                  break;
               case 265:
                  if (curChar == 95)
                     { jjCheckNAddStates(320, 324); }
                  break;
               case 268:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(268, 269); }
                  break;
               case 269:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 272:
                  if (curChar == 95)
                     { jjCheckNAddStates(327, 331); }
                  break;
               case 275:
                  if (curChar == 95)
                     { jjAddStates(1366, 1367); }
                  break;
               case 278:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(278, 269); }
                  break;
               case 281:
                  if (curChar == 95)
                     { jjCheckNAddStates(332, 336); }
                  break;
               case 285:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 288:
               case 289:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(337, 342); }
                  break;
               case 290:
                  if (curChar == 95)
                     { jjCheckNAddStates(18, 22); }
                  break;
               case 291:
                  if (curChar == 92)
                     { jjAddStates(1368, 1369); }
                  break;
               case 292:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(18, 22); }
                  break;
               case 297:
                  if (curChar == 95)
                     { jjAddStates(1370, 1371); }
                  break;
               case 300:
                  if (curChar == 95)
                     { jjCheckNAddStates(351, 356); }
                  break;
               case 303:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(303, 304); }
                  break;
               case 304:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 307:
                  if (curChar == 95)
                     { jjCheckNAddStates(359, 364); }
                  break;
               case 310:
                  if (curChar == 95)
                     { jjAddStates(1372, 1373); }
                  break;
               case 313:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(313, 304); }
                  break;
               case 316:
                  if (curChar == 95)
                     { jjCheckNAddStates(365, 370); }
                  break;
               case 317:
                  if (curChar == 92)
                     { jjAddStates(1374, 1377); }
                  break;
               case 318:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 320:
                  if (curChar == 95)
                     { jjCheckNAddStates(378, 383); }
                  break;
               case 321:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 324:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 328:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 337:
               case 338:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(387, 391); }
                  break;
               case 339:
                  if (curChar == 95)
                     { jjCheckNAddStates(392, 395); }
                  break;
               case 346:
                  if (curChar == 95)
                     { jjAddStates(1378, 1379); }
                  break;
               case 349:
                  if (curChar == 95)
                     { jjCheckNAddStates(404, 408); }
                  break;
               case 352:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(352, 353); }
                  break;
               case 353:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 356:
                  if (curChar == 95)
                     { jjCheckNAddStates(411, 415); }
                  break;
               case 359:
                  if (curChar == 95)
                     { jjAddStates(1380, 1381); }
                  break;
               case 362:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(362, 353); }
                  break;
               case 365:
                  if (curChar == 95)
                     { jjCheckNAddStates(416, 420); }
                  break;
               case 368:
                  if (curChar == 96)
                     { jjCheckNAddStates(1256, 1258); }
                  break;
               case 369:
               case 370:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(421, 425); }
                  break;
               case 371:
                  if (curChar == 95)
                     { jjCheckNAddStates(426, 429); }
                  break;
               case 372:
                  if (curChar == 96 && kind > 122)
                     kind = 122;
                  break;
               case 376:
                  if (curChar == 95)
                     { jjAddStates(1382, 1383); }
                  break;
               case 379:
                  if (curChar == 95)
                     { jjCheckNAddStates(438, 442); }
                  break;
               case 382:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(382, 383); }
                  break;
               case 383:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 386:
                  if (curChar == 95)
                     { jjCheckNAddStates(445, 449); }
                  break;
               case 389:
                  if (curChar == 95)
                     { jjAddStates(1384, 1385); }
                  break;
               case 392:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(392, 383); }
                  break;
               case 395:
                  if (curChar == 95)
                     { jjCheckNAddStates(450, 454); }
                  break;
               case 399:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 402:
               case 403:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(455, 460); }
                  break;
               case 404:
                  if (curChar == 95)
                     { jjCheckNAddStates(81, 85); }
                  break;
               case 405:
                  if (curChar == 92)
                     { jjAddStates(1386, 1387); }
                  break;
               case 406:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(81, 85); }
                  break;
               case 411:
                  if (curChar == 95)
                     { jjAddStates(1388, 1389); }
                  break;
               case 414:
                  if (curChar == 95)
                     { jjCheckNAddStates(469, 474); }
                  break;
               case 417:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(417, 418); }
                  break;
               case 418:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 421:
                  if (curChar == 95)
                     { jjCheckNAddStates(477, 482); }
                  break;
               case 424:
                  if (curChar == 95)
                     { jjAddStates(1390, 1391); }
                  break;
               case 427:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(427, 418); }
                  break;
               case 430:
                  if (curChar == 95)
                     { jjCheckNAddStates(483, 488); }
                  break;
               case 431:
                  if (curChar == 92)
                     { jjAddStates(1392, 1395); }
                  break;
               case 432:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 434:
                  if (curChar == 95)
                     { jjCheckNAddStates(496, 501); }
                  break;
               case 435:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 436;
                  break;
               case 438:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 442:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 451:
               case 452:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(505, 509); }
                  break;
               case 453:
                  if (curChar == 95)
                     { jjCheckNAddStates(510, 513); }
                  break;
               case 460:
                  if (curChar == 95)
                     { jjAddStates(1396, 1397); }
                  break;
               case 463:
                  if (curChar == 95)
                     { jjCheckNAddStates(522, 526); }
                  break;
               case 466:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(466, 467); }
                  break;
               case 467:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 470:
                  if (curChar == 95)
                     { jjCheckNAddStates(529, 533); }
                  break;
               case 473:
                  if (curChar == 95)
                     { jjAddStates(1398, 1399); }
                  break;
               case 476:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(476, 467); }
                  break;
               case 479:
                  if (curChar == 95)
                     { jjCheckNAddStates(534, 538); }
                  break;
               case 482:
                  if (curChar == 96)
                     { jjCheckNAddStates(1316, 1318); }
                  break;
               case 483:
               case 484:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(539, 543); }
                  break;
               case 485:
                  if (curChar == 95)
                     { jjCheckNAddStates(544, 547); }
                  break;
               case 486:
                  if (curChar == 96 && kind > 124)
                     kind = 124;
                  break;
               case 490:
                  if (curChar == 95)
                     { jjAddStates(1400, 1401); }
                  break;
               case 493:
                  if (curChar == 95)
                     { jjCheckNAddStates(556, 560); }
                  break;
               case 496:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(496, 497); }
                  break;
               case 497:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 498;
                  break;
               case 500:
                  if (curChar == 95)
                     { jjCheckNAddStates(563, 567); }
                  break;
               case 503:
                  if (curChar == 95)
                     { jjAddStates(1402, 1403); }
                  break;
               case 506:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(506, 497); }
                  break;
               case 509:
                  if (curChar == 95)
                     { jjCheckNAddStates(568, 572); }
                  break;
               case 516:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 518:
                  if (curChar == 108)
                     { jjAddStates(1404, 1406); }
                  break;
               case 520:
               case 521:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(578, 583); }
                  break;
               case 522:
                  if (curChar == 95)
                     { jjCheckNAddStates(573, 577); }
                  break;
               case 523:
                  if (curChar == 92)
                     { jjAddStates(1407, 1408); }
                  break;
               case 524:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(573, 577); }
                  break;
               case 529:
                  if (curChar == 95)
                     { jjAddStates(1409, 1410); }
                  break;
               case 532:
                  if (curChar == 95)
                     { jjCheckNAddStates(592, 597); }
                  break;
               case 535:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(535, 536); }
                  break;
               case 536:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 537;
                  break;
               case 539:
                  if (curChar == 95)
                     { jjCheckNAddStates(600, 605); }
                  break;
               case 542:
                  if (curChar == 95)
                     { jjAddStates(1411, 1412); }
                  break;
               case 545:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(545, 536); }
                  break;
               case 548:
                  if (curChar == 95)
                     { jjCheckNAddStates(606, 611); }
                  break;
               case 549:
                  if (curChar == 92)
                     { jjAddStates(1413, 1416); }
                  break;
               case 550:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 551;
                  break;
               case 552:
                  if (curChar == 95)
                     { jjCheckNAddStates(619, 624); }
                  break;
               case 553:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 554;
                  break;
               case 556:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 557;
                  break;
               case 560:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 569:
               case 570:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(628, 632); }
                  break;
               case 571:
                  if (curChar == 95)
                     { jjCheckNAddStates(633, 636); }
                  break;
               case 578:
                  if (curChar == 95)
                     { jjAddStates(1417, 1418); }
                  break;
               case 581:
                  if (curChar == 95)
                     { jjCheckNAddStates(645, 649); }
                  break;
               case 584:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(584, 585); }
                  break;
               case 585:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 586;
                  break;
               case 588:
                  if (curChar == 95)
                     { jjCheckNAddStates(652, 656); }
                  break;
               case 591:
                  if (curChar == 95)
                     { jjAddStates(1419, 1420); }
                  break;
               case 594:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(594, 585); }
                  break;
               case 597:
                  if (curChar == 95)
                     { jjCheckNAddStates(657, 661); }
                  break;
               case 600:
                  if (curChar == 96)
                     { jjCheckNAddStates(1421, 1423); }
                  break;
               case 601:
               case 602:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(662, 666); }
                  break;
               case 603:
                  if (curChar == 95)
                     { jjCheckNAddStates(667, 670); }
                  break;
               case 604:
                  if (curChar == 96 && kind > 125)
                     kind = 125;
                  break;
               case 608:
                  if (curChar == 95)
                     { jjAddStates(1424, 1425); }
                  break;
               case 611:
                  if (curChar == 95)
                     { jjCheckNAddStates(679, 683); }
                  break;
               case 614:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(614, 615); }
                  break;
               case 615:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 616;
                  break;
               case 618:
                  if (curChar == 95)
                     { jjCheckNAddStates(686, 690); }
                  break;
               case 621:
                  if (curChar == 95)
                     { jjAddStates(1426, 1427); }
                  break;
               case 624:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(624, 615); }
                  break;
               case 627:
                  if (curChar == 95)
                     { jjCheckNAddStates(691, 695); }
                  break;
               case 628:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 518;
                  break;
               case 629:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 628;
                  break;
               case 630:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 634:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 633;
                  break;
               case 635:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  { jjCheckNAddStates(1278, 1286); }
                  break;
               case 636:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  { jjCheckNAdd(636); }
                  break;
               case 637:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 131)
                     kind = 131;
                  { jjCheckNAddStates(11, 13); }
                  break;
               case 639:
                  if (curChar == 116)
                     { jjCheckNAdd(640); }
                  break;
               case 640:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 131)
                     kind = 131;
                  { jjCheckNAdd(641); }
                  break;
               case 641:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 131)
                     kind = 131;
                  { jjCheckNAdd(641); }
                  break;
               case 642:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 639;
                  break;
               case 643:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 642;
                  break;
               case 644:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 638;
                  break;
               case 645:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 644;
                  break;
               case 646:
                  if (curChar == 114)
                     { jjCheckNAddTwoStates(643, 640); }
                  break;
               case 647:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 646;
                  break;
               case 648:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 132)
                     kind = 132;
                  { jjCheckNAdd(648); }
                  break;
               case 652:
                  if (curChar != 95)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 652;
                  break;
               case 655:
                  if (curChar == 95)
                     { jjAddStates(1428, 1429); }
                  break;
               case 658:
                  if (curChar != 95)
                     break;
                  if (kind > 102)
                     kind = 102;
                  jjstateSet[jjnewStateCnt++] = 658;
                  break;
               case 661:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(661, 662); }
                  break;
               case 662:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 663;
                  break;
               case 665:
                  if (curChar != 95)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjstateSet[jjnewStateCnt++] = 665;
                  break;
               case 668:
                  if (curChar == 95)
                     { jjAddStates(1430, 1431); }
                  break;
               case 671:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(671, 662); }
                  break;
               case 673:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 674;
                  break;
               case 675:
                  if (curChar != 95)
                     break;
                  if (kind > 104)
                     kind = 104;
                  jjstateSet[jjnewStateCnt++] = 675;
                  break;
               case 676:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 677;
                  break;
               case 678:
                  if (curChar != 95)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjstateSet[jjnewStateCnt++] = 678;
                  break;
               case 679:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 680;
                  break;
               case 682:
                  if (curChar != 95)
                     break;
                  if (kind > 106)
                     kind = 106;
                  jjstateSet[jjnewStateCnt++] = 682;
                  break;
               case 683:
                  if (curChar == 120)
                     { jjCheckNAdd(684); }
                  break;
               case 684:
                  if ((0x7eL & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAddTwoStates(684, 685); }
                  break;
               case 685:
                  if ((0x8000007eL & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAdd(685); }
                  break;
               case 687:
               case 688:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(700, 705); }
                  break;
               case 689:
                  if (curChar == 95)
                     { jjCheckNAddStates(706, 710); }
                  break;
               case 690:
                  if (curChar == 92)
                     { jjAddStates(1432, 1433); }
                  break;
               case 691:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(706, 710); }
                  break;
               case 696:
                  if (curChar == 95)
                     { jjAddStates(1434, 1435); }
                  break;
               case 699:
                  if (curChar == 95)
                     { jjCheckNAddStates(719, 724); }
                  break;
               case 702:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(702, 703); }
                  break;
               case 703:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 704;
                  break;
               case 706:
                  if (curChar == 95)
                     { jjCheckNAddStates(727, 732); }
                  break;
               case 709:
                  if (curChar == 95)
                     { jjAddStates(1436, 1437); }
                  break;
               case 712:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(712, 703); }
                  break;
               case 715:
                  if (curChar == 95)
                     { jjCheckNAddStates(733, 738); }
                  break;
               case 716:
                  if (curChar == 92)
                     { jjAddStates(1438, 1441); }
                  break;
               case 717:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 718;
                  break;
               case 719:
                  if (curChar == 95)
                     { jjCheckNAddStates(746, 751); }
                  break;
               case 720:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 721;
                  break;
               case 723:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 724;
                  break;
               case 727:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 728;
                  break;
               case 735:
               case 736:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(752, 757); }
                  break;
               case 737:
                  if (curChar == 95)
                     { jjCheckNAddStates(758, 762); }
                  break;
               case 738:
                  if (curChar == 92)
                     { jjAddStates(1442, 1443); }
                  break;
               case 739:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(758, 762); }
                  break;
               case 744:
                  if (curChar == 95)
                     { jjAddStates(1444, 1445); }
                  break;
               case 747:
                  if (curChar == 95)
                     { jjCheckNAddStates(771, 776); }
                  break;
               case 750:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(750, 751); }
                  break;
               case 751:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 752;
                  break;
               case 754:
                  if (curChar == 95)
                     { jjCheckNAddStates(779, 784); }
                  break;
               case 757:
                  if (curChar == 95)
                     { jjAddStates(1446, 1447); }
                  break;
               case 760:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(760, 751); }
                  break;
               case 763:
                  if (curChar == 95)
                     { jjCheckNAddStates(785, 790); }
                  break;
               case 764:
                  if (curChar == 92)
                     { jjAddStates(1448, 1451); }
                  break;
               case 765:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 766;
                  break;
               case 767:
                  if (curChar == 95)
                     { jjCheckNAddStates(798, 803); }
                  break;
               case 768:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 769;
                  break;
               case 771:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 772;
                  break;
               case 775:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 776;
                  break;
               case 785:
               case 786:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(807, 811); }
                  break;
               case 787:
                  if (curChar == 95)
                     { jjCheckNAddStates(812, 815); }
                  break;
               case 794:
                  if (curChar == 95)
                     { jjAddStates(1452, 1453); }
                  break;
               case 797:
                  if (curChar == 95)
                     { jjCheckNAddStates(824, 828); }
                  break;
               case 800:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(800, 801); }
                  break;
               case 801:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 802;
                  break;
               case 804:
                  if (curChar == 95)
                     { jjCheckNAddStates(831, 835); }
                  break;
               case 807:
                  if (curChar == 95)
                     { jjAddStates(1454, 1455); }
                  break;
               case 810:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(810, 801); }
                  break;
               case 813:
                  if (curChar == 95)
                     { jjCheckNAddStates(836, 840); }
                  break;
               case 816:
               case 817:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(844, 848); }
                  break;
               case 818:
                  if (curChar == 95)
                     { jjCheckNAddStates(849, 852); }
                  break;
               case 825:
                  if (curChar == 95)
                     { jjAddStates(1456, 1457); }
                  break;
               case 828:
                  if (curChar == 95)
                     { jjCheckNAddStates(861, 865); }
                  break;
               case 831:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(831, 832); }
                  break;
               case 832:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 833;
                  break;
               case 835:
                  if (curChar == 95)
                     { jjCheckNAddStates(868, 872); }
                  break;
               case 838:
                  if (curChar == 95)
                     { jjAddStates(1458, 1459); }
                  break;
               case 841:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(841, 832); }
                  break;
               case 844:
                  if (curChar == 95)
                     { jjCheckNAddStates(873, 877); }
                  break;
               case 847:
               case 848:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(881, 885); }
                  break;
               case 849:
                  if (curChar == 95)
                     { jjCheckNAddStates(886, 889); }
                  break;
               case 856:
                  if (curChar == 95)
                     { jjAddStates(1460, 1461); }
                  break;
               case 859:
                  if (curChar == 95)
                     { jjCheckNAddStates(898, 902); }
                  break;
               case 862:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(862, 863); }
                  break;
               case 863:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 864;
                  break;
               case 866:
                  if (curChar == 95)
                     { jjCheckNAddStates(905, 909); }
                  break;
               case 869:
                  if (curChar == 95)
                     { jjAddStates(1462, 1463); }
                  break;
               case 872:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(872, 863); }
                  break;
               case 875:
                  if (curChar == 95)
                     { jjCheckNAddStates(910, 914); }
                  break;
               case 877:
                  if (curChar == 96)
                     { jjCheckNAddStates(1291, 1299); }
                  break;
               case 878:
               case 879:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(915, 919); }
                  break;
               case 880:
                  if (curChar == 95)
                     { jjCheckNAddStates(920, 923); }
                  break;
               case 881:
                  if (curChar == 96 && kind > 108)
                     kind = 108;
                  break;
               case 885:
                  if (curChar == 95)
                     { jjAddStates(1464, 1465); }
                  break;
               case 888:
                  if (curChar == 95)
                     { jjCheckNAddStates(932, 936); }
                  break;
               case 891:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(891, 892); }
                  break;
               case 892:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 893;
                  break;
               case 895:
                  if (curChar == 95)
                     { jjCheckNAddStates(939, 943); }
                  break;
               case 898:
                  if (curChar == 95)
                     { jjAddStates(1466, 1467); }
                  break;
               case 901:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(901, 892); }
                  break;
               case 904:
                  if (curChar == 95)
                     { jjCheckNAddStates(944, 948); }
                  break;
               case 905:
               case 906:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(949, 953); }
                  break;
               case 907:
                  if (curChar == 95)
                     { jjCheckNAddStates(954, 957); }
                  break;
               case 908:
                  if (curChar == 96 && kind > 115)
                     kind = 115;
                  break;
               case 912:
                  if (curChar == 95)
                     { jjAddStates(1468, 1469); }
                  break;
               case 915:
                  if (curChar == 95)
                     { jjCheckNAddStates(966, 970); }
                  break;
               case 918:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(918, 919); }
                  break;
               case 919:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 920;
                  break;
               case 922:
                  if (curChar == 95)
                     { jjCheckNAddStates(973, 977); }
                  break;
               case 925:
                  if (curChar == 95)
                     { jjAddStates(1470, 1471); }
                  break;
               case 928:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(928, 919); }
                  break;
               case 931:
                  if (curChar == 95)
                     { jjCheckNAddStates(978, 982); }
                  break;
               case 932:
               case 933:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(983, 987); }
                  break;
               case 934:
                  if (curChar == 95)
                     { jjCheckNAddStates(988, 991); }
                  break;
               case 935:
                  if (curChar == 96 && kind > 116)
                     kind = 116;
                  break;
               case 939:
                  if (curChar == 95)
                     { jjAddStates(1472, 1473); }
                  break;
               case 942:
                  if (curChar == 95)
                     { jjCheckNAddStates(1000, 1004); }
                  break;
               case 945:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(945, 946); }
                  break;
               case 946:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 947;
                  break;
               case 949:
                  if (curChar == 95)
                     { jjCheckNAddStates(1007, 1011); }
                  break;
               case 952:
                  if (curChar == 95)
                     { jjAddStates(1474, 1475); }
                  break;
               case 955:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(955, 946); }
                  break;
               case 958:
                  if (curChar == 95)
                     { jjCheckNAddStates(1012, 1016); }
                  break;
               case 959:
                  if (curChar == 92)
                     { jjAddStates(1287, 1290); }
                  break;
               case 960:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 961;
                  break;
               case 962:
                  if (curChar != 95)
                     break;
                  if (kind > 111)
                     kind = 111;
                  jjstateSet[jjnewStateCnt++] = 962;
                  break;
               case 963:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 964;
                  break;
               case 966:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 967;
                  break;
               case 971:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 972;
                  break;
               case 980:
                  if (curChar == 119)
                     { jjAddStates(1308, 1310); }
                  break;
               case 982:
                  if (curChar == 121 && kind > 118)
                     kind = 118;
                  break;
               case 983:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 982;
                  break;
               case 984:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 983;
                  break;
               case 985:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 984;
                  break;
               case 989:
                  if (curChar == 104)
                     { jjCheckNAdd(997); }
                  break;
               case 990:
                  if (curChar == 117 && kind > 127)
                     kind = 127;
                  break;
               case 991:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 990;
                  break;
               case 992:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 991;
                  break;
               case 993:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 992;
                  break;
               case 994:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 993;
                  break;
               case 995:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 994;
                  break;
               case 996:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 995;
                  break;
               case 997:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 996;
                  break;
               case 998:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 989;
                  break;
               case 999:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 998;
                  break;
               case 1002:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 1001;
                  break;
               case 1003:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 1002;
                  break;
               case 1004:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 1003;
                  break;
               case 1005:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 1004;
                  break;
               case 1006:
                  if (curChar == 99)
                     { jjAddStates(1306, 1307); }
                  break;
               case 1009:
               case 1010:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1017, 1022); }
                  break;
               case 1011:
                  if (curChar == 95)
                     { jjCheckNAddStates(86, 90); }
                  break;
               case 1012:
                  if (curChar == 92)
                     { jjAddStates(1476, 1477); }
                  break;
               case 1013:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(86, 90); }
                  break;
               case 1018:
                  if (curChar == 95)
                     { jjAddStates(1478, 1479); }
                  break;
               case 1021:
                  if (curChar == 95)
                     { jjCheckNAddStates(1031, 1036); }
                  break;
               case 1024:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1024, 1025); }
                  break;
               case 1025:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1026;
                  break;
               case 1028:
                  if (curChar == 95)
                     { jjCheckNAddStates(1039, 1044); }
                  break;
               case 1031:
                  if (curChar == 95)
                     { jjAddStates(1480, 1481); }
                  break;
               case 1034:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1034, 1025); }
                  break;
               case 1037:
                  if (curChar == 95)
                     { jjCheckNAddStates(1045, 1050); }
                  break;
               case 1038:
                  if (curChar == 92)
                     { jjAddStates(1482, 1485); }
                  break;
               case 1039:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 1040;
                  break;
               case 1041:
                  if (curChar == 95)
                     { jjCheckNAddStates(1058, 1063); }
                  break;
               case 1042:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 1043;
                  break;
               case 1045:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 1046;
                  break;
               case 1049:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 1050;
                  break;
               case 1058:
               case 1059:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1067, 1071); }
                  break;
               case 1060:
                  if (curChar == 95)
                     { jjCheckNAddStates(1072, 1075); }
                  break;
               case 1067:
                  if (curChar == 95)
                     { jjAddStates(1486, 1487); }
                  break;
               case 1070:
                  if (curChar == 95)
                     { jjCheckNAddStates(1084, 1088); }
                  break;
               case 1073:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1073, 1074); }
                  break;
               case 1074:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1075;
                  break;
               case 1077:
                  if (curChar == 95)
                     { jjCheckNAddStates(1091, 1095); }
                  break;
               case 1080:
                  if (curChar == 95)
                     { jjAddStates(1488, 1489); }
                  break;
               case 1083:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1083, 1074); }
                  break;
               case 1086:
                  if (curChar == 95)
                     { jjCheckNAddStates(1096, 1100); }
                  break;
               case 1089:
                  if (curChar == 96)
                     { jjCheckNAddStates(1319, 1321); }
                  break;
               case 1090:
               case 1091:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1101, 1105); }
                  break;
               case 1092:
                  if (curChar == 95)
                     { jjCheckNAddStates(1106, 1109); }
                  break;
               case 1093:
                  if (curChar == 96 && kind > 121)
                     kind = 121;
                  break;
               case 1097:
                  if (curChar == 95)
                     { jjAddStates(1490, 1491); }
                  break;
               case 1100:
                  if (curChar == 95)
                     { jjCheckNAddStates(1118, 1122); }
                  break;
               case 1103:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1103, 1104); }
                  break;
               case 1104:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1105;
                  break;
               case 1107:
                  if (curChar == 95)
                     { jjCheckNAddStates(1125, 1129); }
                  break;
               case 1110:
                  if (curChar == 95)
                     { jjAddStates(1492, 1493); }
                  break;
               case 1113:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1113, 1104); }
                  break;
               case 1116:
                  if (curChar == 95)
                     { jjCheckNAddStates(1130, 1134); }
                  break;
               case 1124:
                  if (curChar == 101 && kind > 129)
                     kind = 129;
                  break;
               case 1125:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 1124;
                  break;
               case 1126:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 1125;
                  break;
               case 1129:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 1128;
                  break;
               case 1130:
                  if (curChar == 101)
                     { jjAddStates(1302, 1305); }
                  break;
               case 1133:
               case 1134:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1135, 1140); }
                  break;
               case 1135:
                  if (curChar == 95)
                     { jjCheckNAddStates(28, 32); }
                  break;
               case 1136:
                  if (curChar == 92)
                     { jjAddStates(1494, 1495); }
                  break;
               case 1137:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(28, 32); }
                  break;
               case 1142:
                  if (curChar == 95)
                     { jjAddStates(1496, 1497); }
                  break;
               case 1145:
                  if (curChar == 95)
                     { jjCheckNAddStates(1149, 1154); }
                  break;
               case 1148:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1148, 1149); }
                  break;
               case 1149:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1150;
                  break;
               case 1152:
                  if (curChar == 95)
                     { jjCheckNAddStates(1157, 1162); }
                  break;
               case 1155:
                  if (curChar == 95)
                     { jjAddStates(1498, 1499); }
                  break;
               case 1158:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1158, 1149); }
                  break;
               case 1161:
                  if (curChar == 95)
                     { jjCheckNAddStates(1163, 1168); }
                  break;
               case 1162:
                  if (curChar == 92)
                     { jjAddStates(1500, 1503); }
                  break;
               case 1163:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 1164;
                  break;
               case 1165:
                  if (curChar == 95)
                     { jjCheckNAddStates(1176, 1181); }
                  break;
               case 1166:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 1167;
                  break;
               case 1169:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 1170;
                  break;
               case 1173:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 1174;
                  break;
               case 1182:
               case 1183:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1185, 1189); }
                  break;
               case 1184:
                  if (curChar == 95)
                     { jjCheckNAddStates(1190, 1193); }
                  break;
               case 1191:
                  if (curChar == 95)
                     { jjAddStates(1504, 1505); }
                  break;
               case 1194:
                  if (curChar == 95)
                     { jjCheckNAddStates(1202, 1206); }
                  break;
               case 1197:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1197, 1198); }
                  break;
               case 1198:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1199;
                  break;
               case 1201:
                  if (curChar == 95)
                     { jjCheckNAddStates(1209, 1213); }
                  break;
               case 1204:
                  if (curChar == 95)
                     { jjAddStates(1506, 1507); }
                  break;
               case 1207:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1207, 1198); }
                  break;
               case 1210:
                  if (curChar == 95)
                     { jjCheckNAddStates(1214, 1218); }
                  break;
               case 1213:
                  if (curChar == 96)
                     { jjCheckNAddStates(1262, 1264); }
                  break;
               case 1214:
               case 1215:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1219, 1223); }
                  break;
               case 1216:
                  if (curChar == 95)
                     { jjCheckNAddStates(1224, 1227); }
                  break;
               case 1217:
                  if (curChar == 96 && kind > 123)
                     kind = 123;
                  break;
               case 1221:
                  if (curChar == 95)
                     { jjAddStates(1508, 1509); }
                  break;
               case 1224:
                  if (curChar == 95)
                     { jjCheckNAddStates(1236, 1240); }
                  break;
               case 1227:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1227, 1228); }
                  break;
               case 1228:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1229;
                  break;
               case 1231:
                  if (curChar == 95)
                     { jjCheckNAddStates(1243, 1247); }
                  break;
               case 1234:
                  if (curChar == 95)
                     { jjAddStates(1510, 1511); }
                  break;
               case 1237:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1237, 1228); }
                  break;
               case 1240:
                  if (curChar == 95)
                     { jjCheckNAddStates(1248, 1252); }
                  break;
               case 1244:
                  if (curChar == 102 && kind > 126)
                     kind = 126;
                  break;
               case 1246:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 1243;
                  break;
               case 1247:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 1253;
                  break;
               case 1248:
                  if (curChar == 104 && kind > 128)
                     kind = 128;
                  break;
               case 1249:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 1248;
                  break;
               case 1250:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 1249;
                  break;
               case 1251:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 1250;
                  break;
               case 1252:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 1251;
                  break;
               case 1253:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 1252;
                  break;
               case 1254:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 1247;
                  break;
               case 1255:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 1260;
                  break;
               case 1256:
                  if (curChar == 102 && kind > 130)
                     kind = 130;
                  break;
               case 1257:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 1256;
                  break;
               case 1258:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 1257;
                  break;
               case 1259:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 1258;
                  break;
               case 1260:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 1259;
                  break;
               case 1261:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 1255;
                  break;
               case 1262:
                  if (curChar == 110)
                     { jjAddStates(1300, 1301); }
                  break;
               case 1266:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 1267;
                  break;
               case 1267:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 132)
                     kind = 132;
                  { jjCheckNAdd(648); }
                  break;
               case 1268:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 1266;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(68, 70); }
                  break;
               case 6:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(42, 44); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1269 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x80L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_1(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(1, 7);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   12, 11, 14, 15, 16, 21, 22, 28, 29, 34, 35, 637, 645, 647, 12, 13, 
   11, 14, 288, 290, 291, 293, 294, 174, 176, 177, 179, 180, 1133, 1135, 1136, 1138, 
   1139, 60, 62, 63, 65, 66, 12, 36, 11, 14, 6, 7, 9, 15, 16, 21, 
   22, 28, 29, 34, 35, 650, 651, 653, 654, 659, 660, 666, 667, 814, 845, 876, 
   673, 676, 679, 683, 1, 2, 4, 687, 689, 690, 692, 735, 737, 738, 740, 741, 
   693, 402, 404, 405, 407, 408, 1009, 1011, 1012, 1014, 1015, 12, 20, 11, 14, 25, 
   26, 12, 27, 11, 14, 60, 61, 62, 63, 65, 66, 67, 68, 73, 74, 80, 
   81, 86, 87, 60, 72, 62, 63, 65, 66, 77, 78, 60, 79, 62, 63, 65, 
   66, 60, 88, 62, 63, 65, 66, 60, 62, 63, 91, 92, 65, 66, 60, 62, 
   63, 92, 65, 66, 109, 111, 115, 109, 110, 111, 114, 115, 109, 111, 114, 115, 
   116, 117, 122, 123, 129, 130, 135, 136, 109, 121, 111, 114, 115, 126, 127, 109, 
   128, 111, 114, 115, 109, 137, 111, 114, 115, 141, 142, 143, 144, 145, 141, 143, 
   144, 145, 146, 147, 152, 153, 159, 160, 165, 166, 141, 151, 143, 144, 145, 156, 
   157, 141, 158, 143, 144, 145, 141, 167, 143, 144, 145, 174, 175, 176, 177, 179, 
   180, 181, 182, 187, 188, 194, 195, 200, 201, 174, 186, 176, 177, 179, 180, 191, 
   192, 174, 193, 176, 177, 179, 180, 174, 202, 176, 177, 179, 180, 174, 176, 177, 
   205, 206, 179, 180, 174, 176, 177, 206, 179, 180, 223, 225, 229, 223, 224, 225, 
   228, 229, 223, 225, 228, 229, 230, 231, 236, 237, 243, 244, 249, 250, 223, 235, 
   225, 228, 229, 240, 241, 223, 242, 225, 228, 229, 223, 251, 225, 228, 229, 255, 
   256, 257, 258, 259, 255, 257, 258, 259, 260, 261, 266, 267, 273, 274, 279, 280, 
   255, 265, 257, 258, 259, 270, 271, 255, 272, 257, 258, 259, 255, 281, 257, 258, 
   259, 288, 289, 290, 291, 293, 294, 295, 296, 301, 302, 308, 309, 314, 315, 288, 
   300, 290, 291, 293, 294, 305, 306, 288, 307, 290, 291, 293, 294, 288, 316, 290, 
   291, 293, 294, 288, 290, 291, 319, 320, 293, 294, 288, 290, 291, 320, 293, 294, 
   337, 339, 343, 337, 338, 339, 342, 343, 337, 339, 342, 343, 344, 345, 350, 351, 
   357, 358, 363, 364, 337, 349, 339, 342, 343, 354, 355, 337, 356, 339, 342, 343, 
   337, 365, 339, 342, 343, 369, 370, 371, 372, 373, 369, 371, 372, 373, 374, 375, 
   380, 381, 387, 388, 393, 394, 369, 379, 371, 372, 373, 384, 385, 369, 386, 371, 
   372, 373, 369, 395, 371, 372, 373, 402, 403, 404, 405, 407, 408, 409, 410, 415, 
   416, 422, 423, 428, 429, 402, 414, 404, 405, 407, 408, 419, 420, 402, 421, 404, 
   405, 407, 408, 402, 430, 404, 405, 407, 408, 402, 404, 405, 433, 434, 407, 408, 
   402, 404, 405, 434, 407, 408, 451, 453, 457, 451, 452, 453, 456, 457, 451, 453, 
   456, 457, 458, 459, 464, 465, 471, 472, 477, 478, 451, 463, 453, 456, 457, 468, 
   469, 451, 470, 453, 456, 457, 451, 479, 453, 456, 457, 483, 484, 485, 486, 487, 
   483, 485, 486, 487, 488, 489, 494, 495, 501, 502, 507, 508, 483, 493, 485, 486, 
   487, 498, 499, 483, 500, 485, 486, 487, 483, 509, 485, 486, 487, 520, 522, 523, 
   525, 526, 520, 521, 522, 523, 525, 526, 527, 528, 533, 534, 540, 541, 546, 547, 
   520, 532, 522, 523, 525, 526, 537, 538, 520, 539, 522, 523, 525, 526, 520, 548, 
   522, 523, 525, 526, 520, 522, 523, 551, 552, 525, 526, 520, 522, 523, 552, 525, 
   526, 569, 571, 575, 569, 570, 571, 574, 575, 569, 571, 574, 575, 576, 577, 582, 
   583, 589, 590, 595, 596, 569, 581, 571, 574, 575, 586, 587, 569, 588, 571, 574, 
   575, 569, 597, 571, 574, 575, 601, 602, 603, 604, 605, 601, 603, 604, 605, 606, 
   607, 612, 613, 619, 620, 625, 626, 601, 611, 603, 604, 605, 616, 617, 601, 618, 
   603, 604, 605, 601, 627, 603, 604, 605, 663, 664, 680, 681, 687, 688, 689, 690, 
   692, 693, 687, 689, 690, 692, 693, 694, 695, 700, 701, 707, 708, 713, 714, 687, 
   699, 689, 690, 692, 693, 704, 705, 687, 706, 689, 690, 692, 693, 687, 715, 689, 
   690, 692, 693, 687, 689, 690, 718, 719, 692, 693, 687, 689, 690, 719, 692, 693, 
   735, 736, 737, 738, 740, 741, 735, 737, 738, 740, 741, 742, 743, 748, 749, 755, 
   756, 761, 762, 735, 747, 737, 738, 740, 741, 752, 753, 735, 754, 737, 738, 740, 
   741, 735, 763, 737, 738, 740, 741, 735, 737, 738, 766, 767, 740, 741, 735, 737, 
   738, 767, 740, 741, 785, 787, 791, 785, 786, 787, 790, 791, 785, 787, 790, 791, 
   792, 793, 798, 799, 805, 806, 811, 812, 785, 797, 787, 790, 791, 802, 803, 785, 
   804, 787, 790, 791, 785, 813, 787, 790, 791, 816, 818, 822, 816, 817, 818, 821, 
   822, 816, 818, 821, 822, 823, 824, 829, 830, 836, 837, 842, 843, 816, 828, 818, 
   821, 822, 833, 834, 816, 835, 818, 821, 822, 816, 844, 818, 821, 822, 847, 849, 
   853, 847, 848, 849, 852, 853, 847, 849, 852, 853, 854, 855, 860, 861, 867, 868, 
   873, 874, 847, 859, 849, 852, 853, 864, 865, 847, 866, 849, 852, 853, 847, 875, 
   849, 852, 853, 878, 879, 880, 881, 882, 878, 880, 881, 882, 883, 884, 889, 890, 
   896, 897, 902, 903, 878, 888, 880, 881, 882, 893, 894, 878, 895, 880, 881, 882, 
   878, 904, 880, 881, 882, 905, 906, 907, 908, 909, 905, 907, 908, 909, 910, 911, 
   916, 917, 923, 924, 929, 930, 905, 915, 907, 908, 909, 920, 921, 905, 922, 907, 
   908, 909, 905, 931, 907, 908, 909, 932, 933, 934, 935, 936, 932, 934, 935, 936, 
   937, 938, 943, 944, 950, 951, 956, 957, 932, 942, 934, 935, 936, 947, 948, 932, 
   949, 934, 935, 936, 932, 958, 934, 935, 936, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 
   1017, 1022, 1023, 1029, 1030, 1035, 1036, 1009, 1021, 1011, 1012, 1014, 1015, 1026, 1027, 1009, 
   1028, 1011, 1012, 1014, 1015, 1009, 1037, 1011, 1012, 1014, 1015, 1009, 1011, 1012, 1040, 1041, 
   1014, 1015, 1009, 1011, 1012, 1041, 1014, 1015, 1058, 1060, 1064, 1058, 1059, 1060, 1063, 1064, 
   1058, 1060, 1063, 1064, 1065, 1066, 1071, 1072, 1078, 1079, 1084, 1085, 1058, 1070, 1060, 1063, 
   1064, 1075, 1076, 1058, 1077, 1060, 1063, 1064, 1058, 1086, 1060, 1063, 1064, 1090, 1091, 1092, 
   1093, 1094, 1090, 1092, 1093, 1094, 1095, 1096, 1101, 1102, 1108, 1109, 1114, 1115, 1090, 1100, 
   1092, 1093, 1094, 1105, 1106, 1090, 1107, 1092, 1093, 1094, 1090, 1116, 1092, 1093, 1094, 1133, 
   1134, 1135, 1136, 1138, 1139, 1140, 1141, 1146, 1147, 1153, 1154, 1159, 1160, 1133, 1145, 1135, 
   1136, 1138, 1139, 1150, 1151, 1133, 1152, 1135, 1136, 1138, 1139, 1133, 1161, 1135, 1136, 1138, 
   1139, 1133, 1135, 1136, 1164, 1165, 1138, 1139, 1133, 1135, 1136, 1165, 1138, 1139, 1182, 1184, 
   1188, 1182, 1183, 1184, 1187, 1188, 1182, 1184, 1187, 1188, 1189, 1190, 1195, 1196, 1202, 1203, 
   1208, 1209, 1182, 1194, 1184, 1187, 1188, 1199, 1200, 1182, 1201, 1184, 1187, 1188, 1182, 1210, 
   1184, 1187, 1188, 1214, 1215, 1216, 1217, 1218, 1214, 1216, 1217, 1218, 1219, 1220, 1225, 1226, 
   1232, 1233, 1238, 1239, 1214, 1224, 1216, 1217, 1218, 1229, 1230, 1214, 1231, 1216, 1217, 1218, 
   1214, 1240, 1216, 1217, 1218, 401, 481, 482, 369, 371, 373, 255, 257, 259, 1214, 1216, 
   1218, 141, 143, 145, 40, 43, 46, 50, 1132, 1212, 1213, 59, 139, 140, 636, 12, 
   13, 11, 637, 645, 647, 648, 14, 960, 963, 966, 971, 878, 880, 905, 907, 932, 
   934, 936, 909, 882, 1265, 1268, 1242, 1246, 1254, 1261, 1122, 1129, 988, 999, 1005, 38, 
   39, 173, 253, 254, 483, 485, 487, 1090, 1092, 1094, 287, 367, 368, 1008, 1088, 1089, 
   17, 18, 30, 31, 64, 89, 69, 70, 82, 83, 90, 93, 96, 100, 118, 119, 
   131, 132, 148, 149, 161, 162, 178, 203, 183, 184, 196, 197, 204, 207, 210, 214, 
   232, 233, 245, 246, 262, 263, 275, 276, 292, 317, 297, 298, 310, 311, 318, 321, 
   324, 328, 346, 347, 359, 360, 376, 377, 389, 390, 406, 431, 411, 412, 424, 425, 
   432, 435, 438, 442, 460, 461, 473, 474, 490, 491, 503, 504, 519, 599, 600, 524, 
   549, 529, 530, 542, 543, 550, 553, 556, 560, 578, 579, 591, 592, 601, 603, 605, 
   608, 609, 621, 622, 655, 656, 668, 669, 691, 716, 696, 697, 709, 710, 717, 720, 
   723, 727, 739, 764, 744, 745, 757, 758, 765, 768, 771, 775, 794, 795, 807, 808, 
   825, 826, 838, 839, 856, 857, 869, 870, 885, 886, 898, 899, 912, 913, 925, 926, 
   939, 940, 952, 953, 1013, 1038, 1018, 1019, 1031, 1032, 1039, 1042, 1045, 1049, 1067, 1068, 
   1080, 1081, 1097, 1098, 1110, 1111, 1137, 1162, 1142, 1143, 1155, 1156, 1163, 1166, 1169, 1173, 
   1191, 1192, 1204, 1205, 1221, 1222, 1234, 1235, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, "\12", "\143\141\163\145", 
"\144\157", "\145\156\144", "\145\170\160\157\162\164", "\147\154\157\142\141\154", 
"\151\156\143\154\165\144\145", "\160\165\142\154\151\143", "\163\167\151\164\143\150", 
"\165\156\164\151\154", "\141\163", "\143\157\156\163\164\141\156\164", "\145\154\163\145", 
"\145\156\164\162\171", "\146\141\154\154\164\150\162\165", "\147\157\164\157", 
"\154\141\142\145\154", "\162\145\164\162\171", "\164\150\145\156", "\167\150\151\154\145", 
"\142\162\145\141\153", "\143\157\156\164\151\156\165\145", "\145\154\163\145\144\145\146", 
"\145\156\165\155", "\151\146", "\154\157\157\160", "\157\166\145\162\162\151\144\145", 
"\162\145\164\165\162\156", "\164\157", "\167\151\164\150", "\142\171", 
"\144\145\160\162\145\143\141\164\145", "\145\154\163\151\146", "\145\170\151\164", 
"\146\165\156\143\164\151\157\156", "\151\146\144\145\146", "\156\141\155\145\163\160\141\143\145", 
"\160\162\157\143\145\144\165\162\145", "\162\157\165\164\151\156\145", "\164\171\160\145", 
"\167\151\164\150\157\165\164", "\160\162\157\146\151\154\145", 
"\160\162\157\146\151\154\145\137\164\151\155\145", "\164\162\141\143\145", "\142\141\164\143\150", 
"\164\171\160\145\137\143\150\145\143\153", "\151\156\144\151\162\145\143\164\137\151\156\143\154\165\144\145\163", 
"\151\156\154\151\156\145", "\167\141\162\156\151\156\147", "\163\141\166\145", 
"\162\145\163\164\157\162\145", "\163\164\162\151\143\164", "\145\154\163\151\146\144\145\146", 
"\146\157\162", "\50", "\51", "\173", "\175", "\133", "\135", "\73", "\54", "\56", null, 
"\56\56", null, null, "\72", "\156\157\164", "\53", "\55", "\52", "\57", "\134", "\46", 
"\76", "\74", "\74\75", "\76\75", "\75", "\41\75", "\157\162", "\141\156\144", 
"\170\157\162", "\77", "\44", "\141\164\157\155", "\151\156\164\145\147\145\162", 
"\163\145\161\165\145\156\143\145", "\157\142\152\145\143\164", null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002200L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 8)
         {
            jjmatchedKind = 8;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public MeuphoriaTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public MeuphoriaTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream)
  {
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 1269; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "WithinComment",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xfffffffffffffe01L, 0xfffffffffffff2ffL, 0x1fL, 
};
static final long[] jjtoSkip = {
   0xfeL, 0x0L, 0x0L, 
};
static final long[] jjtoMore = {
   0x100L, 0x0L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[1269];
    private final int[] jjstateSet = new int[2 * 1269];

    
    protected char curChar;
}
