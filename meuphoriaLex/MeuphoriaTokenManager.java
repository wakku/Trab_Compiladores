/* Generated By:JavaCC: Do not edit this line. MeuphoriaTokenManager.java */

/** Token Manager. */
public class MeuphoriaTokenManager implements MeuphoriaConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x15dd712a090fc800L) != 0L || (active1 & 0x79c002000L) != 0L)
         {
            jjmatchedKind = 99;
            return 12;
         }
         if ((active0 & 0x202004010000000L) != 0L)
         {
            jjmatchedKind = 99;
            return 42;
         }
         if ((active1 & 0x4000L) != 0L)
            return 422;
         if ((active0 & 0x402000000L) != 0L)
         {
            jjmatchedKind = 99;
            return 81;
         }
         if ((active0 & 0x800801004000000L) != 0L)
         {
            jjmatchedKind = 99;
            return 201;
         }
         if ((active0 & 0x20008020000000L) != 0L)
         {
            jjmatchedKind = 99;
            return 120;
         }
         if ((active1 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 100;
            return -1;
         }
         if ((active0 & 0x40100400L) != 0L)
         {
            jjmatchedKind = 99;
            return 162;
         }
         if ((active0 & 0x4000080000800000L) != 0L)
         {
            jjmatchedKind = 99;
            return 243;
         }
         if ((active1 & 0x40000L) != 0L)
            return 15;
         if ((active0 & 0x2000060180603000L) != 0L)
         {
            jjmatchedKind = 99;
            return 410;
         }
         if ((active1 & 0x8000L) != 0L)
            return 5;
         return -1;
      case 1:
         if ((active0 & 0x2000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 80;
         }
         if ((active0 & 0x100401000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 411;
         }
         if ((active0 & 0x800001004000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 200;
         }
         if ((active1 & 0x2000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 100;
               jjmatchedPos = 0;
            }
            return -1;
         }
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 119;
         }
         if ((active0 & 0x77fdeb0c9927c400L) != 0L || (active1 & 0x798002000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 12;
         }
         if ((active0 & 0x10a200080800L) != 0L || (active1 & 0x4000000L) != 0L)
            return 12;
         if ((active0 & 0x2004000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 41;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 242;
         }
         if ((active0 & 0x40100000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 161;
         }
         if ((active0 & 0x40000002000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 409;
         }
         return -1;
      case 2:
         if ((active0 & 0x40100000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 160;
         }
         if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 374;
         }
         if ((active0 & 0x1004000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 199;
         }
         if ((active0 & 0x3ffdfb0d9967e400L) != 0L || (active1 & 0x780000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 12;
         }
         if ((active0 & 0x1000L) != 0L)
            return 413;
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 79;
         }
         if ((active0 & 0x2004000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 35;
         }
         if ((active0 & 0x4000000000000000L) != 0L || (active1 & 0x18002000L) != 0L)
            return 12;
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 241;
         }
         if ((active0 & 0x20000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 118;
         }
         return -1;
      case 3:
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 240;
         }
         if ((active0 & 0x3bbcfb181057e000L) != 0L || (active1 & 0x700000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 12;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 159;
         }
         if ((active0 & 0x2000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 44;
         }
         if ((active0 & 0x40000000000L) != 0L)
            return 375;
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 83;
         }
         if ((active0 & 0x2004000000000L) != 0L)
            return 40;
         if ((active0 & 0x441000589200400L) != 0L || (active1 & 0x80000000L) != 0L)
            return 12;
         if ((active0 & 0x4000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 164;
         }
         return -1;
      case 4:
         if ((active0 & 0x2000000L) != 0L)
            return 45;
         if ((active0 & 0x4000000L) != 0L)
            return 165;
         if ((active0 & 0x2030120010440000L) != 0L)
            return 12;
         if ((active0 & 0x1bcee9188013e000L) != 0L || (active1 & 0x700000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 4;
            }
            return 12;
         }
         if ((active0 & 0x20000000L) != 0L)
            return 84;
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 4;
            }
            return 158;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 4;
            }
            return 239;
         }
         return -1;
      case 5:
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 5;
            return 157;
         }
         if ((active0 & 0x1100001000036000L) != 0L || (active1 & 0x400000000L) != 0L)
            return 12;
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 5;
            return 238;
         }
         if ((active0 & 0x2acee90880108000L) != 0L || (active1 & 0x300000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 5;
            return 12;
         }
         return -1;
      case 6:
         if ((active0 & 0x20c0690800100000L) != 0L || (active1 & 0x200000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 6;
            }
            return 12;
         }
         if ((active0 & 0xa0e800080008000L) != 0L || (active1 & 0x100000000L) != 0L)
            return 12;
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 6;
            }
            return 203;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 6;
            }
            return 122;
         }
         return -1;
      case 7:
         if ((active0 & 0x2000080800100000L) != 0L || (active1 & 0x200000000L) != 0L)
            return 12;
         if ((active0 & 0x40000000L) != 0L)
            return 123;
         if ((active0 & 0xc8610000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 7;
            return 12;
         }
         if ((active0 & 0x800000L) != 0L)
            return 204;
         return -1;
      case 8:
         if ((active0 & 0x610000000000L) != 0L)
            return 12;
         if ((active0 & 0xc8000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 8;
            return 12;
         }
         return -1;
      case 9:
         if ((active0 & 0x40000000000000L) != 0L)
            return 12;
         if ((active0 & 0x88000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 9;
            return 12;
         }
         return -1;
      case 10:
         if ((active0 & 0x88000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 10;
            return 12;
         }
         return -1;
      case 11:
         if ((active0 & 0x8000000000000L) != 0L)
            return 12;
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 11;
            return 12;
         }
         return -1;
      case 12:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 12;
            return 12;
         }
         return -1;
      case 13:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 13;
            return 12;
         }
         return -1;
      case 14:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 14;
            return 12;
         }
         return -1;
      case 15:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 15;
            return 12;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 9);
      case 32:
         return jjStopAtPos(0, 1);
      case 33:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x2000000L);
      case 36:
         return jjStopAtPos(0, 94);
      case 38:
         return jjStopAtPos(0, 83);
      case 40:
         return jjStopAtPos(0, 63);
      case 41:
         return jjStopAtPos(0, 64);
      case 42:
         return jjStopAtPos(0, 80);
      case 43:
         return jjStartNfaWithStates_0(0, 78, 422);
      case 44:
         return jjStopAtPos(0, 70);
      case 45:
         return jjStartNfaWithStates_0(0, 79, 5);
      case 46:
         jjmatchedKind = 71;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x200L);
      case 47:
         jjmatchedKind = 81;
         return jjMoveStringLiteralDfa1_0(0x10L, 0x0L);
      case 58:
         return jjStopAtPos(0, 76);
      case 59:
         return jjStopAtPos(0, 69);
      case 60:
         jjmatchedKind = 85;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x400000L);
      case 61:
         return jjStopAtPos(0, 88);
      case 62:
         jjmatchedKind = 84;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x800000L);
      case 63:
         return jjStopAtPos(0, 93);
      case 91:
         return jjStopAtPos(0, 67);
      case 92:
         return jjStartNfaWithStates_0(0, 82, 15);
      case 93:
         return jjStopAtPos(0, 68);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x80000L, 0x88000000L);
      case 98:
         return jjMoveStringLiteralDfa1_0(0x20008020000000L, 0x0L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x40100400L, 0x0L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x10000000800L, 0x0L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x2000060180603000L, 0x0L);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x4000080000800000L, 0x0L);
      case 103:
         return jjMoveStringLiteralDfa1_0(0x1004000L, 0x0L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x180100200008000L, 0x100000000L);
      case 108:
         return jjMoveStringLiteralDfa1_0(0x402000000L, 0x0L);
      case 110:
         return jjMoveStringLiteralDfa1_0(0x200000000000L, 0x2000L);
      case 111:
         return jjMoveStringLiteralDfa1_0(0x800000000L, 0x404000000L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0xc400000010000L, 0x0L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x800801004000000L, 0x0L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x1400000000020000L, 0x200000000L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x51002008000000L, 0x0L);
      case 117:
         return jjMoveStringLiteralDfa1_0(0x40000L, 0x0L);
      case 119:
         return jjMoveStringLiteralDfa1_0(0x202004010000000L, 0x0L);
      case 120:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x10000000L);
      case 123:
         return jjStopAtPos(0, 65);
      case 125:
         return jjStopAtPos(0, 66);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 42:
         if ((active0 & 0x10L) != 0L)
            return jjStopAtPos(1, 4);
         break;
      case 46:
         if ((active1 & 0x200L) != 0L)
            return jjStopAtPos(1, 73);
         break;
      case 61:
         if ((active1 & 0x400000L) != 0L)
            return jjStopAtPos(1, 86);
         else if ((active1 & 0x800000L) != 0L)
            return jjStopAtPos(1, 87);
         else if ((active1 & 0x2000000L) != 0L)
            return jjStopAtPos(1, 89);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x620200002800400L, active1, 0L);
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400000000L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x800011004000000L, active1, 0x200000000L);
      case 102:
         if ((active0 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 33;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000L, active1, 0L);
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x18000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x2004000000000L, active1, 0L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000020080204000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x180000100449000L, active1, 0x108000000L);
      case 111:
         if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(1, 11, 12);
         else if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 37, 12);
         return jjMoveStringLiteralDfa2_0(active0, 0x4000800441100000L, active1, 0x10002000L);
      case 114:
         if ((active1 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(1, 90, 12);
         return jjMoveStringLiteralDfa2_0(active0, 0x1c400020000000L, active1, 0L);
      case 115:
         if ((active0 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(1, 19, 12);
         break;
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000000L, active1, 0x80000000L);
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000010000L, active1, 0L);
      case 118:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000L, active1, 0L);
      case 119:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000L, active1, 0L);
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000002000L, active1, 0L);
      case 121:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 39, 12);
         return jjMoveStringLiteralDfa2_0(active0, 0x41000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000000000L, active1, 0L);
      case 98:
         return jjMoveStringLiteralDfa3_0(active0, 0x2010000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000L, active1, 0L);
      case 100:
         if ((active0 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(2, 12, 413);
         else if ((active1 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(2, 91, 12);
         return jjMoveStringLiteralDfa3_0(active0, 0x80100000000000L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x828000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x40010020000L, active1, 0L);
      case 106:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x400000000L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000800000L, active1, 0L);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x80040100000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0xc400400004000L, active1, 0x80000000L);
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0x41010000002000L, active1, 0L);
      case 113:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200000000L);
      case 114:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 62, 12);
         else if ((active1 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(2, 92, 12);
         return jjMoveStringLiteralDfa3_0(active0, 0x1200000000000000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x2800020080200400L, active1, 0L);
      case 116:
         if ((active1 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(2, 77, 12);
         return jjMoveStringLiteralDfa3_0(active0, 0x22005005440000L, active1, 0x100000000L);
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x800100000000L, active1, 0L);
      case 118:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x20000000L, active1, 0L);
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x30480000000000L, active1, 0L);
      case 101:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(3, 10, 12);
         else if ((active0 & 0x200000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 3;
         }
         else if ((active0 & 0x1000000000000L) != 0L)
         {
            jjmatchedKind = 48;
            jjmatchedPos = 3;
         }
         else if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 58, 12);
         return jjMoveStringLiteralDfa4_0(active0, 0x40300082000000L, active1, 0x500000000L);
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0xc000000000000L, active1, 0L);
      case 104:
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 38;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x3180020000040000L, active1, 0L);
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0x10818000L, active1, 0L);
      case 109:
         if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(3, 32, 12);
         else if ((active1 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(3, 95, 12);
         break;
      case 110:
         if ((active0 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(3, 27, 12);
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000000L, active1, 0L);
      case 111:
         if ((active0 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_0(3, 24, 12);
         return jjMoveStringLiteralDfa4_0(active0, 0x2000L, active1, 0L);
      case 112:
         if ((active0 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(3, 34, 12);
         break;
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0x10804400000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000L, active1, 0L);
      case 116:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 42, 375);
         return jjMoveStringLiteralDfa4_0(active0, 0x800800040020000L, active1, 0L);
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000L, active1, 0x200000000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa5_0(active0, 0x40000000000000L, active1, 0L);
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x4000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x1000000000020000L, active1, 0x400000000L);
      case 100:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000L, active1, 0L);
      case 101:
         if ((active0 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(4, 28, 12);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 52, 12);
         return jjMoveStringLiteralDfa5_0(active0, 0x410000000000L, active1, 0x200000000L);
      case 102:
         if ((active0 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 41;
            jjmatchedPos = 4;
         }
         else if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 44, 12);
         return jjMoveStringLiteralDfa5_0(active0, 0x2000000000000000L, active1, 0L);
      case 103:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x100000000L);
      case 104:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 53, 12);
         break;
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x20c800040010000L, active1, 0L);
      case 107:
         if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(4, 29, 84);
         break;
      case 108:
         if ((active0 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(4, 18, 12);
         else if ((active0 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(4, 25, 45);
         break;
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000000000000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x802000000000000L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x80001800002000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000L, active1, 0L);
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000900000L, active1, 0L);
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000L, active1, 0L);
      case 121:
         if ((active0 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(4, 22, 12);
         else if ((active0 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(4, 26, 165);
         break;
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000L, active1, 0L);
      case 99:
         if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(5, 16, 12);
         return jjMoveStringLiteralDfa6_0(active0, 0x40010000000000L, active1, 0L);
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000400000008000L, active1, 0L);
      case 101:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 56, 12);
         return jjMoveStringLiteralDfa6_0(active0, 0x80000080000000L, active1, 0x100000000L);
      case 104:
         if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(5, 17, 12);
         return jjMoveStringLiteralDfa6_0(active0, 0x800000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x80800000000L, active1, 0L);
      case 108:
         if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(5, 14, 12);
         return jjMoveStringLiteralDfa6_0(active0, 0xc000000000000L, active1, 0L);
      case 110:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 36, 12);
         return jjMoveStringLiteralDfa6_0(active0, 0x200800040000000L, active1, 0x200000000L);
      case 112:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000000000L, active1, 0L);
      case 116:
         if ((active0 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(5, 13, 12);
         else if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 60, 12);
         else if ((active1 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(5, 98, 12);
         break;
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0x210000000000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa7_0(active0, 0x80000000000000L, active1, 0x200000000L);
      case 100:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000000L, active1, 0L);
      case 101:
         if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(6, 15, 12);
         else if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 47, 12);
         else if ((active0 & 0x4000000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 6;
         }
         else if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 59, 12);
         return jjMoveStringLiteralDfa7_0(active0, 0x2008000000000000L, active1, 0L);
      case 102:
         if ((active0 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(6, 31, 12);
         break;
      case 103:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 57, 12);
         break;
      case 104:
         return jjMoveStringLiteralDfa7_0(active0, 0x40000000000000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa7_0(active0, 0x100000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa7_0(active0, 0x80000000000L, active1, 0L);
      case 114:
         if ((active1 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(6, 96, 12);
         return jjMoveStringLiteralDfa7_0(active0, 0x800000L, active1, 0L);
      case 116:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 49, 12);
         break;
      case 117:
         return jjMoveStringLiteralDfa7_0(active0, 0x400040000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa8_0(active0, 0x8000000000000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa8_0(active0, 0x200000000000L, active1, 0L);
      case 101:
         if ((active0 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(7, 30, 123);
         else if ((active0 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(7, 35, 12);
         else if ((active1 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(7, 97, 12);
         return jjMoveStringLiteralDfa8_0(active0, 0x40000000000000L, active1, 0L);
      case 102:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 61, 12);
         break;
      case 110:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 43, 12);
         break;
      case 114:
         return jjMoveStringLiteralDfa8_0(active0, 0x400000000000L, active1, 0L);
      case 116:
         if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(7, 20, 12);
         return jjMoveStringLiteralDfa8_0(active0, 0x80010000000000L, active1, 0L);
      case 117:
         if ((active0 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(7, 23, 204);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa9_0(active0, 0x80000000000000L);
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x40000000000000L);
      case 101:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 40, 12);
         else if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 45, 12);
         else if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 46, 12);
         break;
      case 116:
         return jjMoveStringLiteralDfa9_0(active0, 0x8000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa10_0(active0, 0x88000000000000L);
      case 107:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 54, 12);
         break;
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa11_0(active0, 0x8000000000000L);
      case 110:
         return jjMoveStringLiteralDfa11_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa12_0(active0, 0x80000000000000L);
      case 101:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(11, 51, 12);
         break;
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa13_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 117:
         return jjMoveStringLiteralDfa14_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L);
}
private int jjMoveStringLiteralDfa14_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(12, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0, 0L);
      return 14;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa15_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(13, active0, 0L);
}
private int jjMoveStringLiteralDfa15_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(13, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, active0, 0L);
      return 15;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa16_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(14, active0, 0L);
}
private int jjMoveStringLiteralDfa16_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(14, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, active0, 0L);
      return 16;
   }
   switch(curChar)
   {
      case 115:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(16, 55, 12);
         break;
      default :
         break;
   }
   return jjStartNfa_0(15, active0, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 422;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 161:
               case 12:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 422:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(260, 261);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(254, 255);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(249, 250);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 101)
                        kind = 101;
                     jjCheckNAdd(247);
                  }
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 375:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 404;
                  if (curChar == 34)
                     jjCheckNAddStates(0, 2);
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(260, 261);
                  else if (curChar == 45)
                     jjCheckNAddStates(3, 5);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(254, 255);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(249, 250);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 101)
                        kind = 101;
                     jjCheckNAdd(247);
                  }
                  break;
               case 200:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 164:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 120:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 240:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 239:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 413:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 0:
                  if ((0x2000677b00000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                  }
                  else if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 101)
                        kind = 101;
                     jjCheckNAddStates(6, 12);
                  }
                  else if (curChar == 34)
                     jjAddStates(13, 15);
                  if ((0x280000000000L & l) != 0L)
                     jjAddStates(16, 19);
                  else if (curChar == 34)
                     jjCheckNAddStates(20, 25);
                  else if (curChar == 48)
                     jjAddStates(26, 29);
                  else if (curChar == 35)
                     jjCheckNAddStates(30, 32);
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 15:
                  if ((0x1008400000000L & l) != 0L && kind > 110)
                     kind = 110;
                  break;
               case 84:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 113;
                  if (curChar == 34)
                     jjCheckNAddStates(33, 35);
                  break;
               case 159:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 74;
                  if (curChar == 34)
                     jjCheckNAddStates(36, 38);
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 243:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 238:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 194;
                  if (curChar == 34)
                     jjCheckNAddStates(39, 41);
                  break;
               case 158:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 81:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 242:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 409:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 410:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 162:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 44:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 152;
                  if (curChar == 34)
                     jjCheckNAddStates(42, 44);
                  break;
               case 204:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 233;
                  if (curChar == 34)
                     jjCheckNAddStates(45, 47);
                  break;
               case 157:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 241:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 411:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 1:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     jjCheckNAddStates(30, 32);
                  break;
               case 2:
                  if ((0x2400L & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 3:
                  if (curChar == 10 && kind > 5)
                     kind = 5;
                  break;
               case 4:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     jjCheckNAddStates(3, 5);
                  break;
               case 7:
                  if ((0x2400L & l) != 0L && kind > 6)
                     kind = 6;
                  break;
               case 8:
                  if (curChar == 10 && kind > 6)
                     kind = 6;
                  break;
               case 9:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 13:
                  if ((0x2000677b00000000L & l) != 0L && kind > 100)
                     kind = 100;
                  break;
               case 18:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAddTwoStates(18, 19);
                  break;
               case 19:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjCheckNAdd(19);
                  break;
               case 21:
               case 26:
               case 34:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(22);
                  break;
               case 22:
                  if ((0xff000000000000L & l) != 0L && kind > 110)
                     kind = 110;
                  break;
               case 24:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 25:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 29:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 30:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 31:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 32:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 33:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 46:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddStates(36, 38);
                  break;
               case 48:
                  if ((0x1008400000000L & l) != 0L)
                     jjCheckNAddStates(36, 38);
                  break;
               case 49:
               case 71:
                  if (curChar == 34 && kind > 119)
                     kind = 119;
                  break;
               case 52:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(48, 52);
                  break;
               case 53:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(53, 56);
                  break;
               case 55:
               case 60:
               case 68:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(56);
                  break;
               case 56:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(36, 38);
                  break;
               case 58:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 59:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 63:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 64:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 65:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 66:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 67:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 69:
                  if (curChar == 34)
                     jjCheckNAdd(70);
                  break;
               case 70:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddTwoStates(70, 73);
                  break;
               case 72:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 75:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 77:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjAddStates(57, 58);
                  break;
               case 85:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 87:
                  if ((0x1008400000000L & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 88:
               case 110:
                  if (curChar == 34 && kind > 120)
                     kind = 120;
                  break;
               case 91:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(59, 63);
                  break;
               case 92:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(64, 67);
                  break;
               case 94:
               case 99:
               case 107:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(95);
                  break;
               case 95:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 97:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 98:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 102:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 103:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 104:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 105:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 106:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 108:
                  if (curChar == 34)
                     jjCheckNAdd(109);
                  break;
               case 109:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddTwoStates(109, 112);
                  break;
               case 111:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 114:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 116:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjAddStates(68, 69);
                  break;
               case 124:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddStates(42, 44);
                  break;
               case 126:
                  if ((0x1008400000000L & l) != 0L)
                     jjCheckNAddStates(42, 44);
                  break;
               case 127:
               case 149:
                  if (curChar == 34 && kind > 121)
                     kind = 121;
                  break;
               case 130:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(70, 74);
                  break;
               case 131:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(75, 78);
                  break;
               case 133:
               case 138:
               case 146:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(134);
                  break;
               case 134:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(42, 44);
                  break;
               case 136:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 137:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 141:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 142:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 143:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 144:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 145:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 147:
                  if (curChar == 34)
                     jjCheckNAdd(148);
                  break;
               case 148:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddTwoStates(148, 151);
                  break;
               case 150:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 153:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 155:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjAddStates(79, 80);
                  break;
               case 166:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddStates(39, 41);
                  break;
               case 168:
                  if ((0x1008400000000L & l) != 0L)
                     jjCheckNAddStates(39, 41);
                  break;
               case 169:
               case 191:
                  if (curChar == 34 && kind > 122)
                     kind = 122;
                  break;
               case 172:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(81, 85);
                  break;
               case 173:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(86, 89);
                  break;
               case 175:
               case 180:
               case 188:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(176);
                  break;
               case 176:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(39, 41);
                  break;
               case 178:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 179:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 183:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 184:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 185:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 186:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 187:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 189:
                  if (curChar == 34)
                     jjCheckNAdd(190);
                  break;
               case 190:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddTwoStates(190, 193);
                  break;
               case 192:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 194:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 195:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 197:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjAddStates(90, 91);
                  break;
               case 205:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddStates(45, 47);
                  break;
               case 207:
                  if ((0x1008400000000L & l) != 0L)
                     jjCheckNAddStates(45, 47);
                  break;
               case 208:
               case 230:
                  if (curChar == 34 && kind > 124)
                     kind = 124;
                  break;
               case 211:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(92, 96);
                  break;
               case 212:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(97, 100);
                  break;
               case 214:
               case 219:
               case 227:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(215);
                  break;
               case 215:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(45, 47);
                  break;
               case 217:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 218:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 221:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 222:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 223:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 224:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 225:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 226:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 228:
                  if (curChar == 34)
                     jjCheckNAdd(229);
                  break;
               case 229:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddTwoStates(229, 232);
                  break;
               case 231:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 234:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 236:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjAddStates(101, 102);
                  break;
               case 245:
                  if ((0x280000000000L & l) != 0L)
                     jjAddStates(16, 19);
                  break;
               case 246:
               case 247:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAdd(247);
                  break;
               case 248:
               case 249:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(249, 250);
                  break;
               case 250:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 251:
               case 252:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 102)
                     kind = 102;
                  jjCheckNAdd(252);
                  break;
               case 253:
               case 254:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(254, 255);
                  break;
               case 256:
                  if ((0x280000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 257:
               case 258:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjCheckNAdd(258);
                  break;
               case 259:
               case 260:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(260, 261);
                  break;
               case 261:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 262:
               case 263:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(263, 255);
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjCheckNAddStates(6, 12);
                  break;
               case 265:
                  if (curChar == 48)
                     jjAddStates(26, 29);
                  break;
               case 267:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  jjCheckNAddTwoStates(267, 268);
                  break;
               case 268:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  jjCheckNAdd(268);
                  break;
               case 270:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAddTwoStates(270, 271);
                  break;
               case 271:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAdd(271);
                  break;
               case 273:
                  if ((0x280000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 274:
               case 275:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  jjCheckNAdd(275);
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  jjCheckNAddTwoStates(277, 278);
                  break;
               case 278:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  jjCheckNAdd(278);
                  break;
               case 279:
                  if (curChar == 34)
                     jjCheckNAddStates(20, 25);
                  break;
               case 280:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddStates(103, 105);
                  break;
               case 282:
                  if ((0x1008400000000L & l) != 0L)
                     jjCheckNAddStates(103, 105);
                  break;
               case 283:
               case 329:
                  if (curChar == 34 && kind > 108)
                     kind = 108;
                  break;
               case 286:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(106, 110);
                  break;
               case 287:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(111, 114);
                  break;
               case 289:
               case 294:
               case 302:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(290);
                  break;
               case 290:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(103, 105);
                  break;
               case 292:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 293:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 296:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 297:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 298:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 299:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 300:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 301:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 303:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddStates(115, 117);
                  break;
               case 305:
                  if ((0x1008400000000L & l) != 0L)
                     jjCheckNAddStates(115, 117);
                  break;
               case 306:
                  if (curChar == 34 && kind > 109)
                     kind = 109;
                  break;
               case 309:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(118, 122);
                  break;
               case 310:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(123, 126);
                  break;
               case 312:
               case 317:
               case 325:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(313);
                  break;
               case 313:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(115, 117);
                  break;
               case 315:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 316:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 319:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 320:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 321:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 322:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 323:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 324:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 326:
                  if (curChar == 34)
                     jjAddStates(13, 15);
                  break;
               case 327:
                  if (curChar == 34)
                     jjCheckNAdd(328);
                  break;
               case 328:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddTwoStates(328, 331);
                  break;
               case 330:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 331:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 333:
                  if (curChar == 34)
                     jjCheckNAdd(334);
                  break;
               case 334:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddTwoStates(334, 337);
                  break;
               case 335:
                  if (curChar == 34 && kind > 115)
                     kind = 115;
                  break;
               case 336:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 337:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 338:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 339:
                  if (curChar == 34)
                     jjCheckNAdd(340);
                  break;
               case 340:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddTwoStates(340, 343);
                  break;
               case 341:
                  if (curChar == 34 && kind > 117)
                     kind = 117;
                  break;
               case 342:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 343:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 344:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 346:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjAddStates(127, 128);
                  break;
               case 348:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjAddStates(129, 130);
                  break;
               case 350:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjAddStates(131, 132);
                  break;
               case 354:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 111)
                     kind = 111;
                  jjCheckNAddTwoStates(354, 355);
                  break;
               case 355:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 111)
                     kind = 111;
                  jjCheckNAdd(355);
                  break;
               case 357:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 358:
                  if ((0xff000000000000L & l) != 0L && kind > 112)
                     kind = 112;
                  break;
               case 360:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 361:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 362:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 363:
                  if ((0xff000000000000L & l) != 0L && kind > 113)
                     kind = 113;
                  break;
               case 365:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 366:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 367:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 368:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 369:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 370:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 371:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 372:
                  if ((0xff000000000000L & l) != 0L && kind > 114)
                     kind = 114;
                  break;
               case 376:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 378:
                  if ((0x1008400000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 379:
               case 401:
                  if (curChar == 34 && kind > 123)
                     kind = 123;
                  break;
               case 382:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(133, 137);
                  break;
               case 383:
                  if ((0x3000000000000L & l) != 0L)
                     jjCheckNAddStates(138, 141);
                  break;
               case 385:
               case 390:
               case 398:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(386);
                  break;
               case 386:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 388:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 389:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 392:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 393:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 394:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 395:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 396:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 397:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 399:
                  if (curChar == 34)
                     jjCheckNAdd(400);
                  break;
               case 400:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjCheckNAddTwoStates(400, 403);
                  break;
               case 402:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 403:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 404:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 405:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 407:
                  if ((0x23ff677b00000000L & l) != 0L)
                     jjAddStates(142, 143);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 161:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 83:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 107)
                  {
                     if (kind > 120)
                        kind = 120;
                     jjAddStates(144, 146);
                  }
                  break;
               case 375:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  else if (curChar == 96)
                     jjCheckNAdd(407);
                  break;
               case 200:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 164:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 121)
                  {
                     if (kind > 122)
                        kind = 122;
                     jjAddStates(147, 149);
                  }
                  break;
               case 120:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 119:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 240:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 239:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 160:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 413:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 419;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 0:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                  }
                  else if (curChar == 96)
                     jjCheckNAddStates(150, 152);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  else if (curChar == 92)
                     jjAddStates(153, 156);
                  if (curChar == 101)
                     jjAddStates(157, 159);
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 243;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 201;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 162;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 120;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 81;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 42;
                  else if (curChar == 92)
                     jjAddStates(160, 161);
                  break;
               case 15:
                  if ((0x14402010000020L & l) != 0L)
                  {
                     if (kind > 110)
                        kind = 110;
                  }
                  else if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 365;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 360;
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 357;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 354;
                  if (curChar == 92)
                     jjAddStates(162, 165);
                  break;
               case 84:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  else if (curChar == 96)
                     jjCheckNAdd(116);
                  break;
               case 159:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 42:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 45:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  else if (curChar == 96)
                     jjCheckNAdd(77);
                  break;
               case 203:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 117)
                  {
                     if (kind > 124)
                        kind = 124;
                     jjAddStates(166, 168);
                  }
                  break;
               case 199:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 243:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 118:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 238:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 165:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  else if (curChar == 96)
                     jjCheckNAdd(197);
                  break;
               case 158:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 41:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 81:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 122:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 101)
                  {
                     if (kind > 121)
                        kind = 121;
                     jjAddStates(169, 171);
                  }
                  break;
               case 242:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 374:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 116)
                  {
                     if (kind > 123)
                        kind = 123;
                     jjAddStates(172, 174);
                  }
                  break;
               case 409:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 410:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 415;
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 409;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 162:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 44:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 108)
                     jjAddStates(175, 177);
                  break;
               case 123:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  else if (curChar == 96)
                     jjCheckNAdd(155);
                  break;
               case 204:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  else if (curChar == 96)
                     jjCheckNAdd(236);
                  break;
               case 157:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 40:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 201:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 80:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 79:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 241:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 411:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 420;
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 35:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     jjCheckNAdd(12);
                  }
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 1:
                  jjAddStates(30, 32);
                  break;
               case 6:
                  jjAddStates(3, 5);
                  break;
               case 11:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 12:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjCheckNAdd(12);
                  break;
               case 13:
                  if ((0x7fffffed7ffffffL & l) != 0L && kind > 100)
                     kind = 100;
                  break;
               case 14:
                  if (curChar == 92)
                     jjAddStates(160, 161);
                  break;
               case 16:
                  if (curChar == 92)
                     jjAddStates(162, 165);
                  break;
               case 17:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 19:
                  if (curChar != 95)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 20:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 27:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 36:
                  if (curChar == 121 && kind > 118)
                     kind = 118;
                  break;
               case 37:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 43:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 46:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddStates(36, 38);
                  break;
               case 47:
                  if (curChar == 92)
                     jjAddStates(178, 179);
                  break;
               case 48:
                  if ((0x14402010000020L & l) != 0L)
                     jjCheckNAddStates(36, 38);
                  break;
               case 50:
                  if (curChar == 92)
                     jjAddStates(180, 183);
                  break;
               case 51:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 53:
                  if (curChar == 95)
                     jjCheckNAddStates(53, 56);
                  break;
               case 54:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 61:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 70:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjAddStates(184, 185);
                  break;
               case 76:
                  if (curChar == 96)
                     jjCheckNAdd(77);
                  break;
               case 77:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(77, 78);
                  break;
               case 78:
                  if (curChar == 96 && kind > 119)
                     kind = 119;
                  break;
               case 82:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 85:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 86:
                  if (curChar == 92)
                     jjAddStates(186, 187);
                  break;
               case 87:
                  if ((0x14402010000020L & l) != 0L)
                     jjCheckNAddStates(33, 35);
                  break;
               case 89:
                  if (curChar == 92)
                     jjAddStates(188, 191);
                  break;
               case 90:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 92:
                  if (curChar == 95)
                     jjCheckNAddStates(64, 67);
                  break;
               case 93:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 100:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 109:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjAddStates(192, 193);
                  break;
               case 115:
                  if (curChar == 96)
                     jjCheckNAdd(116);
                  break;
               case 116:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(116, 117);
                  break;
               case 117:
                  if (curChar == 96 && kind > 120)
                     kind = 120;
                  break;
               case 121:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 124:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddStates(42, 44);
                  break;
               case 125:
                  if (curChar == 92)
                     jjAddStates(194, 195);
                  break;
               case 126:
                  if ((0x14402010000020L & l) != 0L)
                     jjCheckNAddStates(42, 44);
                  break;
               case 128:
                  if (curChar == 92)
                     jjAddStates(196, 199);
                  break;
               case 129:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 131:
                  if (curChar == 95)
                     jjCheckNAddStates(75, 78);
                  break;
               case 132:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 139:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 148:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjAddStates(200, 201);
                  break;
               case 154:
                  if (curChar == 96)
                     jjCheckNAdd(155);
                  break;
               case 155:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(155, 156);
                  break;
               case 156:
                  if (curChar == 96 && kind > 121)
                     kind = 121;
                  break;
               case 163:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 166:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddStates(39, 41);
                  break;
               case 167:
                  if (curChar == 92)
                     jjAddStates(202, 203);
                  break;
               case 168:
                  if ((0x14402010000020L & l) != 0L)
                     jjCheckNAddStates(39, 41);
                  break;
               case 170:
                  if (curChar == 92)
                     jjAddStates(204, 207);
                  break;
               case 171:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 173:
                  if (curChar == 95)
                     jjCheckNAddStates(86, 89);
                  break;
               case 174:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 181:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 190:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjAddStates(208, 209);
                  break;
               case 196:
                  if (curChar == 96)
                     jjCheckNAdd(197);
                  break;
               case 197:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(197, 198);
                  break;
               case 198:
                  if (curChar == 96 && kind > 122)
                     kind = 122;
                  break;
               case 202:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 205:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddStates(45, 47);
                  break;
               case 206:
                  if (curChar == 92)
                     jjAddStates(210, 211);
                  break;
               case 207:
                  if ((0x14402010000020L & l) != 0L)
                     jjCheckNAddStates(45, 47);
                  break;
               case 209:
                  if (curChar == 92)
                     jjAddStates(212, 215);
                  break;
               case 210:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 212:
                  if (curChar == 95)
                     jjCheckNAddStates(97, 100);
                  break;
               case 213:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 220:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 229:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjAddStates(216, 217);
                  break;
               case 235:
                  if (curChar == 96)
                     jjCheckNAdd(236);
                  break;
               case 236:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(236, 237);
                  break;
               case 237:
                  if (curChar == 96 && kind > 124)
                     kind = 124;
                  break;
               case 244:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 247:
                  if (curChar != 95)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if (curChar == 95)
                     jjAddStates(218, 219);
                  break;
               case 252:
                  if (curChar != 95)
                     break;
                  if (kind > 102)
                     kind = 102;
                  jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 254:
                  if (curChar == 95)
                     jjCheckNAddTwoStates(254, 255);
                  break;
               case 255:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(220, 221);
                  break;
               case 258:
                  if (curChar != 95)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if (curChar == 95)
                     jjAddStates(222, 223);
                  break;
               case 263:
                  if (curChar == 95)
                     jjCheckNAddTwoStates(263, 255);
                  break;
               case 266:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 268:
                  if (curChar != 95)
                     break;
                  if (kind > 104)
                     kind = 104;
                  jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 269:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 271:
                  if (curChar != 95)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 272:
                  if (curChar == 100)
                     jjAddStates(224, 225);
                  break;
               case 275:
                  if (curChar != 95)
                     break;
                  if (kind > 106)
                     kind = 106;
                  jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 276:
                  if (curChar == 120)
                     jjCheckNAdd(277);
                  break;
               case 277:
                  if ((0x7eL & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  jjCheckNAddTwoStates(277, 278);
                  break;
               case 278:
                  if ((0x8000007eL & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  jjCheckNAdd(278);
                  break;
               case 280:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddStates(103, 105);
                  break;
               case 281:
                  if (curChar == 92)
                     jjAddStates(226, 227);
                  break;
               case 282:
                  if ((0x14402010000020L & l) != 0L)
                     jjCheckNAddStates(103, 105);
                  break;
               case 284:
                  if (curChar == 92)
                     jjAddStates(228, 231);
                  break;
               case 285:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 287:
                  if (curChar == 95)
                     jjCheckNAddStates(111, 114);
                  break;
               case 288:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 291:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 295:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 303:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddStates(115, 117);
                  break;
               case 304:
                  if (curChar == 92)
                     jjAddStates(232, 233);
                  break;
               case 305:
                  if ((0x14402010000020L & l) != 0L)
                     jjCheckNAddStates(115, 117);
                  break;
               case 307:
                  if (curChar == 92)
                     jjAddStates(234, 237);
                  break;
               case 308:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 310:
                  if (curChar == 95)
                     jjCheckNAddStates(123, 126);
                  break;
               case 311:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 318:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 328:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjAddStates(238, 239);
                  break;
               case 334:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjAddStates(240, 241);
                  break;
               case 340:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjAddStates(242, 243);
                  break;
               case 345:
                  if (curChar == 96)
                     jjCheckNAddStates(150, 152);
                  break;
               case 346:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(346, 347);
                  break;
               case 347:
                  if (curChar == 96 && kind > 108)
                     kind = 108;
                  break;
               case 348:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(348, 349);
                  break;
               case 349:
                  if (curChar == 96 && kind > 115)
                     kind = 115;
                  break;
               case 350:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(350, 351);
                  break;
               case 351:
                  if (curChar == 96 && kind > 116)
                     kind = 116;
                  break;
               case 352:
                  if (curChar == 92)
                     jjAddStates(153, 156);
                  break;
               case 353:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 355:
                  if (curChar != 95)
                     break;
                  if (kind > 111)
                     kind = 111;
                  jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 356:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 359:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 364:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 373:
                  if (curChar == 101)
                     jjAddStates(157, 159);
                  break;
               case 376:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 377:
                  if (curChar == 92)
                     jjAddStates(244, 245);
                  break;
               case 378:
                  if ((0x14402010000020L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 380:
                  if (curChar == 92)
                     jjAddStates(246, 249);
                  break;
               case 381:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 383:
                  if (curChar == 95)
                     jjCheckNAddStates(138, 141);
                  break;
               case 384:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 387:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 391:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 400:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjAddStates(250, 251);
                  break;
               case 406:
                  if (curChar == 96)
                     jjCheckNAdd(407);
                  break;
               case 407:
                  if ((0x7fffffed7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(407, 408);
                  break;
               case 408:
                  if (curChar == 96 && kind > 123)
                     kind = 123;
                  break;
               case 412:
                  if (curChar == 102 && kind > 125)
                     kind = 125;
                  break;
               case 414:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 415:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 416:
                  if (curChar == 102 && kind > 126)
                     kind = 126;
                  break;
               case 417:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 418:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 419:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 420:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 421:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(30, 32);
                  break;
               case 6:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(3, 5);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 422 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x80L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(1, 7);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   376, 377, 379, 6, 7, 9, 247, 249, 250, 254, 260, 261, 255, 332, 338, 344, 
   246, 248, 253, 259, 280, 281, 283, 303, 304, 306, 266, 269, 272, 276, 1, 2, 
   4, 85, 86, 88, 46, 47, 49, 166, 167, 169, 124, 125, 127, 205, 206, 208, 
   46, 47, 52, 53, 49, 46, 47, 53, 49, 77, 78, 85, 86, 91, 92, 88, 
   85, 86, 92, 88, 116, 117, 124, 125, 130, 131, 127, 124, 125, 131, 127, 155, 
   156, 166, 167, 172, 173, 169, 166, 167, 173, 169, 197, 198, 205, 206, 211, 212, 
   208, 205, 206, 212, 208, 236, 237, 280, 281, 283, 280, 281, 286, 287, 283, 280, 
   281, 287, 283, 303, 304, 306, 303, 304, 309, 310, 306, 303, 304, 310, 306, 346, 
   347, 348, 349, 350, 351, 376, 377, 382, 383, 379, 376, 377, 383, 379, 407, 408, 
   84, 114, 115, 165, 195, 196, 346, 348, 350, 353, 356, 359, 364, 410, 414, 421, 
   15, 16, 17, 20, 23, 27, 204, 234, 235, 123, 153, 154, 375, 405, 406, 45, 
   75, 76, 48, 50, 51, 54, 57, 61, 70, 73, 87, 89, 90, 93, 96, 100, 
   109, 112, 126, 128, 129, 132, 135, 139, 148, 151, 168, 170, 171, 174, 177, 181, 
   190, 193, 207, 209, 210, 213, 216, 220, 229, 232, 249, 250, 256, 257, 260, 261, 
   273, 274, 282, 284, 285, 288, 291, 295, 305, 307, 308, 311, 314, 318, 328, 331, 
   334, 337, 340, 343, 378, 380, 381, 384, 387, 391, 400, 403, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, "\12", "\143\141\163\145", 
"\144\157", "\145\156\144", "\145\170\160\157\162\164", "\147\154\157\142\141\154", 
"\151\156\143\154\165\144\145", "\160\165\142\154\151\143", "\163\167\151\164\143\150", 
"\165\156\164\151\154", "\141\163", "\143\157\156\163\164\141\156\164", "\145\154\163\145", 
"\145\156\164\162\171", "\146\141\154\154\164\150\162\165", "\147\157\164\157", 
"\154\141\142\145\154", "\162\145\164\162\171", "\164\150\145\156", "\167\150\151\154\145", 
"\142\162\145\141\153", "\143\157\156\164\151\156\165\145", "\145\154\163\145\144\145\146", 
"\145\156\165\155", "\151\146", "\154\157\157\160", "\157\166\145\162\162\151\144\145", 
"\162\145\164\165\162\156", "\164\157", "\167\151\164\150", "\142\171", 
"\144\145\160\162\145\143\141\164\145", "\145\154\163\151\146", "\145\170\151\164", 
"\146\165\156\143\164\151\157\156", "\151\146\144\145\146", "\156\141\155\145\163\160\141\143\145", 
"\160\162\157\143\145\144\165\162\145", "\162\157\165\164\151\156\145", "\164\171\160\145", 
"\167\151\164\150\157\165\164", "\160\162\157\146\151\154\145", 
"\160\162\157\146\151\154\145\137\164\151\155\145", "\164\162\141\143\145", "\142\141\164\143\150", 
"\164\171\160\145\137\143\150\145\143\153", "\151\156\144\151\162\145\143\164\137\151\156\143\154\165\144\145\163", 
"\151\156\154\151\156\145", "\167\141\162\156\151\156\147", "\163\141\166\145", 
"\162\145\163\164\157\162\145", "\163\164\162\151\143\164", "\145\154\163\151\146\144\145\146", 
"\146\157\162", "\50", "\51", "\173", "\175", "\133", "\135", "\73", "\54", "\56", null, 
"\56\56", null, null, "\72", "\156\157\164", "\53", "\55", "\52", "\57", "\134", "\46", 
"\76", "\74", "\74\75", "\76\75", "\75", "\41\75", "\157\162", "\141\156\144", 
"\170\157\162", "\77", "\44", "\141\164\157\155", "\151\156\164\145\147\145\162", 
"\163\145\161\165\145\156\143\145", "\157\142\152\145\143\164", null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "WithinComment",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, 
};
static final long[] jjtoToken = {
   0xfffffffffffffe01L, 0x7ffffffffffff2ffL, 
};
static final long[] jjtoSkip = {
   0xfeL, 0x0L, 
};
static final long[] jjtoMore = {
   0x100L, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[422];
private final int[] jjstateSet = new int[844];
protected char curChar;
/** Constructor. */
public MeuphoriaTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public MeuphoriaTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 422; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         try { input_stream.backup(0);
            while (curChar <= 13 && (0x2200L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 8)
         {
            jjmatchedKind = 8;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
