/* MeuphoriaTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. MeuphoriaTokenManager.java */

/** Token Manager. */
@SuppressWarnings("unused")public class MeuphoriaTokenManager implements MeuphoriaConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x800801004000000L) != 0L)
         {
            jjmatchedKind = 99;
            return 524;
         }
         if ((active0 & 0x2000060180603000L) != 0L)
         {
            jjmatchedKind = 99;
            return 1088;
         }
         if ((active0 & 0x40100400L) != 0L)
         {
            jjmatchedKind = 99;
            return 410;
         }
         if ((active0 & 0x202004010000000L) != 0L)
         {
            jjmatchedKind = 99;
            return 65;
         }
         if ((active0 & 0x4000080000800000L) != 0L)
         {
            jjmatchedKind = 99;
            return 641;
         }
         if ((active1 & 0x40000L) != 0L)
            return 38;
         if ((active0 & 0x20008020000000L) != 0L)
         {
            jjmatchedKind = 99;
            return 293;
         }
         if ((active1 & 0x8000L) != 0L)
            return 5;
         if ((active0 & 0x402000000L) != 0L)
         {
            jjmatchedKind = 99;
            return 179;
         }
         if ((active1 & 0x4000L) != 0L)
            return 1100;
         if ((active0 & 0x15dd712a090fc800L) != 0L || (active1 & 0x79c002000L) != 0L)
         {
            jjmatchedKind = 99;
            return 1101;
         }
         if ((active1 & 0x40090000L) != 0L)
            return 1102;
         return -1;
      case 1:
         if ((active0 & 0x100401000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 1089;
         }
         if ((active0 & 0x800001004000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 523;
         }
         if ((active0 & 0x40100000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 409;
         }
         if ((active0 & 0x2000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 178;
         }
         if ((active0 & 0x77fdeb0c9927c400L) != 0L || (active1 & 0x798002000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 1101;
         }
         if ((active0 & 0x40000002000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 1087;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 640;
         }
         if ((active0 & 0x2004000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 64;
         }
         if ((active0 & 0x10a200080800L) != 0L || (active1 & 0x4000000L) != 0L)
            return 1101;
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 1;
            }
            return 292;
         }
         return -1;
      case 2:
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 177;
         }
         if ((active0 & 0x2004000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 58;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 639;
         }
         if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 977;
         }
         if ((active0 & 0x3ffdfb0d9967e400L) != 0L || (active1 & 0x780000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 1101;
         }
         if ((active0 & 0x4000000000000000L) != 0L || (active1 & 0x18002000L) != 0L)
            return 1101;
         if ((active0 & 0x1000L) != 0L)
            return 1091;
         if ((active0 & 0x1004000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 522;
         }
         if ((active0 & 0x20000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 291;
         }
         if ((active0 & 0x40100000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 2;
            return 408;
         }
         return -1;
      case 3:
         if ((active0 & 0x40000000000L) != 0L)
            return 978;
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 407;
         }
         if ((active0 & 0x3bbcfb181057e000L) != 0L || (active1 & 0x700000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 1101;
         }
         if ((active0 & 0x2004000000000L) != 0L)
            return 63;
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 638;
         }
         if ((active0 & 0x4000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 412;
         }
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 181;
         }
         if ((active0 & 0x441000589200400L) != 0L || (active1 & 0x80000000L) != 0L)
            return 1101;
         if ((active0 & 0x2000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 3;
            }
            return 67;
         }
         return -1;
      case 4:
         if ((active0 & 0x2000000L) != 0L)
            return 68;
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 4;
            }
            return 637;
         }
         if ((active0 & 0x20000000L) != 0L)
            return 182;
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 4;
            }
            return 406;
         }
         if ((active0 & 0x1b8ee9188013e000L) != 0L || (active1 & 0x700000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 4;
            }
            return 1101;
         }
         if ((active0 & 0x4000000L) != 0L)
            return 413;
         if ((active0 & 0x2030120010440000L) != 0L)
            return 1101;
         if ((active0 & 0x40000000000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 4;
            }
            return 1103;
         }
         return -1;
      case 5:
         if ((active0 & 0x2acee90880108000L) != 0L || (active1 & 0x300000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 5;
            return 1101;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 5;
            return 636;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 5;
            return 405;
         }
         if ((active0 & 0x1100001000036000L) != 0L || (active1 & 0x400000000L) != 0L)
            return 1101;
         return -1;
      case 6:
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 6;
            }
            return 526;
         }
         if ((active0 & 0xa0e800080008000L) != 0L || (active1 & 0x100000000L) != 0L)
            return 1101;
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 6;
            }
            return 295;
         }
         if ((active0 & 0x20c0690800100000L) != 0L || (active1 & 0x200000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 99;
               jjmatchedPos = 6;
            }
            return 1101;
         }
         return -1;
      case 7:
         if ((active0 & 0x800000L) != 0L)
            return 527;
         if ((active0 & 0x40000000L) != 0L)
            return 296;
         if ((active0 & 0xc0610000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 7;
            return 1101;
         }
         if ((active0 & 0x2000080800100000L) != 0L || (active1 & 0x200000000L) != 0L)
            return 1101;
         if ((active0 & 0x8000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 7;
            return 1103;
         }
         return -1;
      case 8:
         if ((active0 & 0x48000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 8;
            return 1101;
         }
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 8;
            return 1103;
         }
         if ((active0 & 0x610000000000L) != 0L)
            return 1101;
         return -1;
      case 9:
         if ((active0 & 0x88000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 9;
            return 1101;
         }
         if ((active0 & 0x40000000000000L) != 0L)
            return 1101;
         return -1;
      case 10:
         if ((active0 & 0x88000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 10;
            return 1101;
         }
         return -1;
      case 11:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 11;
            return 1101;
         }
         if ((active0 & 0x8000000000000L) != 0L)
            return 1101;
         return -1;
      case 12:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 12;
            return 1101;
         }
         return -1;
      case 13:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 13;
            return 1101;
         }
         return -1;
      case 14:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 14;
            return 1101;
         }
         return -1;
      case 15:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 15;
            return 1101;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 9);
      case 33:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x2000000L);
      case 36:
         return jjStartNfaWithStates_0(0, 94, 1102);
      case 38:
         return jjStartNfaWithStates_0(0, 83, 1102);
      case 40:
         return jjStopAtPos(0, 63);
      case 41:
         return jjStopAtPos(0, 64);
      case 42:
         return jjStartNfaWithStates_0(0, 80, 1102);
      case 43:
         return jjStartNfaWithStates_0(0, 78, 1100);
      case 44:
         return jjStopAtPos(0, 70);
      case 45:
         return jjStartNfaWithStates_0(0, 79, 5);
      case 46:
         jjmatchedKind = 71;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x200L);
      case 47:
         jjmatchedKind = 81;
         return jjMoveStringLiteralDfa1_0(0x10L, 0x0L);
      case 58:
         return jjStopAtPos(0, 76);
      case 59:
         return jjStopAtPos(0, 69);
      case 60:
         jjmatchedKind = 85;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x400000L);
      case 61:
         return jjStopAtPos(0, 88);
      case 62:
         jjmatchedKind = 84;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x800000L);
      case 63:
         return jjStopAtPos(0, 93);
      case 91:
         return jjStopAtPos(0, 67);
      case 92:
         return jjStartNfaWithStates_0(0, 82, 38);
      case 93:
         return jjStopAtPos(0, 68);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x80000L, 0x88000000L);
      case 98:
         return jjMoveStringLiteralDfa1_0(0x20008020000000L, 0x0L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x40100400L, 0x0L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x10000000800L, 0x0L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x2000060180603000L, 0x0L);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x4000080000800000L, 0x0L);
      case 103:
         return jjMoveStringLiteralDfa1_0(0x1004000L, 0x0L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x180100200008000L, 0x100000000L);
      case 108:
         return jjMoveStringLiteralDfa1_0(0x402000000L, 0x0L);
      case 110:
         return jjMoveStringLiteralDfa1_0(0x200000000000L, 0x2000L);
      case 111:
         return jjMoveStringLiteralDfa1_0(0x800000000L, 0x404000000L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0xc400000010000L, 0x0L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x800801004000000L, 0x0L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x1400000000020000L, 0x200000000L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x51002008000000L, 0x0L);
      case 117:
         return jjMoveStringLiteralDfa1_0(0x40000L, 0x0L);
      case 119:
         return jjMoveStringLiteralDfa1_0(0x202004010000000L, 0x0L);
      case 120:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x10000000L);
      case 123:
         return jjStopAtPos(0, 65);
      case 125:
         return jjStopAtPos(0, 66);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 42:
         if ((active0 & 0x10L) != 0L)
            return jjStopAtPos(1, 4);
         break;
      case 46:
         if ((active1 & 0x200L) != 0L)
            return jjStopAtPos(1, 73);
         break;
      case 61:
         if ((active1 & 0x400000L) != 0L)
            return jjStopAtPos(1, 86);
         else if ((active1 & 0x800000L) != 0L)
            return jjStopAtPos(1, 87);
         else if ((active1 & 0x2000000L) != 0L)
            return jjStopAtPos(1, 89);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x620200002800400L, active1, 0L);
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400000000L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x800011004000000L, active1, 0x200000000L);
      case 102:
         if ((active0 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 33;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000L, active1, 0L);
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x18000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x2004000000000L, active1, 0L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000020080204000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x180000100449000L, active1, 0x108000000L);
      case 111:
         if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(1, 11, 1101);
         else if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 37, 1101);
         return jjMoveStringLiteralDfa2_0(active0, 0x4000800441100000L, active1, 0x10002000L);
      case 114:
         if ((active1 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(1, 90, 1101);
         return jjMoveStringLiteralDfa2_0(active0, 0x1c400020000000L, active1, 0L);
      case 115:
         if ((active0 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(1, 19, 1101);
         break;
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000000L, active1, 0x80000000L);
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000010000L, active1, 0L);
      case 118:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000L, active1, 0L);
      case 119:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000L, active1, 0L);
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000002000L, active1, 0L);
      case 121:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 39, 1101);
         return jjMoveStringLiteralDfa2_0(active0, 0x41000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000000000L, active1, 0L);
      case 98:
         return jjMoveStringLiteralDfa3_0(active0, 0x2010000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000L, active1, 0L);
      case 100:
         if ((active0 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(2, 12, 1091);
         else if ((active1 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(2, 91, 1101);
         return jjMoveStringLiteralDfa3_0(active0, 0x80100000000000L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x828000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x40010020000L, active1, 0L);
      case 106:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x400000000L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000800000L, active1, 0L);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x80040100000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0xc400400004000L, active1, 0x80000000L);
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0x41010000002000L, active1, 0L);
      case 113:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200000000L);
      case 114:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 62, 1101);
         else if ((active1 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(2, 92, 1101);
         return jjMoveStringLiteralDfa3_0(active0, 0x1200000000000000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x2800020080200400L, active1, 0L);
      case 116:
         if ((active1 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(2, 77, 1101);
         return jjMoveStringLiteralDfa3_0(active0, 0x22005005440000L, active1, 0x100000000L);
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x800100000000L, active1, 0L);
      case 118:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x20000000L, active1, 0L);
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x30480000000000L, active1, 0L);
      case 101:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(3, 10, 1101);
         else if ((active0 & 0x200000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 3;
         }
         else if ((active0 & 0x1000000000000L) != 0L)
         {
            jjmatchedKind = 48;
            jjmatchedPos = 3;
         }
         else if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 58, 1101);
         return jjMoveStringLiteralDfa4_0(active0, 0x40300082000000L, active1, 0x500000000L);
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0xc000000000000L, active1, 0L);
      case 104:
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 38;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x3180020000040000L, active1, 0L);
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0x10818000L, active1, 0L);
      case 109:
         if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(3, 32, 1101);
         else if ((active1 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(3, 95, 1101);
         break;
      case 110:
         if ((active0 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(3, 27, 1101);
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000000L, active1, 0L);
      case 111:
         if ((active0 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_0(3, 24, 1101);
         return jjMoveStringLiteralDfa4_0(active0, 0x2000L, active1, 0L);
      case 112:
         if ((active0 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(3, 34, 1101);
         break;
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0x10804400000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000L, active1, 0L);
      case 116:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 42, 978);
         return jjMoveStringLiteralDfa4_0(active0, 0x800800040020000L, active1, 0L);
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000L, active1, 0x200000000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa5_0(active0, 0x40000000000000L, active1, 0L);
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x4000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x1000000000020000L, active1, 0x400000000L);
      case 100:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000L, active1, 0L);
      case 101:
         if ((active0 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(4, 28, 1101);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 52, 1101);
         return jjMoveStringLiteralDfa5_0(active0, 0x410000000000L, active1, 0x200000000L);
      case 102:
         if ((active0 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 41;
            jjmatchedPos = 4;
         }
         else if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 44, 1101);
         return jjMoveStringLiteralDfa5_0(active0, 0x2000000000000000L, active1, 0L);
      case 103:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x100000000L);
      case 104:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 53, 1101);
         break;
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x20c800040010000L, active1, 0L);
      case 107:
         if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(4, 29, 182);
         break;
      case 108:
         if ((active0 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(4, 18, 1101);
         else if ((active0 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(4, 25, 68);
         break;
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000000000000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x802000000000000L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x80001800002000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000L, active1, 0L);
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000900000L, active1, 0L);
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000L, active1, 0L);
      case 121:
         if ((active0 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(4, 22, 1101);
         else if ((active0 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(4, 26, 413);
         break;
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000L, active1, 0L);
      case 99:
         if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(5, 16, 1101);
         return jjMoveStringLiteralDfa6_0(active0, 0x40010000000000L, active1, 0L);
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000400000008000L, active1, 0L);
      case 101:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 56, 1101);
         return jjMoveStringLiteralDfa6_0(active0, 0x80000080000000L, active1, 0x100000000L);
      case 104:
         if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(5, 17, 1101);
         return jjMoveStringLiteralDfa6_0(active0, 0x800000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x80800000000L, active1, 0L);
      case 108:
         if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(5, 14, 1101);
         return jjMoveStringLiteralDfa6_0(active0, 0xc000000000000L, active1, 0L);
      case 110:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 36, 1101);
         return jjMoveStringLiteralDfa6_0(active0, 0x200800040000000L, active1, 0x200000000L);
      case 112:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000000000L, active1, 0L);
      case 116:
         if ((active0 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(5, 13, 1101);
         else if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 60, 1101);
         else if ((active1 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(5, 98, 1101);
         break;
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0x210000000000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa7_0(active0, 0x80000000000000L, active1, 0x200000000L);
      case 100:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000000L, active1, 0L);
      case 101:
         if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(6, 15, 1101);
         else if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 47, 1101);
         else if ((active0 & 0x4000000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 6;
         }
         else if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 59, 1101);
         return jjMoveStringLiteralDfa7_0(active0, 0x2008000000000000L, active1, 0L);
      case 102:
         if ((active0 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(6, 31, 1101);
         break;
      case 103:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 57, 1101);
         break;
      case 104:
         return jjMoveStringLiteralDfa7_0(active0, 0x40000000000000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa7_0(active0, 0x100000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa7_0(active0, 0x80000000000L, active1, 0L);
      case 114:
         if ((active1 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(6, 96, 1101);
         return jjMoveStringLiteralDfa7_0(active0, 0x800000L, active1, 0L);
      case 116:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 49, 1101);
         break;
      case 117:
         return jjMoveStringLiteralDfa7_0(active0, 0x400040000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa8_0(active0, 0x8000000000000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa8_0(active0, 0x200000000000L, active1, 0L);
      case 101:
         if ((active0 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(7, 30, 296);
         else if ((active0 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(7, 35, 1101);
         else if ((active1 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(7, 97, 1101);
         return jjMoveStringLiteralDfa8_0(active0, 0x40000000000000L, active1, 0L);
      case 102:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 61, 1101);
         break;
      case 110:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 43, 1101);
         break;
      case 114:
         return jjMoveStringLiteralDfa8_0(active0, 0x400000000000L, active1, 0L);
      case 116:
         if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(7, 20, 1101);
         return jjMoveStringLiteralDfa8_0(active0, 0x80010000000000L, active1, 0L);
      case 117:
         if ((active0 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(7, 23, 527);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa9_0(active0, 0x80000000000000L);
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x40000000000000L);
      case 101:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 40, 1101);
         else if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 45, 1101);
         else if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 46, 1101);
         break;
      case 116:
         return jjMoveStringLiteralDfa9_0(active0, 0x8000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa10_0(active0, 0x88000000000000L);
      case 107:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 54, 1101);
         break;
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa11_0(active0, 0x8000000000000L);
      case 110:
         return jjMoveStringLiteralDfa11_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa12_0(active0, 0x80000000000000L);
      case 101:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(11, 51, 1101);
         break;
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa13_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 117:
         return jjMoveStringLiteralDfa14_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L);
}
private int jjMoveStringLiteralDfa14_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(12, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0, 0L);
      return 14;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa15_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(13, active0, 0L);
}
private int jjMoveStringLiteralDfa15_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(13, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, active0, 0L);
      return 15;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa16_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(14, active0, 0L);
}
private int jjMoveStringLiteralDfa16_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(14, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, active0, 0L);
      return 16;
   }
   switch(curChar)
   {
      case 115:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(16, 55, 1101);
         break;
      default :
         break;
   }
   return jjStartNfa_0(15, active0, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1100;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 978:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1057;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(15, 19); }
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 1089:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 179:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 407:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 1088:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 636:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 412:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 296:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 375;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(20, 24); }
                  break;
               case 523:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 641:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 295:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 405:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 1091:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 410:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 147;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(25, 29); }
                  break;
               case 639:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 0:
                  if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(30, 45); }
                  else if (curChar == 34)
                     { jjAddStates(46, 48); }
                  else if (curChar == 48)
                     { jjAddStates(49, 52); }
                  else if (curChar == 35)
                     { jjCheckNAddStates(53, 55); }
                  if (curChar == 34)
                     { jjCheckNAddStates(56, 65); }
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 408:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 526:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 1087:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 291:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 38:
                  if ((0x1008400000000L & l) != 0L && kind > 110)
                     kind = 110;
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 637:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 1101:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 182:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 261;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(66, 70); }
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 406:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 524:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(664, 665); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(662, 663); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(657, 658); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(655, 656); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(651, 652); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(649, 650); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 101)
                        kind = 101;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(646, 647); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(71, 74); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(34, 35); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(30, 31); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(28, 29); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(23, 24); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(21, 22); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(17, 18); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(15, 16); }
                  if (curChar == 45)
                     { jjCheckNAddStates(75, 77); }
                  break;
               case 977:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 522:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 640:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 1102:
                  if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  break;
               case 527:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 606;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(78, 82); }
                  break;
               case 1100:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(664, 665); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(662, 663); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(657, 658); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(655, 656); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(651, 652); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(649, 650); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 101)
                        kind = 101;
                     { jjCheckNAdd(648); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(646, 647); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(71, 74); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(34, 35); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(30, 31); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(28, 29); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(23, 24); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(21, 22); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(17, 18); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(15, 16); }
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 409:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 292:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 638:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  break;
               case 1103:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  break;
               case 413:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 492;
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(83, 87); }
                  break;
               case 1:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjCheckNAddStates(53, 55); }
                  break;
               case 2:
                  if ((0x2400L & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 3:
                  if (curChar == 10 && kind > 5)
                     kind = 5;
                  break;
               case 4:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjCheckNAddStates(75, 77); }
                  break;
               case 7:
                  if ((0x2400L & l) != 0L && kind > 6)
                     kind = 6;
                  break;
               case 8:
                  if (curChar == 10 && kind > 6)
                     kind = 6;
                  break;
               case 9:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 11:
                  if ((0x47000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(4, 6); }
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(0, 3); }
                  break;
               case 14:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(7, 14); }
                  break;
               case 15:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(15, 16); }
                  break;
               case 16:
               case 17:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(17, 18); }
                  break;
               case 18:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
               case 20:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(88, 91); }
                  break;
               case 21:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(21, 22); }
                  break;
               case 22:
               case 23:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(23, 24); }
                  break;
               case 25:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(92, 93); }
                  break;
               case 26:
               case 27:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(94, 97); }
                  break;
               case 28:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(28, 29); }
                  break;
               case 29:
               case 30:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(30, 31); }
                  break;
               case 31:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 32:
               case 33:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(33, 24); }
                  break;
               case 34:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(34, 35); }
                  break;
               case 35:
               case 36:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(71, 74); }
                  break;
               case 41:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  { jjCheckNAddTwoStates(41, 42); }
                  break;
               case 42:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  { jjCheckNAdd(42); }
                  break;
               case 44:
               case 49:
               case 57:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(45); }
                  break;
               case 45:
                  if ((0xff000000000000L & l) != 0L && kind > 110)
                     kind = 110;
                  break;
               case 47:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 48:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 52:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 53:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 54:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 55:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 56:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(98, 103); }
                  break;
               case 71:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(25, 29); }
                  break;
               case 73:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(25, 29); }
                  break;
               case 74:
               case 121:
                  if (curChar == 34 && kind > 119)
                     kind = 119;
                  break;
               case 75:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(104, 111); }
                  break;
               case 76:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(76, 77); }
                  break;
               case 77:
               case 78:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(78, 79); }
                  break;
               case 79:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 80:
               case 81:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(112, 117); }
                  break;
               case 82:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(82, 83); }
                  break;
               case 83:
               case 84:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(84, 85); }
                  break;
               case 86:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(118, 119); }
                  break;
               case 87:
               case 88:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(120, 125); }
                  break;
               case 89:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(89, 90); }
                  break;
               case 90:
               case 91:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(91, 92); }
                  break;
               case 92:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 93:
               case 94:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(94, 85); }
                  break;
               case 95:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(95, 96); }
                  break;
               case 96:
               case 97:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(126, 131); }
                  break;
               case 100:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(132, 138); }
                  break;
               case 101:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(139, 144); }
                  break;
               case 103:
               case 108:
               case 116:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(104); }
                  break;
               case 104:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(25, 29); }
                  break;
               case 106:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 107:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 111:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 112:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 113:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 114:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 115:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 117:
                  if (curChar == 34)
                     { jjCheckNAddStates(145, 147); }
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(148, 152); }
                  break;
               case 120:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(153, 156); }
                  break;
               case 122:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(157, 164); }
                  break;
               case 125:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(125, 126); }
                  break;
               case 126:
               case 127:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(127, 128); }
                  break;
               case 128:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 129:
               case 130:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(165, 169); }
                  break;
               case 131:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(131, 132); }
                  break;
               case 132:
               case 133:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(133, 134); }
                  break;
               case 135:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(170, 171); }
                  break;
               case 136:
               case 137:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(172, 176); }
                  break;
               case 138:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(138, 139); }
                  break;
               case 139:
               case 140:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(140, 141); }
                  break;
               case 141:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 142:
               case 143:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(143, 134); }
                  break;
               case 144:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(144, 145); }
                  break;
               case 145:
               case 146:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(177, 181); }
                  break;
               case 147:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 148:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(182, 186); }
                  break;
               case 152:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(187, 190); }
                  break;
               case 154:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(191, 198); }
                  break;
               case 155:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(155, 156); }
                  break;
               case 156:
               case 157:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(157, 158); }
                  break;
               case 158:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 159:
               case 160:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(199, 203); }
                  break;
               case 161:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(161, 162); }
                  break;
               case 162:
               case 163:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(163, 164); }
                  break;
               case 165:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(204, 205); }
                  break;
               case 166:
               case 167:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(206, 210); }
                  break;
               case 168:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(168, 169); }
                  break;
               case 169:
               case 170:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(170, 171); }
                  break;
               case 171:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 172:
               case 173:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(173, 164); }
                  break;
               case 174:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(174, 175); }
                  break;
               case 175:
               case 176:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(211, 215); }
                  break;
               case 184:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(216, 221); }
                  break;
               case 185:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(66, 70); }
                  break;
               case 187:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(66, 70); }
                  break;
               case 188:
               case 235:
                  if (curChar == 34 && kind > 120)
                     kind = 120;
                  break;
               case 189:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(222, 229); }
                  break;
               case 190:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(190, 191); }
                  break;
               case 191:
               case 192:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(192, 193); }
                  break;
               case 193:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 194:
               case 195:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(230, 235); }
                  break;
               case 196:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(196, 197); }
                  break;
               case 197:
               case 198:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(198, 199); }
                  break;
               case 200:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(236, 237); }
                  break;
               case 201:
               case 202:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(238, 243); }
                  break;
               case 203:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(203, 204); }
                  break;
               case 204:
               case 205:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(205, 206); }
                  break;
               case 206:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 207:
               case 208:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(208, 199); }
                  break;
               case 209:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(209, 210); }
                  break;
               case 210:
               case 211:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(244, 249); }
                  break;
               case 214:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(250, 256); }
                  break;
               case 215:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(257, 262); }
                  break;
               case 217:
               case 222:
               case 230:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(218); }
                  break;
               case 218:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(66, 70); }
                  break;
               case 220:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 221:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 225:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 226:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 227:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 228:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 229:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 231:
                  if (curChar == 34)
                     { jjCheckNAddStates(263, 265); }
                  break;
               case 233:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(266, 270); }
                  break;
               case 234:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(271, 274); }
                  break;
               case 236:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 237:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(275, 282); }
                  break;
               case 239:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(239, 240); }
                  break;
               case 240:
               case 241:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(241, 242); }
                  break;
               case 242:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 243:
               case 244:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(283, 287); }
                  break;
               case 245:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(245, 246); }
                  break;
               case 246:
               case 247:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(247, 248); }
                  break;
               case 249:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(288, 289); }
                  break;
               case 250:
               case 251:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(290, 294); }
                  break;
               case 252:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(252, 253); }
                  break;
               case 253:
               case 254:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(254, 255); }
                  break;
               case 255:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 256:
               case 257:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(257, 248); }
                  break;
               case 258:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(258, 259); }
                  break;
               case 259:
               case 260:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(295, 299); }
                  break;
               case 261:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 262:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 265:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(300, 304); }
                  break;
               case 266:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(305, 308); }
                  break;
               case 268:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(309, 316); }
                  break;
               case 269:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(269, 270); }
                  break;
               case 270:
               case 271:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(271, 272); }
                  break;
               case 272:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 273:
               case 274:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(317, 321); }
                  break;
               case 275:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(275, 276); }
                  break;
               case 276:
               case 277:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(277, 278); }
                  break;
               case 279:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(322, 323); }
                  break;
               case 280:
               case 281:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(324, 328); }
                  break;
               case 282:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(282, 283); }
                  break;
               case 283:
               case 284:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(284, 285); }
                  break;
               case 285:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 286:
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(287, 278); }
                  break;
               case 288:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(288, 289); }
                  break;
               case 289:
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(329, 333); }
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(334, 339); }
                  break;
               case 299:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(20, 24); }
                  break;
               case 301:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(20, 24); }
                  break;
               case 302:
               case 349:
                  if (curChar == 34 && kind > 121)
                     kind = 121;
                  break;
               case 303:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(340, 347); }
                  break;
               case 304:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(304, 305); }
                  break;
               case 305:
               case 306:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(306, 307); }
                  break;
               case 307:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 308:
               case 309:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(348, 353); }
                  break;
               case 310:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(310, 311); }
                  break;
               case 311:
               case 312:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(312, 313); }
                  break;
               case 314:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(354, 355); }
                  break;
               case 315:
               case 316:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(356, 361); }
                  break;
               case 317:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(317, 318); }
                  break;
               case 318:
               case 319:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(319, 320); }
                  break;
               case 320:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 321:
               case 322:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(322, 313); }
                  break;
               case 323:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(323, 324); }
                  break;
               case 324:
               case 325:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(362, 367); }
                  break;
               case 328:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(368, 374); }
                  break;
               case 329:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(375, 380); }
                  break;
               case 331:
               case 336:
               case 344:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(332); }
                  break;
               case 332:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(20, 24); }
                  break;
               case 334:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 335:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 338:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 339:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 340:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 341:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 342:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 343:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 345:
                  if (curChar == 34)
                     { jjCheckNAddStates(381, 383); }
                  break;
               case 347:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(384, 388); }
                  break;
               case 348:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(389, 392); }
                  break;
               case 350:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 351:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 352:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(393, 400); }
                  break;
               case 353:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(353, 354); }
                  break;
               case 354:
               case 355:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(355, 356); }
                  break;
               case 356:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 357:
               case 358:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(401, 405); }
                  break;
               case 359:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(359, 360); }
                  break;
               case 360:
               case 361:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 363:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(406, 407); }
                  break;
               case 364:
               case 365:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(408, 412); }
                  break;
               case 366:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(366, 367); }
                  break;
               case 367:
               case 368:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 369:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 370:
               case 371:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(371, 362); }
                  break;
               case 372:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(372, 373); }
                  break;
               case 373:
               case 374:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(413, 417); }
                  break;
               case 375:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 376:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 379:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(418, 422); }
                  break;
               case 380:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(423, 426); }
                  break;
               case 382:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(427, 434); }
                  break;
               case 383:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(383, 384); }
                  break;
               case 384:
               case 385:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(385, 386); }
                  break;
               case 386:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 387:
               case 388:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(435, 439); }
                  break;
               case 389:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(389, 390); }
                  break;
               case 390:
               case 391:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 393:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(440, 441); }
                  break;
               case 394:
               case 395:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(442, 446); }
                  break;
               case 396:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(396, 397); }
                  break;
               case 397:
               case 398:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(398, 399); }
                  break;
               case 399:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 400;
                  break;
               case 400:
               case 401:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(401, 392); }
                  break;
               case 402:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(402, 403); }
                  break;
               case 403:
               case 404:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(447, 451); }
                  break;
               case 415:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(452, 457); }
                  break;
               case 416:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(83, 87); }
                  break;
               case 418:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(83, 87); }
                  break;
               case 419:
               case 466:
                  if (curChar == 34 && kind > 122)
                     kind = 122;
                  break;
               case 420:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(458, 465); }
                  break;
               case 421:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(421, 422); }
                  break;
               case 422:
               case 423:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(423, 424); }
                  break;
               case 424:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 425:
               case 426:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(466, 471); }
                  break;
               case 427:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(427, 428); }
                  break;
               case 428:
               case 429:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(429, 430); }
                  break;
               case 431:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(472, 473); }
                  break;
               case 432:
               case 433:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(474, 479); }
                  break;
               case 434:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(434, 435); }
                  break;
               case 435:
               case 436:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(436, 437); }
                  break;
               case 437:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 438:
               case 439:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(439, 430); }
                  break;
               case 440:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(440, 441); }
                  break;
               case 441:
               case 442:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(480, 485); }
                  break;
               case 445:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(486, 492); }
                  break;
               case 446:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(493, 498); }
                  break;
               case 448:
               case 453:
               case 461:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(449); }
                  break;
               case 449:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(83, 87); }
                  break;
               case 451:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 452:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 453;
                  break;
               case 455:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 456:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 457;
                  break;
               case 457:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 458:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 459:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 460:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 462:
                  if (curChar == 34)
                     { jjCheckNAddStates(499, 501); }
                  break;
               case 464:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(502, 506); }
                  break;
               case 465:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(507, 510); }
                  break;
               case 467:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 468:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 469:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(511, 518); }
                  break;
               case 470:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(470, 471); }
                  break;
               case 471:
               case 472:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(472, 473); }
                  break;
               case 473:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 474;
                  break;
               case 474:
               case 475:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(519, 523); }
                  break;
               case 476:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(476, 477); }
                  break;
               case 477:
               case 478:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(478, 479); }
                  break;
               case 480:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(524, 525); }
                  break;
               case 481:
               case 482:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(526, 530); }
                  break;
               case 483:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(483, 484); }
                  break;
               case 484:
               case 485:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(485, 486); }
                  break;
               case 486:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 487;
                  break;
               case 487:
               case 488:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(488, 479); }
                  break;
               case 489:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(489, 490); }
                  break;
               case 490:
               case 491:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(531, 535); }
                  break;
               case 492:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 493:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 492;
                  break;
               case 496:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(536, 540); }
                  break;
               case 497:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(541, 544); }
                  break;
               case 499:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(545, 552); }
                  break;
               case 500:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(500, 501); }
                  break;
               case 501:
               case 502:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(502, 503); }
                  break;
               case 503:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 504;
                  break;
               case 504:
               case 505:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(553, 557); }
                  break;
               case 506:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(506, 507); }
                  break;
               case 507:
               case 508:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(508, 509); }
                  break;
               case 510:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(558, 559); }
                  break;
               case 511:
               case 512:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(560, 564); }
                  break;
               case 513:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(513, 514); }
                  break;
               case 514:
               case 515:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(515, 516); }
                  break;
               case 516:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 517;
                  break;
               case 517:
               case 518:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(518, 509); }
                  break;
               case 519:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(519, 520); }
                  break;
               case 520:
               case 521:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(565, 569); }
                  break;
               case 529:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(570, 575); }
                  break;
               case 530:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(78, 82); }
                  break;
               case 532:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(78, 82); }
                  break;
               case 533:
               case 580:
                  if (curChar == 34 && kind > 124)
                     kind = 124;
                  break;
               case 534:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(576, 583); }
                  break;
               case 535:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(535, 536); }
                  break;
               case 536:
               case 537:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(537, 538); }
                  break;
               case 538:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 539;
                  break;
               case 539:
               case 540:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(584, 589); }
                  break;
               case 541:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(541, 542); }
                  break;
               case 542:
               case 543:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(543, 544); }
                  break;
               case 545:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(590, 591); }
                  break;
               case 546:
               case 547:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(592, 597); }
                  break;
               case 548:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(548, 549); }
                  break;
               case 549:
               case 550:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(550, 551); }
                  break;
               case 551:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 552;
                  break;
               case 552:
               case 553:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(553, 544); }
                  break;
               case 554:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(554, 555); }
                  break;
               case 555:
               case 556:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(598, 603); }
                  break;
               case 559:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(604, 610); }
                  break;
               case 560:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(611, 616); }
                  break;
               case 562:
               case 567:
               case 575:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(563); }
                  break;
               case 563:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(78, 82); }
                  break;
               case 565:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 566:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 567;
                  break;
               case 569:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 570:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 571:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 572:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 573;
                  break;
               case 573:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 574:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 576:
                  if (curChar == 34)
                     { jjCheckNAddStates(617, 619); }
                  break;
               case 578:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(620, 624); }
                  break;
               case 579:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(625, 628); }
                  break;
               case 581:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 582:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 583:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(629, 636); }
                  break;
               case 584:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(584, 585); }
                  break;
               case 585:
               case 586:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(586, 587); }
                  break;
               case 587:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 588:
               case 589:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(637, 641); }
                  break;
               case 590:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(590, 591); }
                  break;
               case 591:
               case 592:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(592, 593); }
                  break;
               case 594:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(642, 643); }
                  break;
               case 595:
               case 596:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(644, 648); }
                  break;
               case 597:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(597, 598); }
                  break;
               case 598:
               case 599:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(599, 600); }
                  break;
               case 600:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 601;
                  break;
               case 601:
               case 602:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(602, 593); }
                  break;
               case 603:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(603, 604); }
                  break;
               case 604:
               case 605:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(649, 653); }
                  break;
               case 606:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 576;
                  break;
               case 607:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 606;
                  break;
               case 610:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(654, 658); }
                  break;
               case 611:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(659, 662); }
                  break;
               case 613:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(663, 670); }
                  break;
               case 614:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(614, 615); }
                  break;
               case 615:
               case 616:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(616, 617); }
                  break;
               case 617:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 618;
                  break;
               case 618:
               case 619:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(671, 675); }
                  break;
               case 620:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(620, 621); }
                  break;
               case 621:
               case 622:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(622, 623); }
                  break;
               case 624:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(676, 677); }
                  break;
               case 625:
               case 626:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(678, 682); }
                  break;
               case 627:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(627, 628); }
                  break;
               case 628:
               case 629:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(629, 630); }
                  break;
               case 630:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 631;
                  break;
               case 631:
               case 632:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(632, 623); }
                  break;
               case 633:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(633, 634); }
                  break;
               case 634:
               case 635:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(683, 687); }
                  break;
               case 644:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  { jjCheckNAdd(644); }
                  break;
               case 645:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(30, 45); }
                  break;
               case 646:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(646, 647); }
                  break;
               case 647:
               case 648:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAdd(648); }
                  break;
               case 649:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(649, 650); }
                  break;
               case 650:
               case 651:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(651, 652); }
                  break;
               case 652:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 653;
                  break;
               case 653:
               case 654:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 102)
                     kind = 102;
                  { jjCheckNAdd(654); }
                  break;
               case 655:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(655, 656); }
                  break;
               case 656:
               case 657:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(657, 658); }
                  break;
               case 659:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(688, 689); }
                  break;
               case 660:
               case 661:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAdd(661); }
                  break;
               case 662:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(662, 663); }
                  break;
               case 663:
               case 664:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(664, 665); }
                  break;
               case 665:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 666;
                  break;
               case 666:
               case 667:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(667, 658); }
                  break;
               case 668:
                  if (curChar == 48)
                     { jjAddStates(49, 52); }
                  break;
               case 670:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(670, 671); }
                  break;
               case 671:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAdd(671); }
                  break;
               case 673:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAddTwoStates(673, 674); }
                  break;
               case 674:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAdd(674); }
                  break;
               case 676:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(690, 691); }
                  break;
               case 677:
               case 678:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAdd(678); }
                  break;
               case 680:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAddTwoStates(680, 681); }
                  break;
               case 681:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAdd(681); }
                  break;
               case 682:
                  if (curChar == 34)
                     { jjCheckNAddStates(56, 65); }
                  break;
               case 684:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(692, 697); }
                  break;
               case 685:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(698, 702); }
                  break;
               case 687:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(698, 702); }
                  break;
               case 688:
               case 784:
                  if (curChar == 34 && kind > 108)
                     kind = 108;
                  break;
               case 689:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(703, 710); }
                  break;
               case 690:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(690, 691); }
                  break;
               case 691:
               case 692:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(692, 693); }
                  break;
               case 693:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 694;
                  break;
               case 694:
               case 695:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(711, 716); }
                  break;
               case 696:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(696, 697); }
                  break;
               case 697:
               case 698:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(698, 699); }
                  break;
               case 700:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(717, 718); }
                  break;
               case 701:
               case 702:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(719, 724); }
                  break;
               case 703:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(703, 704); }
                  break;
               case 704:
               case 705:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(705, 706); }
                  break;
               case 706:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 707;
                  break;
               case 707:
               case 708:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(708, 699); }
                  break;
               case 709:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(709, 710); }
                  break;
               case 710:
               case 711:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(725, 730); }
                  break;
               case 714:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(731, 737); }
                  break;
               case 715:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(738, 743); }
                  break;
               case 717:
               case 722:
               case 730:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(718); }
                  break;
               case 718:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(698, 702); }
                  break;
               case 720:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 721;
                  break;
               case 721:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 722;
                  break;
               case 724:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 725;
                  break;
               case 725:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 726;
                  break;
               case 726:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 727;
                  break;
               case 727:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 728;
                  break;
               case 728:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 729;
                  break;
               case 729:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 730;
                  break;
               case 732:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(744, 749); }
                  break;
               case 733:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(750, 754); }
                  break;
               case 735:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(750, 754); }
                  break;
               case 736:
                  if (curChar == 34 && kind > 109)
                     kind = 109;
                  break;
               case 737:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(755, 762); }
                  break;
               case 738:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(738, 739); }
                  break;
               case 739:
               case 740:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(740, 741); }
                  break;
               case 741:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 742;
                  break;
               case 742:
               case 743:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(763, 768); }
                  break;
               case 744:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(744, 745); }
                  break;
               case 745:
               case 746:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(746, 747); }
                  break;
               case 748:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(769, 770); }
                  break;
               case 749:
               case 750:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(771, 776); }
                  break;
               case 751:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(751, 752); }
                  break;
               case 752:
               case 753:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(753, 754); }
                  break;
               case 754:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 755;
                  break;
               case 755:
               case 756:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(756, 747); }
                  break;
               case 757:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(757, 758); }
                  break;
               case 758:
               case 759:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(777, 782); }
                  break;
               case 762:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(783, 789); }
                  break;
               case 763:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(790, 795); }
                  break;
               case 765:
               case 770:
               case 778:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(766); }
                  break;
               case 766:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(750, 754); }
                  break;
               case 768:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 769;
                  break;
               case 769:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 770;
                  break;
               case 772:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 773;
                  break;
               case 773:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 774;
                  break;
               case 774:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 775;
                  break;
               case 775:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 776;
                  break;
               case 776:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 777;
                  break;
               case 777:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 778;
                  break;
               case 779:
                  if (curChar == 34)
                     { jjAddStates(46, 48); }
                  break;
               case 780:
                  if (curChar == 34)
                     { jjCheckNAddStates(796, 798); }
                  break;
               case 782:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(799, 803); }
                  break;
               case 783:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(804, 807); }
                  break;
               case 785:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 784;
                  break;
               case 786:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 785;
                  break;
               case 787:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(808, 815); }
                  break;
               case 788:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(788, 789); }
                  break;
               case 789:
               case 790:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(790, 791); }
                  break;
               case 791:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 792;
                  break;
               case 792:
               case 793:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(816, 820); }
                  break;
               case 794:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(794, 795); }
                  break;
               case 795:
               case 796:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(796, 797); }
                  break;
               case 798:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(821, 822); }
                  break;
               case 799:
               case 800:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(823, 827); }
                  break;
               case 801:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(801, 802); }
                  break;
               case 802:
               case 803:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(803, 804); }
                  break;
               case 804:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 805;
                  break;
               case 805:
               case 806:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(806, 797); }
                  break;
               case 807:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(807, 808); }
                  break;
               case 808:
               case 809:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(828, 832); }
                  break;
               case 810:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 780;
                  break;
               case 811:
                  if (curChar == 34)
                     { jjCheckNAddStates(833, 835); }
                  break;
               case 813:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(836, 840); }
                  break;
               case 814:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(841, 844); }
                  break;
               case 815:
                  if (curChar == 34 && kind > 115)
                     kind = 115;
                  break;
               case 816:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 815;
                  break;
               case 817:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 816;
                  break;
               case 818:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(845, 852); }
                  break;
               case 819:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(819, 820); }
                  break;
               case 820:
               case 821:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(821, 822); }
                  break;
               case 822:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 823;
                  break;
               case 823:
               case 824:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(853, 857); }
                  break;
               case 825:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(825, 826); }
                  break;
               case 826:
               case 827:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(827, 828); }
                  break;
               case 829:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(858, 859); }
                  break;
               case 830:
               case 831:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(860, 864); }
                  break;
               case 832:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(832, 833); }
                  break;
               case 833:
               case 834:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(834, 835); }
                  break;
               case 835:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 836;
                  break;
               case 836:
               case 837:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(837, 828); }
                  break;
               case 838:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(838, 839); }
                  break;
               case 839:
               case 840:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(865, 869); }
                  break;
               case 841:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 811;
                  break;
               case 842:
                  if (curChar == 34)
                     { jjCheckNAddStates(870, 872); }
                  break;
               case 844:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(873, 877); }
                  break;
               case 845:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(878, 881); }
                  break;
               case 846:
                  if (curChar == 34 && kind > 117)
                     kind = 117;
                  break;
               case 847:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 846;
                  break;
               case 848:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 847;
                  break;
               case 849:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(882, 889); }
                  break;
               case 850:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(850, 851); }
                  break;
               case 851:
               case 852:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(852, 853); }
                  break;
               case 853:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 854;
                  break;
               case 854:
               case 855:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(890, 894); }
                  break;
               case 856:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(856, 857); }
                  break;
               case 857:
               case 858:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(858, 859); }
                  break;
               case 860:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(895, 896); }
                  break;
               case 861:
               case 862:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(897, 901); }
                  break;
               case 863:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(863, 864); }
                  break;
               case 864:
               case 865:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(865, 866); }
                  break;
               case 866:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 867;
                  break;
               case 867:
               case 868:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(868, 859); }
                  break;
               case 869:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(869, 870); }
                  break;
               case 870:
               case 871:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(902, 906); }
                  break;
               case 872:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 842;
                  break;
               case 875:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(907, 911); }
                  break;
               case 876:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(912, 915); }
                  break;
               case 878:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(916, 923); }
                  break;
               case 879:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(879, 880); }
                  break;
               case 880:
               case 881:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(881, 882); }
                  break;
               case 882:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 883;
                  break;
               case 883:
               case 884:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(924, 928); }
                  break;
               case 885:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(885, 886); }
                  break;
               case 886:
               case 887:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(887, 888); }
                  break;
               case 889:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(929, 930); }
                  break;
               case 890:
               case 891:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(931, 935); }
                  break;
               case 892:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(892, 893); }
                  break;
               case 893:
               case 894:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(894, 895); }
                  break;
               case 895:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 896;
                  break;
               case 896:
               case 897:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(897, 888); }
                  break;
               case 898:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(898, 899); }
                  break;
               case 899:
               case 900:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(936, 940); }
                  break;
               case 902:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(941, 945); }
                  break;
               case 903:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(946, 949); }
                  break;
               case 905:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(950, 957); }
                  break;
               case 906:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(906, 907); }
                  break;
               case 907:
               case 908:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(908, 909); }
                  break;
               case 909:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 910;
                  break;
               case 910:
               case 911:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(958, 962); }
                  break;
               case 912:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(912, 913); }
                  break;
               case 913:
               case 914:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(914, 915); }
                  break;
               case 916:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(963, 964); }
                  break;
               case 917:
               case 918:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(965, 969); }
                  break;
               case 919:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(919, 920); }
                  break;
               case 920:
               case 921:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(921, 922); }
                  break;
               case 922:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 923;
                  break;
               case 923:
               case 924:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(924, 915); }
                  break;
               case 925:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(925, 926); }
                  break;
               case 926:
               case 927:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(970, 974); }
                  break;
               case 929:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(975, 979); }
                  break;
               case 930:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(980, 983); }
                  break;
               case 932:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(984, 991); }
                  break;
               case 933:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(933, 934); }
                  break;
               case 934:
               case 935:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(935, 936); }
                  break;
               case 936:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 937;
                  break;
               case 937:
               case 938:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(992, 996); }
                  break;
               case 939:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(939, 940); }
                  break;
               case 940:
               case 941:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(941, 942); }
                  break;
               case 943:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(997, 998); }
                  break;
               case 944:
               case 945:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(999, 1003); }
                  break;
               case 946:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(946, 947); }
                  break;
               case 947:
               case 948:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(948, 949); }
                  break;
               case 949:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 950;
                  break;
               case 950:
               case 951:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(951, 942); }
                  break;
               case 952:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(952, 953); }
                  break;
               case 953:
               case 954:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1004, 1008); }
                  break;
               case 957:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 111)
                     kind = 111;
                  { jjCheckNAddTwoStates(957, 958); }
                  break;
               case 958:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 111)
                     kind = 111;
                  { jjCheckNAdd(958); }
                  break;
               case 960:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 961;
                  break;
               case 961:
                  if ((0xff000000000000L & l) != 0L && kind > 112)
                     kind = 112;
                  break;
               case 963:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 964;
                  break;
               case 964:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 965;
                  break;
               case 965:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 966;
                  break;
               case 966:
                  if ((0xff000000000000L & l) != 0L && kind > 113)
                     kind = 113;
                  break;
               case 968:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 969;
                  break;
               case 969:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 970;
                  break;
               case 970:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 971;
                  break;
               case 971:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 972;
                  break;
               case 972:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 973;
                  break;
               case 973:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 974;
                  break;
               case 974:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 975;
                  break;
               case 975:
                  if ((0xff000000000000L & l) != 0L && kind > 114)
                     kind = 114;
                  break;
               case 980:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1009, 1014); }
                  break;
               case 981:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(15, 19); }
                  break;
               case 983:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(15, 19); }
                  break;
               case 984:
               case 1031:
                  if (curChar == 34 && kind > 123)
                     kind = 123;
                  break;
               case 985:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(1015, 1022); }
                  break;
               case 986:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(986, 987); }
                  break;
               case 987:
               case 988:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(988, 989); }
                  break;
               case 989:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 990;
                  break;
               case 990:
               case 991:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1023, 1028); }
                  break;
               case 992:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(992, 993); }
                  break;
               case 993:
               case 994:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(994, 995); }
                  break;
               case 996:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(1029, 1030); }
                  break;
               case 997:
               case 998:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1031, 1036); }
                  break;
               case 999:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(999, 1000); }
                  break;
               case 1000:
               case 1001:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1001, 1002); }
                  break;
               case 1002:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1003;
                  break;
               case 1003:
               case 1004:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1004, 995); }
                  break;
               case 1005:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1005, 1006); }
                  break;
               case 1006:
               case 1007:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1037, 1042); }
                  break;
               case 1010:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(1043, 1049); }
                  break;
               case 1011:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(1050, 1055); }
                  break;
               case 1013:
               case 1018:
               case 1026:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(1014); }
                  break;
               case 1014:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(15, 19); }
                  break;
               case 1016:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1017;
                  break;
               case 1017:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1018;
                  break;
               case 1020:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1021;
                  break;
               case 1021:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1022;
                  break;
               case 1022:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1023;
                  break;
               case 1023:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1024;
                  break;
               case 1024:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1025;
                  break;
               case 1025:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1026;
                  break;
               case 1027:
                  if (curChar == 34)
                     { jjCheckNAddStates(1056, 1058); }
                  break;
               case 1029:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1059, 1063); }
                  break;
               case 1030:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(1064, 1067); }
                  break;
               case 1032:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1031;
                  break;
               case 1033:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1032;
                  break;
               case 1034:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(1068, 1075); }
                  break;
               case 1035:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1035, 1036); }
                  break;
               case 1036:
               case 1037:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1037, 1038); }
                  break;
               case 1038:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1039;
                  break;
               case 1039:
               case 1040:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1076, 1080); }
                  break;
               case 1041:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1041, 1042); }
                  break;
               case 1042:
               case 1043:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1043, 1044); }
                  break;
               case 1045:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(1081, 1082); }
                  break;
               case 1046:
               case 1047:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1083, 1087); }
                  break;
               case 1048:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1048, 1049); }
                  break;
               case 1049:
               case 1050:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1050, 1051); }
                  break;
               case 1051:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1052;
                  break;
               case 1052:
               case 1053:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1053, 1044); }
                  break;
               case 1054:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1054, 1055); }
                  break;
               case 1055:
               case 1056:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1088, 1092); }
                  break;
               case 1057:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1027;
                  break;
               case 1058:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1057;
                  break;
               case 1061:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1093, 1097); }
                  break;
               case 1062:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(1098, 1101); }
                  break;
               case 1064:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(1102, 1109); }
                  break;
               case 1065:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1065, 1066); }
                  break;
               case 1066:
               case 1067:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1067, 1068); }
                  break;
               case 1068:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1069;
                  break;
               case 1069:
               case 1070:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1110, 1114); }
                  break;
               case 1071:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1071, 1072); }
                  break;
               case 1072:
               case 1073:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1073, 1074); }
                  break;
               case 1075:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(1115, 1116); }
                  break;
               case 1076:
               case 1077:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1117, 1121); }
                  break;
               case 1078:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1078, 1079); }
                  break;
               case 1079:
               case 1080:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1080, 1081); }
                  break;
               case 1081:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 1082;
                  break;
               case 1082:
               case 1083:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1083, 1074); }
                  break;
               case 1084:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1084, 1085); }
                  break;
               case 1085:
               case 1086:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1122, 1126); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 978:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddStates(1127, 1129); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 64:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 58;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 1089:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 1098;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 1091;
                  break;
               case 179:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 178;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 407:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 406;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 1088:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 1093;
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 1087;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 1089;
                  break;
               case 636:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 526;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 412:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 121)
                  {
                     if (kind > 122)
                        kind = 122;
                     { jjAddStates(1130, 1132); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 296:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddStates(1133, 1135); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 523:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 522;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 177:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 67;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 641:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 640;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 295:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 101)
                  {
                     if (kind > 121)
                        kind = 121;
                     { jjAddStates(1136, 1138); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 405:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 295;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 1091:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 1097;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 1090;
                  break;
               case 410:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 409;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 67:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 108)
                     { jjAddStates(1139, 1141); }
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 293:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 292;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 68:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddStates(1142, 1144); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 639:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 638;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAddStates(1145, 1149); }
                  }
                  else if (curChar == 92)
                     { jjAddStates(1150, 1153); }
                  else if (curChar == 96)
                     { jjCheckNAddStates(1154, 1162); }
                  if (curChar == 101)
                     { jjAddStates(1163, 1165); }
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 641;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 524;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 410;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 293;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 179;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 65;
                  else if (curChar == 92)
                     { jjAddStates(1166, 1167); }
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 65:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 64;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 408:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 407;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 526:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 117)
                  {
                     if (kind > 124)
                        kind = 124;
                     { jjAddStates(1168, 1170); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 1087:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 977;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 291:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 181;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 38:
                  if ((0x14402010000020L & l) != 0L)
                  {
                     if (kind > 110)
                        kind = 110;
                  }
                  else if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 968;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 963;
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 960;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 957;
                  if (curChar == 92)
                     { jjAddStates(1171, 1174); }
                  break;
               case 58:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 63;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 637:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 636;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 1101:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 63:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 62;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 182:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddStates(1175, 1177); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 178:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 177;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 406:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 405;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 524:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 523;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 977:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 116)
                  {
                     if (kind > 123)
                        kind = 123;
                     { jjAddStates(1178, 1180); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 522:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 412;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 640:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 639;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 1102:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 527:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddStates(1181, 1183); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 181:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 107)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjAddStates(1184, 1186); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 409:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 408;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 292:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 291;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 638:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 637;
                  else if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 1103:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 413:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddStates(1187, 1189); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(0, 3); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 99)
                        kind = 99;
                     { jjCheckNAdd(644); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 100)
                        kind = 100;
                     { jjCheckNAddStates(4, 6); }
                  }
                  break;
               case 1:
                  { jjAddStates(53, 55); }
                  break;
               case 6:
                  { jjAddStates(75, 77); }
                  break;
               case 11:
                  if (curChar != 95)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(4, 6); }
                  break;
               case 12:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(0, 3); }
                  break;
               case 13:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(0, 3); }
                  break;
               case 17:
                  if (curChar == 95)
                     { jjAddStates(1190, 1191); }
                  break;
               case 20:
                  if (curChar != 95)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(88, 91); }
                  break;
               case 23:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(23, 24); }
                  break;
               case 24:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar != 95)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(94, 97); }
                  break;
               case 30:
                  if (curChar == 95)
                     { jjAddStates(1192, 1193); }
                  break;
               case 33:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(33, 24); }
                  break;
               case 36:
                  if (curChar != 95)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAddStates(71, 74); }
                  break;
               case 37:
                  if (curChar == 92)
                     { jjAddStates(1166, 1167); }
                  break;
               case 39:
                  if (curChar == 92)
                     { jjAddStates(1171, 1174); }
                  break;
               case 40:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 42:
                  if (curChar != 95)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 43:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 50:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 59:
                  if (curChar == 121 && kind > 118)
                     kind = 118;
                  break;
               case 60:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 66:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 69:
               case 70:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(98, 103); }
                  break;
               case 71:
                  if (curChar == 95)
                     { jjCheckNAddStates(25, 29); }
                  break;
               case 72:
                  if (curChar == 92)
                     { jjAddStates(1194, 1195); }
                  break;
               case 73:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(25, 29); }
                  break;
               case 78:
                  if (curChar == 95)
                     { jjAddStates(1196, 1197); }
                  break;
               case 81:
                  if (curChar == 95)
                     { jjCheckNAddStates(112, 117); }
                  break;
               case 84:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(84, 85); }
                  break;
               case 85:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if (curChar == 95)
                     { jjCheckNAddStates(120, 125); }
                  break;
               case 91:
                  if (curChar == 95)
                     { jjAddStates(1198, 1199); }
                  break;
               case 94:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(94, 85); }
                  break;
               case 97:
                  if (curChar == 95)
                     { jjCheckNAddStates(126, 131); }
                  break;
               case 98:
                  if (curChar == 92)
                     { jjAddStates(1200, 1203); }
                  break;
               case 99:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 101:
                  if (curChar == 95)
                     { jjCheckNAddStates(139, 144); }
                  break;
               case 102:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 109:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 118:
               case 119:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(148, 152); }
                  break;
               case 120:
                  if (curChar == 95)
                     { jjCheckNAddStates(153, 156); }
                  break;
               case 127:
                  if (curChar == 95)
                     { jjAddStates(1204, 1205); }
                  break;
               case 130:
                  if (curChar == 95)
                     { jjCheckNAddStates(165, 169); }
                  break;
               case 133:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(133, 134); }
                  break;
               case 134:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if (curChar == 95)
                     { jjCheckNAddStates(172, 176); }
                  break;
               case 140:
                  if (curChar == 95)
                     { jjAddStates(1206, 1207); }
                  break;
               case 143:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(143, 134); }
                  break;
               case 146:
                  if (curChar == 95)
                     { jjCheckNAddStates(177, 181); }
                  break;
               case 149:
                  if (curChar == 96)
                     { jjCheckNAddStates(1142, 1144); }
                  break;
               case 150:
               case 151:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(182, 186); }
                  break;
               case 152:
                  if (curChar == 95)
                     { jjCheckNAddStates(187, 190); }
                  break;
               case 153:
                  if (curChar == 96 && kind > 119)
                     kind = 119;
                  break;
               case 157:
                  if (curChar == 95)
                     { jjAddStates(1208, 1209); }
                  break;
               case 160:
                  if (curChar == 95)
                     { jjCheckNAddStates(199, 203); }
                  break;
               case 163:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(163, 164); }
                  break;
               case 164:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if (curChar == 95)
                     { jjCheckNAddStates(206, 210); }
                  break;
               case 170:
                  if (curChar == 95)
                     { jjAddStates(1210, 1211); }
                  break;
               case 173:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(173, 164); }
                  break;
               case 176:
                  if (curChar == 95)
                     { jjCheckNAddStates(211, 215); }
                  break;
               case 180:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 183:
               case 184:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(216, 221); }
                  break;
               case 185:
                  if (curChar == 95)
                     { jjCheckNAddStates(66, 70); }
                  break;
               case 186:
                  if (curChar == 92)
                     { jjAddStates(1212, 1213); }
                  break;
               case 187:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(66, 70); }
                  break;
               case 192:
                  if (curChar == 95)
                     { jjAddStates(1214, 1215); }
                  break;
               case 195:
                  if (curChar == 95)
                     { jjCheckNAddStates(230, 235); }
                  break;
               case 198:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(198, 199); }
                  break;
               case 199:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 202:
                  if (curChar == 95)
                     { jjCheckNAddStates(238, 243); }
                  break;
               case 205:
                  if (curChar == 95)
                     { jjAddStates(1216, 1217); }
                  break;
               case 208:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(208, 199); }
                  break;
               case 211:
                  if (curChar == 95)
                     { jjCheckNAddStates(244, 249); }
                  break;
               case 212:
                  if (curChar == 92)
                     { jjAddStates(1218, 1221); }
                  break;
               case 213:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 215:
                  if (curChar == 95)
                     { jjCheckNAddStates(257, 262); }
                  break;
               case 216:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 223:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 232:
               case 233:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(266, 270); }
                  break;
               case 234:
                  if (curChar == 95)
                     { jjCheckNAddStates(271, 274); }
                  break;
               case 241:
                  if (curChar == 95)
                     { jjAddStates(1222, 1223); }
                  break;
               case 244:
                  if (curChar == 95)
                     { jjCheckNAddStates(283, 287); }
                  break;
               case 247:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(247, 248); }
                  break;
               case 248:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if (curChar == 95)
                     { jjCheckNAddStates(290, 294); }
                  break;
               case 254:
                  if (curChar == 95)
                     { jjAddStates(1224, 1225); }
                  break;
               case 257:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(257, 248); }
                  break;
               case 260:
                  if (curChar == 95)
                     { jjCheckNAddStates(295, 299); }
                  break;
               case 263:
                  if (curChar == 96)
                     { jjCheckNAddStates(1175, 1177); }
                  break;
               case 264:
               case 265:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(300, 304); }
                  break;
               case 266:
                  if (curChar == 95)
                     { jjCheckNAddStates(305, 308); }
                  break;
               case 267:
                  if (curChar == 96 && kind > 120)
                     kind = 120;
                  break;
               case 271:
                  if (curChar == 95)
                     { jjAddStates(1226, 1227); }
                  break;
               case 274:
                  if (curChar == 95)
                     { jjCheckNAddStates(317, 321); }
                  break;
               case 277:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(277, 278); }
                  break;
               case 278:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 281:
                  if (curChar == 95)
                     { jjCheckNAddStates(324, 328); }
                  break;
               case 284:
                  if (curChar == 95)
                     { jjAddStates(1228, 1229); }
                  break;
               case 287:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(287, 278); }
                  break;
               case 290:
                  if (curChar == 95)
                     { jjCheckNAddStates(329, 333); }
                  break;
               case 294:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 297:
               case 298:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(334, 339); }
                  break;
               case 299:
                  if (curChar == 95)
                     { jjCheckNAddStates(20, 24); }
                  break;
               case 300:
                  if (curChar == 92)
                     { jjAddStates(1230, 1231); }
                  break;
               case 301:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(20, 24); }
                  break;
               case 306:
                  if (curChar == 95)
                     { jjAddStates(1232, 1233); }
                  break;
               case 309:
                  if (curChar == 95)
                     { jjCheckNAddStates(348, 353); }
                  break;
               case 312:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(312, 313); }
                  break;
               case 313:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 316:
                  if (curChar == 95)
                     { jjCheckNAddStates(356, 361); }
                  break;
               case 319:
                  if (curChar == 95)
                     { jjAddStates(1234, 1235); }
                  break;
               case 322:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(322, 313); }
                  break;
               case 325:
                  if (curChar == 95)
                     { jjCheckNAddStates(362, 367); }
                  break;
               case 326:
                  if (curChar == 92)
                     { jjAddStates(1236, 1239); }
                  break;
               case 327:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 329:
                  if (curChar == 95)
                     { jjCheckNAddStates(375, 380); }
                  break;
               case 330:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 333:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 337:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 346:
               case 347:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(384, 388); }
                  break;
               case 348:
                  if (curChar == 95)
                     { jjCheckNAddStates(389, 392); }
                  break;
               case 355:
                  if (curChar == 95)
                     { jjAddStates(1240, 1241); }
                  break;
               case 358:
                  if (curChar == 95)
                     { jjCheckNAddStates(401, 405); }
                  break;
               case 361:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 362:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 365:
                  if (curChar == 95)
                     { jjCheckNAddStates(408, 412); }
                  break;
               case 368:
                  if (curChar == 95)
                     { jjAddStates(1242, 1243); }
                  break;
               case 371:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(371, 362); }
                  break;
               case 374:
                  if (curChar == 95)
                     { jjCheckNAddStates(413, 417); }
                  break;
               case 377:
                  if (curChar == 96)
                     { jjCheckNAddStates(1133, 1135); }
                  break;
               case 378:
               case 379:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(418, 422); }
                  break;
               case 380:
                  if (curChar == 95)
                     { jjCheckNAddStates(423, 426); }
                  break;
               case 381:
                  if (curChar == 96 && kind > 121)
                     kind = 121;
                  break;
               case 385:
                  if (curChar == 95)
                     { jjAddStates(1244, 1245); }
                  break;
               case 388:
                  if (curChar == 95)
                     { jjCheckNAddStates(435, 439); }
                  break;
               case 391:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(391, 392); }
                  break;
               case 392:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if (curChar == 95)
                     { jjCheckNAddStates(442, 446); }
                  break;
               case 398:
                  if (curChar == 95)
                     { jjAddStates(1246, 1247); }
                  break;
               case 401:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(401, 392); }
                  break;
               case 404:
                  if (curChar == 95)
                     { jjCheckNAddStates(447, 451); }
                  break;
               case 411:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 414:
               case 415:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(452, 457); }
                  break;
               case 416:
                  if (curChar == 95)
                     { jjCheckNAddStates(83, 87); }
                  break;
               case 417:
                  if (curChar == 92)
                     { jjAddStates(1248, 1249); }
                  break;
               case 418:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(83, 87); }
                  break;
               case 423:
                  if (curChar == 95)
                     { jjAddStates(1250, 1251); }
                  break;
               case 426:
                  if (curChar == 95)
                     { jjCheckNAddStates(466, 471); }
                  break;
               case 429:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(429, 430); }
                  break;
               case 430:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 431;
                  break;
               case 433:
                  if (curChar == 95)
                     { jjCheckNAddStates(474, 479); }
                  break;
               case 436:
                  if (curChar == 95)
                     { jjAddStates(1252, 1253); }
                  break;
               case 439:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(439, 430); }
                  break;
               case 442:
                  if (curChar == 95)
                     { jjCheckNAddStates(480, 485); }
                  break;
               case 443:
                  if (curChar == 92)
                     { jjAddStates(1254, 1257); }
                  break;
               case 444:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 446:
                  if (curChar == 95)
                     { jjCheckNAddStates(493, 498); }
                  break;
               case 447:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 450:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 454:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 463:
               case 464:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(502, 506); }
                  break;
               case 465:
                  if (curChar == 95)
                     { jjCheckNAddStates(507, 510); }
                  break;
               case 472:
                  if (curChar == 95)
                     { jjAddStates(1258, 1259); }
                  break;
               case 475:
                  if (curChar == 95)
                     { jjCheckNAddStates(519, 523); }
                  break;
               case 478:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(478, 479); }
                  break;
               case 479:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 482:
                  if (curChar == 95)
                     { jjCheckNAddStates(526, 530); }
                  break;
               case 485:
                  if (curChar == 95)
                     { jjAddStates(1260, 1261); }
                  break;
               case 488:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(488, 479); }
                  break;
               case 491:
                  if (curChar == 95)
                     { jjCheckNAddStates(531, 535); }
                  break;
               case 494:
                  if (curChar == 96)
                     { jjCheckNAddStates(1187, 1189); }
                  break;
               case 495:
               case 496:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(536, 540); }
                  break;
               case 497:
                  if (curChar == 95)
                     { jjCheckNAddStates(541, 544); }
                  break;
               case 498:
                  if (curChar == 96 && kind > 122)
                     kind = 122;
                  break;
               case 502:
                  if (curChar == 95)
                     { jjAddStates(1262, 1263); }
                  break;
               case 505:
                  if (curChar == 95)
                     { jjCheckNAddStates(553, 557); }
                  break;
               case 508:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(508, 509); }
                  break;
               case 509:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 512:
                  if (curChar == 95)
                     { jjCheckNAddStates(560, 564); }
                  break;
               case 515:
                  if (curChar == 95)
                     { jjAddStates(1264, 1265); }
                  break;
               case 518:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(518, 509); }
                  break;
               case 521:
                  if (curChar == 95)
                     { jjCheckNAddStates(565, 569); }
                  break;
               case 525:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 524;
                  break;
               case 528:
               case 529:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(570, 575); }
                  break;
               case 530:
                  if (curChar == 95)
                     { jjCheckNAddStates(78, 82); }
                  break;
               case 531:
                  if (curChar == 92)
                     { jjAddStates(1266, 1267); }
                  break;
               case 532:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(78, 82); }
                  break;
               case 537:
                  if (curChar == 95)
                     { jjAddStates(1268, 1269); }
                  break;
               case 540:
                  if (curChar == 95)
                     { jjCheckNAddStates(584, 589); }
                  break;
               case 543:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(543, 544); }
                  break;
               case 544:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 545;
                  break;
               case 547:
                  if (curChar == 95)
                     { jjCheckNAddStates(592, 597); }
                  break;
               case 550:
                  if (curChar == 95)
                     { jjAddStates(1270, 1271); }
                  break;
               case 553:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(553, 544); }
                  break;
               case 556:
                  if (curChar == 95)
                     { jjCheckNAddStates(598, 603); }
                  break;
               case 557:
                  if (curChar == 92)
                     { jjAddStates(1272, 1275); }
                  break;
               case 558:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 559;
                  break;
               case 560:
                  if (curChar == 95)
                     { jjCheckNAddStates(611, 616); }
                  break;
               case 561:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 562;
                  break;
               case 564:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 568:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 569;
                  break;
               case 577:
               case 578:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(620, 624); }
                  break;
               case 579:
                  if (curChar == 95)
                     { jjCheckNAddStates(625, 628); }
                  break;
               case 586:
                  if (curChar == 95)
                     { jjAddStates(1276, 1277); }
                  break;
               case 589:
                  if (curChar == 95)
                     { jjCheckNAddStates(637, 641); }
                  break;
               case 592:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(592, 593); }
                  break;
               case 593:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 596:
                  if (curChar == 95)
                     { jjCheckNAddStates(644, 648); }
                  break;
               case 599:
                  if (curChar == 95)
                     { jjAddStates(1278, 1279); }
                  break;
               case 602:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(602, 593); }
                  break;
               case 605:
                  if (curChar == 95)
                     { jjCheckNAddStates(649, 653); }
                  break;
               case 608:
                  if (curChar == 96)
                     { jjCheckNAddStates(1181, 1183); }
                  break;
               case 609:
               case 610:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(654, 658); }
                  break;
               case 611:
                  if (curChar == 95)
                     { jjCheckNAddStates(659, 662); }
                  break;
               case 612:
                  if (curChar == 96 && kind > 124)
                     kind = 124;
                  break;
               case 616:
                  if (curChar == 95)
                     { jjAddStates(1280, 1281); }
                  break;
               case 619:
                  if (curChar == 95)
                     { jjCheckNAddStates(671, 675); }
                  break;
               case 622:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(622, 623); }
                  break;
               case 623:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 624;
                  break;
               case 626:
                  if (curChar == 95)
                     { jjCheckNAddStates(678, 682); }
                  break;
               case 629:
                  if (curChar == 95)
                     { jjAddStates(1282, 1283); }
                  break;
               case 632:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(632, 623); }
                  break;
               case 635:
                  if (curChar == 95)
                     { jjCheckNAddStates(683, 687); }
                  break;
               case 642:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 641;
                  break;
               case 643:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  { jjCheckNAddStates(1145, 1149); }
                  break;
               case 644:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  { jjCheckNAdd(644); }
                  break;
               case 648:
                  if (curChar != 95)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 648;
                  break;
               case 651:
                  if (curChar == 95)
                     { jjAddStates(1284, 1285); }
                  break;
               case 654:
                  if (curChar != 95)
                     break;
                  if (kind > 102)
                     kind = 102;
                  jjstateSet[jjnewStateCnt++] = 654;
                  break;
               case 657:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(657, 658); }
                  break;
               case 658:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 659;
                  break;
               case 661:
                  if (curChar != 95)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjstateSet[jjnewStateCnt++] = 661;
                  break;
               case 664:
                  if (curChar == 95)
                     { jjAddStates(1286, 1287); }
                  break;
               case 667:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(667, 658); }
                  break;
               case 669:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 670;
                  break;
               case 671:
                  if (curChar != 95)
                     break;
                  if (kind > 104)
                     kind = 104;
                  jjstateSet[jjnewStateCnt++] = 671;
                  break;
               case 672:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 673;
                  break;
               case 674:
                  if (curChar != 95)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjstateSet[jjnewStateCnt++] = 674;
                  break;
               case 675:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 676;
                  break;
               case 678:
                  if (curChar != 95)
                     break;
                  if (kind > 106)
                     kind = 106;
                  jjstateSet[jjnewStateCnt++] = 678;
                  break;
               case 679:
                  if (curChar == 120)
                     { jjCheckNAdd(680); }
                  break;
               case 680:
                  if ((0x7eL & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAddTwoStates(680, 681); }
                  break;
               case 681:
                  if ((0x8000007eL & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAdd(681); }
                  break;
               case 683:
               case 684:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(692, 697); }
                  break;
               case 685:
                  if (curChar == 95)
                     { jjCheckNAddStates(698, 702); }
                  break;
               case 686:
                  if (curChar == 92)
                     { jjAddStates(1288, 1289); }
                  break;
               case 687:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(698, 702); }
                  break;
               case 692:
                  if (curChar == 95)
                     { jjAddStates(1290, 1291); }
                  break;
               case 695:
                  if (curChar == 95)
                     { jjCheckNAddStates(711, 716); }
                  break;
               case 698:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(698, 699); }
                  break;
               case 699:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 700;
                  break;
               case 702:
                  if (curChar == 95)
                     { jjCheckNAddStates(719, 724); }
                  break;
               case 705:
                  if (curChar == 95)
                     { jjAddStates(1292, 1293); }
                  break;
               case 708:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(708, 699); }
                  break;
               case 711:
                  if (curChar == 95)
                     { jjCheckNAddStates(725, 730); }
                  break;
               case 712:
                  if (curChar == 92)
                     { jjAddStates(1294, 1297); }
                  break;
               case 713:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 714;
                  break;
               case 715:
                  if (curChar == 95)
                     { jjCheckNAddStates(738, 743); }
                  break;
               case 716:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 717;
                  break;
               case 719:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 720;
                  break;
               case 723:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 724;
                  break;
               case 731:
               case 732:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(744, 749); }
                  break;
               case 733:
                  if (curChar == 95)
                     { jjCheckNAddStates(750, 754); }
                  break;
               case 734:
                  if (curChar == 92)
                     { jjAddStates(1298, 1299); }
                  break;
               case 735:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(750, 754); }
                  break;
               case 740:
                  if (curChar == 95)
                     { jjAddStates(1300, 1301); }
                  break;
               case 743:
                  if (curChar == 95)
                     { jjCheckNAddStates(763, 768); }
                  break;
               case 746:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(746, 747); }
                  break;
               case 747:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 748;
                  break;
               case 750:
                  if (curChar == 95)
                     { jjCheckNAddStates(771, 776); }
                  break;
               case 753:
                  if (curChar == 95)
                     { jjAddStates(1302, 1303); }
                  break;
               case 756:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(756, 747); }
                  break;
               case 759:
                  if (curChar == 95)
                     { jjCheckNAddStates(777, 782); }
                  break;
               case 760:
                  if (curChar == 92)
                     { jjAddStates(1304, 1307); }
                  break;
               case 761:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 762;
                  break;
               case 763:
                  if (curChar == 95)
                     { jjCheckNAddStates(790, 795); }
                  break;
               case 764:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 765;
                  break;
               case 767:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 768;
                  break;
               case 771:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 772;
                  break;
               case 781:
               case 782:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(799, 803); }
                  break;
               case 783:
                  if (curChar == 95)
                     { jjCheckNAddStates(804, 807); }
                  break;
               case 790:
                  if (curChar == 95)
                     { jjAddStates(1308, 1309); }
                  break;
               case 793:
                  if (curChar == 95)
                     { jjCheckNAddStates(816, 820); }
                  break;
               case 796:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(796, 797); }
                  break;
               case 797:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 798;
                  break;
               case 800:
                  if (curChar == 95)
                     { jjCheckNAddStates(823, 827); }
                  break;
               case 803:
                  if (curChar == 95)
                     { jjAddStates(1310, 1311); }
                  break;
               case 806:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(806, 797); }
                  break;
               case 809:
                  if (curChar == 95)
                     { jjCheckNAddStates(828, 832); }
                  break;
               case 812:
               case 813:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(836, 840); }
                  break;
               case 814:
                  if (curChar == 95)
                     { jjCheckNAddStates(841, 844); }
                  break;
               case 821:
                  if (curChar == 95)
                     { jjAddStates(1312, 1313); }
                  break;
               case 824:
                  if (curChar == 95)
                     { jjCheckNAddStates(853, 857); }
                  break;
               case 827:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(827, 828); }
                  break;
               case 828:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 829;
                  break;
               case 831:
                  if (curChar == 95)
                     { jjCheckNAddStates(860, 864); }
                  break;
               case 834:
                  if (curChar == 95)
                     { jjAddStates(1314, 1315); }
                  break;
               case 837:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(837, 828); }
                  break;
               case 840:
                  if (curChar == 95)
                     { jjCheckNAddStates(865, 869); }
                  break;
               case 843:
               case 844:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(873, 877); }
                  break;
               case 845:
                  if (curChar == 95)
                     { jjCheckNAddStates(878, 881); }
                  break;
               case 852:
                  if (curChar == 95)
                     { jjAddStates(1316, 1317); }
                  break;
               case 855:
                  if (curChar == 95)
                     { jjCheckNAddStates(890, 894); }
                  break;
               case 858:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(858, 859); }
                  break;
               case 859:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 860;
                  break;
               case 862:
                  if (curChar == 95)
                     { jjCheckNAddStates(897, 901); }
                  break;
               case 865:
                  if (curChar == 95)
                     { jjAddStates(1318, 1319); }
                  break;
               case 868:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(868, 859); }
                  break;
               case 871:
                  if (curChar == 95)
                     { jjCheckNAddStates(902, 906); }
                  break;
               case 873:
                  if (curChar == 96)
                     { jjCheckNAddStates(1154, 1162); }
                  break;
               case 874:
               case 875:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(907, 911); }
                  break;
               case 876:
                  if (curChar == 95)
                     { jjCheckNAddStates(912, 915); }
                  break;
               case 877:
                  if (curChar == 96 && kind > 108)
                     kind = 108;
                  break;
               case 881:
                  if (curChar == 95)
                     { jjAddStates(1320, 1321); }
                  break;
               case 884:
                  if (curChar == 95)
                     { jjCheckNAddStates(924, 928); }
                  break;
               case 887:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(887, 888); }
                  break;
               case 888:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 889;
                  break;
               case 891:
                  if (curChar == 95)
                     { jjCheckNAddStates(931, 935); }
                  break;
               case 894:
                  if (curChar == 95)
                     { jjAddStates(1322, 1323); }
                  break;
               case 897:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(897, 888); }
                  break;
               case 900:
                  if (curChar == 95)
                     { jjCheckNAddStates(936, 940); }
                  break;
               case 901:
               case 902:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(941, 945); }
                  break;
               case 903:
                  if (curChar == 95)
                     { jjCheckNAddStates(946, 949); }
                  break;
               case 904:
                  if (curChar == 96 && kind > 115)
                     kind = 115;
                  break;
               case 908:
                  if (curChar == 95)
                     { jjAddStates(1324, 1325); }
                  break;
               case 911:
                  if (curChar == 95)
                     { jjCheckNAddStates(958, 962); }
                  break;
               case 914:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(914, 915); }
                  break;
               case 915:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 916;
                  break;
               case 918:
                  if (curChar == 95)
                     { jjCheckNAddStates(965, 969); }
                  break;
               case 921:
                  if (curChar == 95)
                     { jjAddStates(1326, 1327); }
                  break;
               case 924:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(924, 915); }
                  break;
               case 927:
                  if (curChar == 95)
                     { jjCheckNAddStates(970, 974); }
                  break;
               case 928:
               case 929:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(975, 979); }
                  break;
               case 930:
                  if (curChar == 95)
                     { jjCheckNAddStates(980, 983); }
                  break;
               case 931:
                  if (curChar == 96 && kind > 116)
                     kind = 116;
                  break;
               case 935:
                  if (curChar == 95)
                     { jjAddStates(1328, 1329); }
                  break;
               case 938:
                  if (curChar == 95)
                     { jjCheckNAddStates(992, 996); }
                  break;
               case 941:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(941, 942); }
                  break;
               case 942:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 943;
                  break;
               case 945:
                  if (curChar == 95)
                     { jjCheckNAddStates(999, 1003); }
                  break;
               case 948:
                  if (curChar == 95)
                     { jjAddStates(1330, 1331); }
                  break;
               case 951:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(951, 942); }
                  break;
               case 954:
                  if (curChar == 95)
                     { jjCheckNAddStates(1004, 1008); }
                  break;
               case 955:
                  if (curChar == 92)
                     { jjAddStates(1150, 1153); }
                  break;
               case 956:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 957;
                  break;
               case 958:
                  if (curChar != 95)
                     break;
                  if (kind > 111)
                     kind = 111;
                  jjstateSet[jjnewStateCnt++] = 958;
                  break;
               case 959:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 960;
                  break;
               case 962:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 963;
                  break;
               case 967:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 968;
                  break;
               case 976:
                  if (curChar == 101)
                     { jjAddStates(1163, 1165); }
                  break;
               case 979:
               case 980:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1009, 1014); }
                  break;
               case 981:
                  if (curChar == 95)
                     { jjCheckNAddStates(15, 19); }
                  break;
               case 982:
                  if (curChar == 92)
                     { jjAddStates(1332, 1333); }
                  break;
               case 983:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(15, 19); }
                  break;
               case 988:
                  if (curChar == 95)
                     { jjAddStates(1334, 1335); }
                  break;
               case 991:
                  if (curChar == 95)
                     { jjCheckNAddStates(1023, 1028); }
                  break;
               case 994:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(994, 995); }
                  break;
               case 995:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 996;
                  break;
               case 998:
                  if (curChar == 95)
                     { jjCheckNAddStates(1031, 1036); }
                  break;
               case 1001:
                  if (curChar == 95)
                     { jjAddStates(1336, 1337); }
                  break;
               case 1004:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1004, 995); }
                  break;
               case 1007:
                  if (curChar == 95)
                     { jjCheckNAddStates(1037, 1042); }
                  break;
               case 1008:
                  if (curChar == 92)
                     { jjAddStates(1338, 1341); }
                  break;
               case 1009:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 1010;
                  break;
               case 1011:
                  if (curChar == 95)
                     { jjCheckNAddStates(1050, 1055); }
                  break;
               case 1012:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 1013;
                  break;
               case 1015:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 1016;
                  break;
               case 1019:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 1020;
                  break;
               case 1028:
               case 1029:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1059, 1063); }
                  break;
               case 1030:
                  if (curChar == 95)
                     { jjCheckNAddStates(1064, 1067); }
                  break;
               case 1037:
                  if (curChar == 95)
                     { jjAddStates(1342, 1343); }
                  break;
               case 1040:
                  if (curChar == 95)
                     { jjCheckNAddStates(1076, 1080); }
                  break;
               case 1043:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1043, 1044); }
                  break;
               case 1044:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1045;
                  break;
               case 1047:
                  if (curChar == 95)
                     { jjCheckNAddStates(1083, 1087); }
                  break;
               case 1050:
                  if (curChar == 95)
                     { jjAddStates(1344, 1345); }
                  break;
               case 1053:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1053, 1044); }
                  break;
               case 1056:
                  if (curChar == 95)
                     { jjCheckNAddStates(1088, 1092); }
                  break;
               case 1059:
                  if (curChar == 96)
                     { jjCheckNAddStates(1127, 1129); }
                  break;
               case 1060:
               case 1061:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1093, 1097); }
                  break;
               case 1062:
                  if (curChar == 95)
                     { jjCheckNAddStates(1098, 1101); }
                  break;
               case 1063:
                  if (curChar == 96 && kind > 123)
                     kind = 123;
                  break;
               case 1067:
                  if (curChar == 95)
                     { jjAddStates(1346, 1347); }
                  break;
               case 1070:
                  if (curChar == 95)
                     { jjCheckNAddStates(1110, 1114); }
                  break;
               case 1073:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1073, 1074); }
                  break;
               case 1074:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 1075;
                  break;
               case 1077:
                  if (curChar == 95)
                     { jjCheckNAddStates(1117, 1121); }
                  break;
               case 1080:
                  if (curChar == 95)
                     { jjAddStates(1348, 1349); }
                  break;
               case 1083:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(1083, 1074); }
                  break;
               case 1086:
                  if (curChar == 95)
                     { jjCheckNAddStates(1122, 1126); }
                  break;
               case 1090:
                  if (curChar == 102 && kind > 125)
                     kind = 125;
                  break;
               case 1092:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 1089;
                  break;
               case 1093:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 1098;
                  break;
               case 1094:
                  if (curChar == 102 && kind > 126)
                     kind = 126;
                  break;
               case 1095:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 1094;
                  break;
               case 1096:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 1095;
                  break;
               case 1097:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 1096;
                  break;
               case 1098:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 1097;
                  break;
               case 1099:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 1093;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(53, 55); }
                  break;
               case 6:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(75, 77); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1100 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x80L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_1(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(1, 7);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   12, 13, 11, 14, 12, 11, 14, 15, 16, 21, 22, 28, 29, 34, 35, 979, 
   981, 982, 984, 985, 297, 299, 300, 302, 303, 69, 71, 72, 74, 75, 15, 16, 
   21, 22, 28, 29, 34, 35, 646, 647, 649, 650, 655, 656, 662, 663, 810, 841, 
   872, 669, 672, 675, 679, 1, 2, 4, 683, 685, 686, 688, 731, 733, 734, 736, 
   737, 689, 183, 185, 186, 188, 189, 12, 36, 11, 14, 6, 7, 9, 528, 530, 
   531, 533, 534, 414, 416, 417, 419, 420, 12, 20, 11, 14, 25, 26, 12, 27, 
   11, 14, 69, 70, 71, 72, 74, 75, 76, 77, 82, 83, 89, 90, 95, 96, 
   69, 81, 71, 72, 74, 75, 86, 87, 69, 88, 71, 72, 74, 75, 69, 97, 
   71, 72, 74, 75, 69, 71, 72, 100, 101, 74, 75, 69, 71, 72, 101, 74, 
   75, 118, 120, 124, 118, 119, 120, 123, 124, 118, 120, 123, 124, 125, 126, 131, 
   132, 138, 139, 144, 145, 118, 130, 120, 123, 124, 135, 136, 118, 137, 120, 123, 
   124, 118, 146, 120, 123, 124, 150, 151, 152, 153, 154, 150, 152, 153, 154, 155, 
   156, 161, 162, 168, 169, 174, 175, 150, 160, 152, 153, 154, 165, 166, 150, 167, 
   152, 153, 154, 150, 176, 152, 153, 154, 183, 184, 185, 186, 188, 189, 190, 191, 
   196, 197, 203, 204, 209, 210, 183, 195, 185, 186, 188, 189, 200, 201, 183, 202, 
   185, 186, 188, 189, 183, 211, 185, 186, 188, 189, 183, 185, 186, 214, 215, 188, 
   189, 183, 185, 186, 215, 188, 189, 232, 234, 238, 232, 233, 234, 237, 238, 232, 
   234, 237, 238, 239, 240, 245, 246, 252, 253, 258, 259, 232, 244, 234, 237, 238, 
   249, 250, 232, 251, 234, 237, 238, 232, 260, 234, 237, 238, 264, 265, 266, 267, 
   268, 264, 266, 267, 268, 269, 270, 275, 276, 282, 283, 288, 289, 264, 274, 266, 
   267, 268, 279, 280, 264, 281, 266, 267, 268, 264, 290, 266, 267, 268, 297, 298, 
   299, 300, 302, 303, 304, 305, 310, 311, 317, 318, 323, 324, 297, 309, 299, 300, 
   302, 303, 314, 315, 297, 316, 299, 300, 302, 303, 297, 325, 299, 300, 302, 303, 
   297, 299, 300, 328, 329, 302, 303, 297, 299, 300, 329, 302, 303, 346, 348, 352, 
   346, 347, 348, 351, 352, 346, 348, 351, 352, 353, 354, 359, 360, 366, 367, 372, 
   373, 346, 358, 348, 351, 352, 363, 364, 346, 365, 348, 351, 352, 346, 374, 348, 
   351, 352, 378, 379, 380, 381, 382, 378, 380, 381, 382, 383, 384, 389, 390, 396, 
   397, 402, 403, 378, 388, 380, 381, 382, 393, 394, 378, 395, 380, 381, 382, 378, 
   404, 380, 381, 382, 414, 415, 416, 417, 419, 420, 421, 422, 427, 428, 434, 435, 
   440, 441, 414, 426, 416, 417, 419, 420, 431, 432, 414, 433, 416, 417, 419, 420, 
   414, 442, 416, 417, 419, 420, 414, 416, 417, 445, 446, 419, 420, 414, 416, 417, 
   446, 419, 420, 463, 465, 469, 463, 464, 465, 468, 469, 463, 465, 468, 469, 470, 
   471, 476, 477, 483, 484, 489, 490, 463, 475, 465, 468, 469, 480, 481, 463, 482, 
   465, 468, 469, 463, 491, 465, 468, 469, 495, 496, 497, 498, 499, 495, 497, 498, 
   499, 500, 501, 506, 507, 513, 514, 519, 520, 495, 505, 497, 498, 499, 510, 511, 
   495, 512, 497, 498, 499, 495, 521, 497, 498, 499, 528, 529, 530, 531, 533, 534, 
   535, 536, 541, 542, 548, 549, 554, 555, 528, 540, 530, 531, 533, 534, 545, 546, 
   528, 547, 530, 531, 533, 534, 528, 556, 530, 531, 533, 534, 528, 530, 531, 559, 
   560, 533, 534, 528, 530, 531, 560, 533, 534, 577, 579, 583, 577, 578, 579, 582, 
   583, 577, 579, 582, 583, 584, 585, 590, 591, 597, 598, 603, 604, 577, 589, 579, 
   582, 583, 594, 595, 577, 596, 579, 582, 583, 577, 605, 579, 582, 583, 609, 610, 
   611, 612, 613, 609, 611, 612, 613, 614, 615, 620, 621, 627, 628, 633, 634, 609, 
   619, 611, 612, 613, 624, 625, 609, 626, 611, 612, 613, 609, 635, 611, 612, 613, 
   659, 660, 676, 677, 683, 684, 685, 686, 688, 689, 683, 685, 686, 688, 689, 690, 
   691, 696, 697, 703, 704, 709, 710, 683, 695, 685, 686, 688, 689, 700, 701, 683, 
   702, 685, 686, 688, 689, 683, 711, 685, 686, 688, 689, 683, 685, 686, 714, 715, 
   688, 689, 683, 685, 686, 715, 688, 689, 731, 732, 733, 734, 736, 737, 731, 733, 
   734, 736, 737, 738, 739, 744, 745, 751, 752, 757, 758, 731, 743, 733, 734, 736, 
   737, 748, 749, 731, 750, 733, 734, 736, 737, 731, 759, 733, 734, 736, 737, 731, 
   733, 734, 762, 763, 736, 737, 731, 733, 734, 763, 736, 737, 781, 783, 787, 781, 
   782, 783, 786, 787, 781, 783, 786, 787, 788, 789, 794, 795, 801, 802, 807, 808, 
   781, 793, 783, 786, 787, 798, 799, 781, 800, 783, 786, 787, 781, 809, 783, 786, 
   787, 812, 814, 818, 812, 813, 814, 817, 818, 812, 814, 817, 818, 819, 820, 825, 
   826, 832, 833, 838, 839, 812, 824, 814, 817, 818, 829, 830, 812, 831, 814, 817, 
   818, 812, 840, 814, 817, 818, 843, 845, 849, 843, 844, 845, 848, 849, 843, 845, 
   848, 849, 850, 851, 856, 857, 863, 864, 869, 870, 843, 855, 845, 848, 849, 860, 
   861, 843, 862, 845, 848, 849, 843, 871, 845, 848, 849, 874, 875, 876, 877, 878, 
   874, 876, 877, 878, 879, 880, 885, 886, 892, 893, 898, 899, 874, 884, 876, 877, 
   878, 889, 890, 874, 891, 876, 877, 878, 874, 900, 876, 877, 878, 901, 902, 903, 
   904, 905, 901, 903, 904, 905, 906, 907, 912, 913, 919, 920, 925, 926, 901, 911, 
   903, 904, 905, 916, 917, 901, 918, 903, 904, 905, 901, 927, 903, 904, 905, 928, 
   929, 930, 931, 932, 928, 930, 931, 932, 933, 934, 939, 940, 946, 947, 952, 953, 
   928, 938, 930, 931, 932, 943, 944, 928, 945, 930, 931, 932, 928, 954, 930, 931, 
   932, 979, 980, 981, 982, 984, 985, 986, 987, 992, 993, 999, 1000, 1005, 1006, 979, 
   991, 981, 982, 984, 985, 996, 997, 979, 998, 981, 982, 984, 985, 979, 1007, 981, 
   982, 984, 985, 979, 981, 982, 1010, 1011, 984, 985, 979, 981, 982, 1011, 984, 985, 
   1028, 1030, 1034, 1028, 1029, 1030, 1033, 1034, 1028, 1030, 1033, 1034, 1035, 1036, 1041, 1042, 
   1048, 1049, 1054, 1055, 1028, 1040, 1030, 1033, 1034, 1045, 1046, 1028, 1047, 1030, 1033, 1034, 
   1028, 1056, 1030, 1033, 1034, 1060, 1061, 1062, 1063, 1064, 1060, 1062, 1063, 1064, 1065, 1066, 
   1071, 1072, 1078, 1079, 1084, 1085, 1060, 1070, 1062, 1063, 1064, 1075, 1076, 1060, 1077, 1062, 
   1063, 1064, 1060, 1086, 1062, 1063, 1064, 1060, 1062, 1064, 413, 493, 494, 378, 380, 382, 
   296, 376, 377, 68, 148, 149, 150, 152, 154, 644, 12, 13, 11, 14, 956, 959, 
   962, 967, 874, 876, 901, 903, 928, 930, 932, 905, 878, 1088, 1092, 1099, 38, 39, 
   527, 607, 608, 40, 43, 46, 50, 264, 266, 268, 978, 1058, 1059, 609, 611, 613, 
   182, 262, 263, 495, 497, 499, 17, 18, 30, 31, 73, 98, 78, 79, 91, 92, 
   99, 102, 105, 109, 127, 128, 140, 141, 157, 158, 170, 171, 187, 212, 192, 193, 
   205, 206, 213, 216, 219, 223, 241, 242, 254, 255, 271, 272, 284, 285, 301, 326, 
   306, 307, 319, 320, 327, 330, 333, 337, 355, 356, 368, 369, 385, 386, 398, 399, 
   418, 443, 423, 424, 436, 437, 444, 447, 450, 454, 472, 473, 485, 486, 502, 503, 
   515, 516, 532, 557, 537, 538, 550, 551, 558, 561, 564, 568, 586, 587, 599, 600, 
   616, 617, 629, 630, 651, 652, 664, 665, 687, 712, 692, 693, 705, 706, 713, 716, 
   719, 723, 735, 760, 740, 741, 753, 754, 761, 764, 767, 771, 790, 791, 803, 804, 
   821, 822, 834, 835, 852, 853, 865, 866, 881, 882, 894, 895, 908, 909, 921, 922, 
   935, 936, 948, 949, 983, 1008, 988, 989, 1001, 1002, 1009, 1012, 1015, 1019, 1037, 1038, 
   1050, 1051, 1067, 1068, 1080, 1081, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, "\12", "\143\141\163\145", 
"\144\157", "\145\156\144", "\145\170\160\157\162\164", "\147\154\157\142\141\154", 
"\151\156\143\154\165\144\145", "\160\165\142\154\151\143", "\163\167\151\164\143\150", 
"\165\156\164\151\154", "\141\163", "\143\157\156\163\164\141\156\164", "\145\154\163\145", 
"\145\156\164\162\171", "\146\141\154\154\164\150\162\165", "\147\157\164\157", 
"\154\141\142\145\154", "\162\145\164\162\171", "\164\150\145\156", "\167\150\151\154\145", 
"\142\162\145\141\153", "\143\157\156\164\151\156\165\145", "\145\154\163\145\144\145\146", 
"\145\156\165\155", "\151\146", "\154\157\157\160", "\157\166\145\162\162\151\144\145", 
"\162\145\164\165\162\156", "\164\157", "\167\151\164\150", "\142\171", 
"\144\145\160\162\145\143\141\164\145", "\145\154\163\151\146", "\145\170\151\164", 
"\146\165\156\143\164\151\157\156", "\151\146\144\145\146", "\156\141\155\145\163\160\141\143\145", 
"\160\162\157\143\145\144\165\162\145", "\162\157\165\164\151\156\145", "\164\171\160\145", 
"\167\151\164\150\157\165\164", "\160\162\157\146\151\154\145", 
"\160\162\157\146\151\154\145\137\164\151\155\145", "\164\162\141\143\145", "\142\141\164\143\150", 
"\164\171\160\145\137\143\150\145\143\153", "\151\156\144\151\162\145\143\164\137\151\156\143\154\165\144\145\163", 
"\151\156\154\151\156\145", "\167\141\162\156\151\156\147", "\163\141\166\145", 
"\162\145\163\164\157\162\145", "\163\164\162\151\143\164", "\145\154\163\151\146\144\145\146", 
"\146\157\162", "\50", "\51", "\173", "\175", "\133", "\135", "\73", "\54", "\56", null, 
"\56\56", null, null, "\72", "\156\157\164", "\53", "\55", "\52", "\57", "\134", "\46", 
"\76", "\74", "\74\75", "\76\75", "\75", "\41\75", "\157\162", "\141\156\144", 
"\170\157\162", "\77", "\44", "\141\164\157\155", "\151\156\164\145\147\145\162", 
"\163\145\161\165\145\156\143\145", "\157\142\152\145\143\164", null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002200L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 8)
         {
            jjmatchedKind = 8;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public MeuphoriaTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public MeuphoriaTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream)
  {
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 1100; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "WithinComment",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, 
};
static final long[] jjtoToken = {
   0xfffffffffffffe01L, 0x7ffffffffffff2ffL, 
};
static final long[] jjtoSkip = {
   0xfeL, 0x0L, 
};
static final long[] jjtoMore = {
   0x100L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[1100];
    private final int[] jjstateSet = new int[2 * 1100];

    
    protected char curChar;
}
