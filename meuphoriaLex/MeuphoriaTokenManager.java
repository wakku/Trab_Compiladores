/* MeuphoriaTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. MeuphoriaTokenManager.java */

/** Token Manager. */
@SuppressWarnings("unused")public class MeuphoriaTokenManager implements MeuphoriaConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1, long active2){
   switch (pos)
   {
      case 0:
         if ((active1 & 0x40090000L) != 0L)
            return 752;
         if ((active0 & 0x200000000000L) != 0L || (active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 0;
            return 747;
         }
         if ((active0 & 0x2000060180603000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 0;
            return 597;
         }
         if ((active0 & 0x1400000000020000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 0;
            return 389;
         }
         if ((active0 & 0x202004010000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 0;
            return 668;
         }
         if ((active1 & 0x2f00000L) != 0L)
            return 12;
         if ((active2 & 0x100L) != 0L)
            return 333;
         if ((active1 & 0x40000L) != 0L)
            return 20;
         if ((active1 & 0x4000L) != 0L)
            return 753;
         if ((active0 & 0x80000L) != 0L || (active1 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 0;
            return 349;
         }
         if ((active0 & 0x800801004000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 0;
            return 179;
         }
         if ((active0 & 0x40100400L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 0;
            return 733;
         }
         if ((active0 & 0x4000080000800000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 0;
            return 227;
         }
         if ((active1 & 0x8000L) != 0L)
            return 5;
         if ((active0 & 0x800000000L) != 0L || (active1 & 0x4000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 0;
            return 409;
         }
         if ((active0 & 0x1004000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 0;
            return 543;
         }
         if ((active0 & 0x51012008040800L) != 0L || (active1 & 0x10000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 0;
            return 754;
         }
         if ((active0 & 0x402000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 0;
            return 89;
         }
         if ((active0 & 0x20008020000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 0;
            return 134;
         }
         if ((active0 & 0xc400000010000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 0;
            return 44;
         }
         if ((active0 & 0x180100200008000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 0;
            return 369;
         }
         return -1;
      case 1:
         if ((active0 & 0x800001004000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 178;
         }
         if ((active0 & 0x2004000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 667;
         }
         if ((active0 & 0x2000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 88;
         }
         if ((active0 & 0x180000000008000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 368;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 226;
         }
         if ((active1 & 0x2000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 742;
         }
         if ((active0 & 0x100401000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 641;
         }
         if ((active0 & 0x4000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 542;
         }
         if ((active0 & 0x10000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 43;
         }
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 133;
         }
         if ((active1 & 0x8000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 356;
         }
         if ((active0 & 0x40100000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 732;
         }
         if ((active1 & 0x4000000L) != 0L)
            return 755;
         if ((active0 & 0x1000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 590;
         }
         if ((active0 & 0x40000002000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 596;
         }
         if ((active0 & 0x400L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 739;
         }
         if ((active0 & 0x10a200080800L) != 0L)
            return 756;
         if ((active0 & 0x767deb0498260000L) != 0L || (active1 & 0x10000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 756;
         }
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 1;
            }
            return 420;
         }
         return -1;
      case 2:
         if ((active0 & 0x2004000000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 2;
            return 661;
         }
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 2;
            return 87;
         }
         if ((active0 & 0x1000L) != 0L)
            return 643;
         if ((active0 & 0x1004000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 2;
            return 177;
         }
         if ((active0 & 0x10000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 2;
            return 42;
         }
         if ((active0 & 0x1000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 2;
            return 544;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 2;
            return 225;
         }
         if ((active1 & 0x8000000L) != 0L)
            return 755;
         if ((active1 & 0x2000L) != 0L)
            return 743;
         if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 2;
            return 598;
         }
         if ((active0 & 0x400L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 2;
            return 734;
         }
         if ((active0 & 0x20000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 2;
            return 132;
         }
         if ((active0 & 0x3ffdfb0598668000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 2;
            return 756;
         }
         if ((active0 & 0x40100000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 2;
            return 731;
         }
         if ((active0 & 0x4000000000000000L) != 0L || (active1 & 0x10000000L) != 0L)
            return 756;
         if ((active0 & 0x4000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 2;
            return 541;
         }
         if ((active0 & 0x2000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 2;
            return 595;
         }
         if ((active0 & 0x800000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 2;
            return 419;
         }
         return -1;
      case 3:
         if ((active0 & 0x40000000000L) != 0L)
            return 599;
         if ((active0 & 0x2000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 3;
            }
            return 594;
         }
         if ((active0 & 0x400L) != 0L)
            return 738;
         if ((active0 & 0x2004000000000L) != 0L)
            return 666;
         if ((active0 & 0x1000000L) != 0L)
            return 589;
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 3;
            }
            return 224;
         }
         if ((active0 & 0x441000588200000L) != 0L)
            return 756;
         if ((active0 & 0x4000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 3;
            }
            return 540;
         }
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 3;
            }
            return 91;
         }
         if ((active0 & 0x2000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 3;
            }
            return 46;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 3;
            }
            return 730;
         }
         if ((active0 & 0x3bbcfb1010568000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 3;
            }
            return 756;
         }
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 3;
            }
            return 418;
         }
         if ((active0 & 0x10000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 3;
            }
            return 41;
         }
         if ((active0 & 0x4000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 3;
            }
            return 136;
         }
         return -1;
      case 4:
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 4;
            }
            return 417;
         }
         if ((active0 & 0x1bcce91080128000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 4;
            }
            return 756;
         }
         if ((active0 & 0x2000000000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 4;
            }
            return 681;
         }
         if ((active0 & 0x20000000L) != 0L)
            return 92;
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 4;
            }
            return 223;
         }
         if ((active0 & 0x4000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 4;
            }
            return 539;
         }
         if ((active0 & 0x2000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 4;
            }
            return 593;
         }
         if ((active0 & 0x2000000L) != 0L)
            return 47;
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 4;
            }
            return 729;
         }
         if ((active0 & 0x2030120010440000L) != 0L)
            return 756;
         if ((active0 & 0x4000000L) != 0L)
            return 137;
         if ((active0 & 0x10000L) != 0L)
         {
            if (jjmatchedPos != 4)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 4;
            }
            return 40;
         }
         return -1;
      case 5:
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 5;
            return 222;
         }
         if ((active0 & 0x2acce90080108000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 5;
            return 756;
         }
         if ((active0 & 0x2000000000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 5;
            return 680;
         }
         if ((active0 & 0x1100001000036000L) != 0L)
            return 756;
         if ((active0 & 0x800000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 5;
            return 416;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 5;
            return 728;
         }
         return -1;
      case 6:
         if ((active0 & 0x2000000000000L) != 0L)
            return 757;
         if ((active0 & 0x40000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 6;
            }
            return 687;
         }
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 6;
            }
            return 415;
         }
         if ((active0 & 0xa0c800080008000L) != 0L)
            return 756;
         if ((active0 & 0x800000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 6;
            }
            return 181;
         }
         if ((active0 & 0x20c0690000100000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 96;
               jjmatchedPos = 6;
            }
            return 756;
         }
         return -1;
      case 7:
         if ((active0 & 0xc8610000000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 7;
            return 756;
         }
         if ((active0 & 0x2000080800100000L) != 0L)
            return 756;
         if ((active0 & 0x800000L) != 0L)
            return 182;
         if ((active0 & 0x40000000L) != 0L)
            return 688;
         return -1;
      case 8:
         if ((active0 & 0x610000000000L) != 0L)
            return 756;
         if ((active0 & 0xc8000000000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 8;
            return 756;
         }
         return -1;
      case 9:
         if ((active0 & 0x88000000000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 9;
            return 756;
         }
         if ((active0 & 0x40000000000000L) != 0L)
            return 756;
         return -1;
      case 10:
         if ((active0 & 0x88000000000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 10;
            return 756;
         }
         return -1;
      case 11:
         if ((active0 & 0x8000000000000L) != 0L)
            return 756;
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 11;
            return 756;
         }
         return -1;
      case 12:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 12;
            return 756;
         }
         return -1;
      case 13:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 13;
            return 756;
         }
         return -1;
      case 14:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 14;
            return 756;
         }
         return -1;
      case 15:
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 15;
            return 756;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1, long active2){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1, active2), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 9);
      case 33:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x2000000L);
      case 36:
         return jjStartNfaWithStates_0(0, 94, 752);
      case 38:
         return jjStartNfaWithStates_0(0, 83, 752);
      case 40:
         return jjStopAtPos(0, 63);
      case 41:
         return jjStopAtPos(0, 64);
      case 42:
         return jjStartNfaWithStates_0(0, 80, 752);
      case 43:
         return jjStartNfaWithStates_0(0, 78, 753);
      case 44:
         return jjStopAtPos(0, 70);
      case 45:
         return jjStartNfaWithStates_0(0, 79, 5);
      case 46:
         {
         jjmatchedKind = 71;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x0L, 0x200L);
      case 47:
         {
         jjmatchedKind = 81;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x10L, 0x0L);
      case 48:
         return jjStartNfaWithStates_0(0, 136, 333);
      case 49:
         return jjStopAtPos(0, 137);
      case 58:
         return jjStopAtPos(0, 76);
      case 59:
         return jjStopAtPos(0, 69);
      case 60:
         {
         jjmatchedKind = 85;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x0L, 0x400000L);
      case 61:
         return jjStopAtPos(0, 88);
      case 62:
         {
         jjmatchedKind = 84;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x0L, 0x800000L);
      case 63:
         return jjStopAtPos(0, 93);
      case 91:
         return jjStopAtPos(0, 67);
      case 92:
         return jjStartNfaWithStates_0(0, 82, 20);
      case 93:
         return jjStopAtPos(0, 68);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x80000L, 0x8000000L);
      case 98:
         return jjMoveStringLiteralDfa1_0(0x20008020000000L, 0x0L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x40100400L, 0x0L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x10000000800L, 0x0L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x2000060180603000L, 0x0L);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x4000080000800000L, 0x0L);
      case 103:
         return jjMoveStringLiteralDfa1_0(0x1004000L, 0x0L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x180100200008000L, 0x0L);
      case 108:
         return jjMoveStringLiteralDfa1_0(0x402000000L, 0x0L);
      case 110:
         return jjMoveStringLiteralDfa1_0(0x200000000000L, 0x2000L);
      case 111:
         return jjMoveStringLiteralDfa1_0(0x800000000L, 0x4000000L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0xc400000010000L, 0x0L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x800801004000000L, 0x0L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x1400000000020000L, 0x0L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x51002008000000L, 0x0L);
      case 117:
         return jjMoveStringLiteralDfa1_0(0x40000L, 0x0L);
      case 119:
         return jjMoveStringLiteralDfa1_0(0x202004010000000L, 0x0L);
      case 120:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x10000000L);
      case 123:
         return jjStopAtPos(0, 65);
      case 125:
         return jjStopAtPos(0, 66);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 42:
         if ((active0 & 0x10L) != 0L)
            return jjStopAtPos(1, 4);
         break;
      case 46:
         if ((active1 & 0x200L) != 0L)
            return jjStopAtPos(1, 73);
         break;
      case 61:
         if ((active1 & 0x400000L) != 0L)
            return jjStopAtPos(1, 86);
         else if ((active1 & 0x800000L) != 0L)
            return jjStopAtPos(1, 87);
         else if ((active1 & 0x2000000L) != 0L)
            return jjStopAtPos(1, 89);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x620200002800400L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x800011004000000L, active1, 0L);
      case 102:
         if ((active0 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 33;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000L, active1, 0L);
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x18000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x2004000000000L, active1, 0L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000020080204000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x180000100449000L, active1, 0x8000000L);
      case 111:
         if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(1, 11, 756);
         else if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 37, 756);
         return jjMoveStringLiteralDfa2_0(active0, 0x4000800441100000L, active1, 0x10002000L);
      case 114:
         if ((active1 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(1, 90, 755);
         return jjMoveStringLiteralDfa2_0(active0, 0x1c400020000000L, active1, 0L);
      case 115:
         if ((active0 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(1, 19, 756);
         break;
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000000L, active1, 0L);
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000010000L, active1, 0L);
      case 118:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000L, active1, 0L);
      case 119:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000L, active1, 0L);
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000002000L, active1, 0L);
      case 121:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 39, 756);
         return jjMoveStringLiteralDfa2_0(active0, 0x41000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000000000L, active1, 0L);
      case 98:
         return jjMoveStringLiteralDfa3_0(active0, 0x2010000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000L, active1, 0L);
      case 100:
         if ((active0 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(2, 12, 643);
         else if ((active1 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(2, 91, 755);
         return jjMoveStringLiteralDfa3_0(active0, 0x80100000000000L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x828000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x40010020000L, active1, 0L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000800000L, active1, 0L);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x80040100000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0xc400400004000L, active1, 0L);
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0x41010000002000L, active1, 0L);
      case 114:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 62, 756);
         else if ((active1 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(2, 92, 756);
         return jjMoveStringLiteralDfa3_0(active0, 0x1200000000000000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x2800020080200400L, active1, 0L);
      case 116:
         if ((active1 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(2, 77, 743);
         return jjMoveStringLiteralDfa3_0(active0, 0x22005005440000L, active1, 0L);
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x800100000000L, active1, 0L);
      case 118:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, 0L, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x20000000L);
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000L);
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x30480000000000L);
      case 101:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(3, 10, 738);
         else if ((active0 & 0x200000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 3;
         }
         else if ((active0 & 0x1000000000000L) != 0L)
         {
            jjmatchedKind = 48;
            jjmatchedPos = 3;
         }
         else if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 58, 756);
         return jjMoveStringLiteralDfa4_0(active0, 0x40300082000000L);
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0xc000000000000L);
      case 104:
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 38;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000L);
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x3180020000040000L);
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0x10818000L);
      case 109:
         if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(3, 32, 756);
         break;
      case 110:
         if ((active0 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(3, 27, 756);
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000000L);
      case 111:
         if ((active0 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_0(3, 24, 589);
         return jjMoveStringLiteralDfa4_0(active0, 0x2000L);
      case 112:
         if ((active0 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(3, 34, 756);
         break;
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0x10804400000L);
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000L);
      case 116:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 42, 599);
         return jjMoveStringLiteralDfa4_0(active0, 0x800800040020000L);
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, 0L, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa5_0(active0, 0x40000000000000L);
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x4000L);
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x1000000000020000L);
      case 100:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000L);
      case 101:
         if ((active0 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(4, 28, 756);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 52, 756);
         return jjMoveStringLiteralDfa5_0(active0, 0x410000000000L);
      case 102:
         if ((active0 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 41;
            jjmatchedPos = 4;
         }
         else if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 44, 756);
         return jjMoveStringLiteralDfa5_0(active0, 0x2000000000000000L);
      case 104:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 53, 756);
         break;
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x20c800040010000L);
      case 107:
         if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(4, 29, 92);
         break;
      case 108:
         if ((active0 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(4, 18, 756);
         else if ((active0 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(4, 25, 47);
         break;
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000000000000L);
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x802000000000000L);
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x80001800002000L);
      case 115:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000L);
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000900000L);
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000L);
      case 121:
         if ((active0 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(4, 22, 756);
         else if ((active0 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(4, 26, 137);
         break;
      default :
         break;
   }
   return jjStartNfa_0(3, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, 0L, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000L);
      case 99:
         if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(5, 16, 756);
         return jjMoveStringLiteralDfa6_0(active0, 0x40010000000000L);
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000400000008000L);
      case 101:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 56, 756);
         return jjMoveStringLiteralDfa6_0(active0, 0x80000080000000L);
      case 104:
         if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(5, 17, 756);
         return jjMoveStringLiteralDfa6_0(active0, 0x800000L);
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x80800000000L);
      case 108:
         if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(5, 14, 756);
         return jjMoveStringLiteralDfa6_0(active0, 0xc000000000000L);
      case 110:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 36, 756);
         return jjMoveStringLiteralDfa6_0(active0, 0x200800040000000L);
      case 112:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000L);
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000000000L);
      case 116:
         if ((active0 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(5, 13, 756);
         else if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 60, 756);
         break;
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, 0L, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0x210000000000L);
      case 99:
         return jjMoveStringLiteralDfa7_0(active0, 0x80000000000000L);
      case 100:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000000L);
      case 101:
         if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(6, 15, 756);
         else if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 47, 756);
         else if ((active0 & 0x4000000000000L) != 0L)
         {
            jjmatchedKind = 50;
            jjmatchedPos = 6;
         }
         else if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 59, 756);
         return jjMoveStringLiteralDfa7_0(active0, 0x2008000000000000L);
      case 102:
         if ((active0 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(6, 31, 756);
         break;
      case 103:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 57, 756);
         break;
      case 104:
         return jjMoveStringLiteralDfa7_0(active0, 0x40000000000000L);
      case 110:
         return jjMoveStringLiteralDfa7_0(active0, 0x100000L);
      case 111:
         return jjMoveStringLiteralDfa7_0(active0, 0x80000000000L);
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000L);
      case 116:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 49, 757);
         break;
      case 117:
         return jjMoveStringLiteralDfa7_0(active0, 0x400040000000L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, 0L, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa8_0(active0, 0x8000000000000L);
      case 99:
         return jjMoveStringLiteralDfa8_0(active0, 0x200000000000L);
      case 101:
         if ((active0 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(7, 30, 688);
         else if ((active0 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(7, 35, 756);
         return jjMoveStringLiteralDfa8_0(active0, 0x40000000000000L);
      case 102:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 61, 756);
         break;
      case 110:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 43, 756);
         break;
      case 114:
         return jjMoveStringLiteralDfa8_0(active0, 0x400000000000L);
      case 116:
         if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(7, 20, 756);
         return jjMoveStringLiteralDfa8_0(active0, 0x80010000000000L);
      case 117:
         if ((active0 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(7, 23, 182);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa9_0(active0, 0x80000000000000L);
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x40000000000000L);
      case 101:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 40, 756);
         else if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 45, 756);
         else if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 46, 756);
         break;
      case 116:
         return jjMoveStringLiteralDfa9_0(active0, 0x8000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa10_0(active0, 0x88000000000000L);
      case 107:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 54, 756);
         break;
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa11_0(active0, 0x8000000000000L);
      case 110:
         return jjMoveStringLiteralDfa11_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa12_0(active0, 0x80000000000000L);
      case 101:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(11, 51, 756);
         break;
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa13_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 117:
         return jjMoveStringLiteralDfa14_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa14_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(12, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0, 0L, 0L);
      return 14;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa15_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(13, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa15_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(13, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, active0, 0L, 0L);
      return 15;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa16_0(active0, 0x80000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(14, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa16_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(14, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, active0, 0L, 0L);
      return 16;
   }
   switch(curChar)
   {
      case 115:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(16, 55, 756);
         break;
      default :
         break;
   }
   return jjStartNfa_0(15, active0, 0L, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 752;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 667:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 543:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 668:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 730:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 756:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 743:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 755:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 753:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(328, 329); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(326, 327); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(322, 323); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(320, 321); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(315, 316); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(313, 314); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 102)
                        kind = 102;
                     { jjCheckNAdd(312); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(310, 311); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(306, 307); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(304, 305); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(299, 300); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(297, 298); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(293, 294); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(291, 292); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(287, 288); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(285, 286); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(280, 281); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(278, 279); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(274, 275); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(272, 273); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 98)
                        kind = 98;
                     { jjCheckNAdd(271); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(269, 270); }
                  break;
               case 416:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 418:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 409:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 389:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 729:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 223:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 733:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 540:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 641:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 596:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 734:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 420:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 179:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 739:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 661:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 590:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 728:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 80;
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(8, 11); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 594:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 222:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 542:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 688:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 721;
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(12, 15); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 125;
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(16, 19); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 415:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 757:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 133:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 589:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 738:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 643:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 182:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 215;
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(20, 23); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 539:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 417:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 137:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 170;
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(24, 27); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 752:
               case 16:
                  if ((0x47000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(17, 16); }
                  break;
               case 687:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 226:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 754:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 44:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 419:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 747:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 732:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 0:
                  if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if ((0x7000000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(28, 49); }
                  else if (curChar == 34)
                     { jjAddStates(50, 52); }
                  else if (curChar == 48)
                     { jjAddStates(53, 56); }
                  else if (curChar == 33)
                     { jjCheckNAdd(12); }
                  else if (curChar == 35)
                     { jjCheckNAddStates(57, 59); }
                  if (curChar == 34)
                     { jjCheckNAddStates(60, 67); }
                  else if (curChar == 62)
                     { jjCheckNAdd(12); }
                  else if (curChar == 60)
                     { jjCheckNAdd(12); }
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 742:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 87:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 20:
                  if ((0x1008400000000L & l) != 0L && kind > 111)
                     kind = 111;
                  break;
               case 681:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 369:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 227:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 599:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 632;
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(68, 71); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 597:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 544:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 225:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 598:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 731:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(328, 329); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(326, 327); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(322, 323); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(320, 321); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(315, 316); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(313, 314); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 102)
                        kind = 102;
                     { jjCheckNAdd(312); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(310, 311); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(306, 307); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(304, 305); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(299, 300); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(297, 298); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(293, 294); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(291, 292); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(287, 288); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(285, 286); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(280, 281); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(278, 279); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(274, 275); }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(272, 273); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 98)
                        kind = 98;
                     { jjCheckNAdd(271); }
                  }
                  else if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(269, 270); }
                  if (curChar == 45)
                     { jjCheckNAddStates(72, 74); }
                  break;
               case 593:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 541:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 595:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 368:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 136:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 680:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 356:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 224:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 666:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if ((0x47000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  else if (curChar == 44)
                     { jjAddStates(0, 4); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  break;
               case 1:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjCheckNAddStates(57, 59); }
                  break;
               case 2:
                  if ((0x2400L & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               case 3:
                  if (curChar == 10 && kind > 5)
                     kind = 5;
                  break;
               case 4:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjCheckNAddStates(72, 74); }
                  break;
               case 7:
                  if ((0x2400L & l) != 0L && kind > 6)
                     kind = 6;
                  break;
               case 8:
                  if (curChar == 10 && kind > 6)
                     kind = 6;
                  break;
               case 9:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 11:
                  if ((0x7000000000000000L & l) != 0L && kind > 95)
                     kind = 95;
                  break;
               case 12:
                  if (curChar == 61 && kind > 95)
                     kind = 95;
                  break;
               case 13:
                  if (curChar == 60)
                     { jjCheckNAdd(12); }
                  break;
               case 14:
                  if (curChar == 62)
                     { jjCheckNAdd(12); }
                  break;
               case 15:
                  if (curChar == 33)
                     { jjCheckNAdd(12); }
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(5, 7); }
                  break;
               case 23:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 111)
                     kind = 111;
                  { jjCheckNAddTwoStates(23, 24); }
                  break;
               case 24:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 111)
                     kind = 111;
                  { jjCheckNAdd(24); }
                  break;
               case 26:
               case 31:
               case 39:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(27); }
                  break;
               case 27:
                  if ((0xff000000000000L & l) != 0L && kind > 111)
                     kind = 111;
                  break;
               case 29:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 30:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 34:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 35:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 36:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 37:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 38:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(75, 79); }
                  break;
               case 50:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(8, 11); }
                  break;
               case 52:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(8, 11); }
                  break;
               case 53:
               case 77:
                  if (curChar == 34 && kind > 122)
                     kind = 122;
                  break;
               case 56:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(80, 85); }
                  break;
               case 57:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(86, 90); }
                  break;
               case 59:
               case 64:
               case 72:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(60); }
                  break;
               case 60:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(8, 11); }
                  break;
               case 62:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 63:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 67:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 68:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 69:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 70:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 71:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 73:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(74, 76); }
                  break;
               case 75:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(91, 94); }
                  break;
               case 76:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(95, 97); }
                  break;
               case 78:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 81:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 84:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(98, 101); }
                  break;
               case 85:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(102, 104); }
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(105, 109); }
                  break;
               case 95:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(16, 19); }
                  break;
               case 97:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(16, 19); }
                  break;
               case 98:
               case 122:
                  if (curChar == 34 && kind > 123)
                     kind = 123;
                  break;
               case 101:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(110, 115); }
                  break;
               case 102:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(116, 120); }
                  break;
               case 104:
               case 109:
               case 117:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(105); }
                  break;
               case 105:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(16, 19); }
                  break;
               case 107:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 108:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 112:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 113:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 114:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 115:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 116:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 118:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(119, 121); }
                  break;
               case 120:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(121, 124); }
                  break;
               case 121:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(125, 127); }
                  break;
               case 123:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 126:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 129:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(128, 131); }
                  break;
               case 130:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(132, 134); }
                  break;
               case 139:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(135, 139); }
                  break;
               case 140:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(24, 27); }
                  break;
               case 142:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(24, 27); }
                  break;
               case 143:
               case 167:
                  if (curChar == 34 && kind > 125)
                     kind = 125;
                  break;
               case 146:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(140, 145); }
                  break;
               case 147:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(146, 150); }
                  break;
               case 149:
               case 154:
               case 162:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(150); }
                  break;
               case 150:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(24, 27); }
                  break;
               case 152:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 153:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 157:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 158:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 159:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 160:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 161:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 163:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(164, 166); }
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(151, 154); }
                  break;
               case 166:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(155, 157); }
                  break;
               case 168:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 171:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 174:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(158, 161); }
                  break;
               case 175:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(162, 164); }
                  break;
               case 184:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(165, 169); }
                  break;
               case 185:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(20, 23); }
                  break;
               case 187:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(20, 23); }
                  break;
               case 188:
               case 212:
                  if (curChar == 34 && kind > 127)
                     kind = 127;
                  break;
               case 191:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(170, 175); }
                  break;
               case 192:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(176, 180); }
                  break;
               case 194:
               case 199:
               case 207:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(195); }
                  break;
               case 195:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(20, 23); }
                  break;
               case 197:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 198:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 202:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 203:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 204:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 205:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 206:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 208:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(209, 211); }
                  break;
               case 210:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(181, 184); }
                  break;
               case 211:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(185, 187); }
                  break;
               case 213:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 214:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 216:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 219:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(188, 191); }
                  break;
               case 220:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 230:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAdd(230); }
                  break;
               case 231:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  break;
               case 233:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAddTwoStates(233, 234); }
                  break;
               case 234:
                  if (curChar == 44)
                     { jjAddStates(0, 4); }
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAddTwoStates(234, 237); }
                  break;
               case 263:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjAddStates(195, 196); }
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  break;
               case 266:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 108)
                     kind = 108;
                  { jjCheckNAdd(266); }
                  break;
               case 267:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 120)
                     kind = 120;
                  { jjCheckNAdd(267); }
                  break;
               case 268:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddStates(28, 49); }
                  break;
               case 269:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(269, 270); }
                  break;
               case 270:
               case 271:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 98)
                     kind = 98;
                  { jjCheckNAdd(271); }
                  break;
               case 272:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(272, 273); }
                  break;
               case 273:
               case 274:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(274, 275); }
                  break;
               case 275:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 276:
               case 277:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 99)
                     kind = 99;
                  { jjCheckNAdd(277); }
                  break;
               case 278:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(278, 279); }
                  break;
               case 279:
               case 280:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(280, 281); }
                  break;
               case 282:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(197, 198); }
                  break;
               case 283:
               case 284:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 100)
                     kind = 100;
                  { jjCheckNAdd(284); }
                  break;
               case 285:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(285, 286); }
                  break;
               case 286:
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(287, 288); }
                  break;
               case 288:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 289:
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(290, 281); }
                  break;
               case 291:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(291, 292); }
                  break;
               case 292:
               case 293:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(293, 294); }
                  break;
               case 294:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 295:
               case 296:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAdd(296); }
                  break;
               case 297:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(297, 298); }
                  break;
               case 298:
               case 299:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(299, 300); }
                  break;
               case 301:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(199, 200); }
                  break;
               case 302:
               case 303:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 101)
                     kind = 101;
                  { jjCheckNAdd(303); }
                  break;
               case 304:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(304, 305); }
                  break;
               case 305:
               case 306:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(306, 307); }
                  break;
               case 307:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 308:
               case 309:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(309, 300); }
                  break;
               case 310:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(310, 311); }
                  break;
               case 311:
               case 312:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 102)
                     kind = 102;
                  { jjCheckNAdd(312); }
                  break;
               case 313:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(313, 314); }
                  break;
               case 314:
               case 315:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(315, 316); }
                  break;
               case 317:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(201, 202); }
                  break;
               case 318:
               case 319:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 102)
                     kind = 102;
                  { jjCheckNAdd(319); }
                  break;
               case 320:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(320, 321); }
                  break;
               case 321:
               case 322:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(322, 323); }
                  break;
               case 323:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 324:
               case 325:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(325, 316); }
                  break;
               case 326:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(326, 327); }
                  break;
               case 327:
               case 328:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(328, 329); }
                  break;
               case 329:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 330:
               case 331:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 102)
                     kind = 102;
                  { jjCheckNAdd(331); }
                  break;
               case 332:
                  if (curChar == 48)
                     { jjAddStates(53, 56); }
                  break;
               case 334:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddTwoStates(334, 335); }
                  break;
               case 335:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAdd(335); }
                  break;
               case 337:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAddTwoStates(337, 338); }
                  break;
               case 338:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 104)
                     kind = 104;
                  { jjCheckNAdd(338); }
                  break;
               case 340:
                  if ((0x280000000000L & l) != 0L)
                     { jjAddStates(203, 204); }
                  break;
               case 341:
               case 342:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  { jjCheckNAdd(342); }
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(344, 345); }
                  break;
               case 345:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAdd(345); }
                  break;
               case 359:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 134)
                     kind = 134;
                  jjstateSet[jjnewStateCnt++] = 359;
                  break;
               case 428:
                  if (curChar == 34)
                     { jjCheckNAddStates(60, 67); }
                  break;
               case 430:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(205, 209); }
                  break;
               case 431:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(210, 213); }
                  break;
               case 433:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(210, 213); }
                  break;
               case 434:
               case 484:
                  if (curChar == 34 && kind > 109)
                     kind = 109;
                  break;
               case 437:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(214, 219); }
                  break;
               case 438:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(220, 224); }
                  break;
               case 440:
               case 445:
               case 453:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(441); }
                  break;
               case 441:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(210, 213); }
                  break;
               case 443:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 444:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 447:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 448:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 449:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 450;
                  break;
               case 450:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 451:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 452:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 453;
                  break;
               case 455:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(225, 229); }
                  break;
               case 456:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(230, 233); }
                  break;
               case 458:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(230, 233); }
                  break;
               case 459:
                  if (curChar == 34 && kind > 110)
                     kind = 110;
                  break;
               case 462:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(234, 239); }
                  break;
               case 463:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(240, 244); }
                  break;
               case 465:
               case 470:
               case 478:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(466); }
                  break;
               case 466:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(230, 233); }
                  break;
               case 468:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 469:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 472:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 473;
                  break;
               case 473:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 474;
                  break;
               case 474:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 475;
                  break;
               case 475:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 476:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 477;
                  break;
               case 477:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 478;
                  break;
               case 479:
                  if (curChar == 34)
                     { jjAddStates(50, 52); }
                  break;
               case 480:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(481, 483); }
                  break;
               case 482:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(245, 248); }
                  break;
               case 483:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(249, 251); }
                  break;
               case 485:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 484;
                  break;
               case 486:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 485;
                  break;
               case 487:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 488:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(489, 491); }
                  break;
               case 490:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(252, 255); }
                  break;
               case 491:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(256, 258); }
                  break;
               case 492:
                  if (curChar == 34 && kind > 116)
                     kind = 116;
                  break;
               case 493:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 492;
                  break;
               case 494:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 493;
                  break;
               case 495:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 488;
                  break;
               case 496:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(497, 499); }
                  break;
               case 498:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(259, 262); }
                  break;
               case 499:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(263, 265); }
                  break;
               case 500:
                  if (curChar == 34 && kind > 118)
                     kind = 118;
                  break;
               case 501:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 500;
                  break;
               case 502:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 501;
                  break;
               case 503:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 506:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(266, 269); }
                  break;
               case 507:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(270, 272); }
                  break;
               case 510:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(273, 276); }
                  break;
               case 511:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(277, 279); }
                  break;
               case 514:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(280, 283); }
                  break;
               case 515:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(284, 286); }
                  break;
               case 519:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 112)
                     kind = 112;
                  { jjCheckNAddTwoStates(519, 520); }
                  break;
               case 520:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 112)
                     kind = 112;
                  { jjCheckNAdd(520); }
                  break;
               case 522:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 523;
                  break;
               case 523:
                  if ((0xff000000000000L & l) != 0L && kind > 113)
                     kind = 113;
                  break;
               case 525:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 526;
                  break;
               case 526:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 527;
                  break;
               case 527:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 528;
                  break;
               case 528:
                  if ((0xff000000000000L & l) != 0L && kind > 114)
                     kind = 114;
                  break;
               case 530:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 531;
                  break;
               case 531:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 532;
                  break;
               case 532:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 533;
                  break;
               case 533:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 534;
                  break;
               case 534:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 535;
                  break;
               case 535:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 536;
                  break;
               case 536:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 537;
                  break;
               case 537:
                  if ((0xff000000000000L & l) != 0L && kind > 115)
                     kind = 115;
                  break;
               case 546:
                  if (curChar == 34)
                     { jjCheckNAddStates(287, 290); }
                  break;
               case 548:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(291, 295); }
                  break;
               case 549:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(287, 290); }
                  break;
               case 551:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(287, 290); }
                  break;
               case 552:
               case 576:
                  if (curChar == 34 && kind > 128)
                     kind = 128;
                  break;
               case 555:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(296, 301); }
                  break;
               case 556:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(302, 306); }
                  break;
               case 558:
               case 563:
               case 571:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(559); }
                  break;
               case 559:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(287, 290); }
                  break;
               case 561:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 562;
                  break;
               case 562:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 565:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 566:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 567;
                  break;
               case 567:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 568:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 569;
                  break;
               case 569:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 570:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 572:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(573, 575); }
                  break;
               case 574:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(307, 310); }
                  break;
               case 575:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(311, 313); }
                  break;
               case 577:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 576;
                  break;
               case 578:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 577;
                  break;
               case 579:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 580:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 579;
                  break;
               case 583:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(314, 317); }
                  break;
               case 584:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(318, 320); }
                  break;
               case 601:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(321, 325); }
                  break;
               case 602:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(68, 71); }
                  break;
               case 604:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(68, 71); }
                  break;
               case 605:
               case 629:
                  if (curChar == 34 && kind > 126)
                     kind = 126;
                  break;
               case 608:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(326, 331); }
                  break;
               case 609:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(332, 336); }
                  break;
               case 611:
               case 616:
               case 624:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(612); }
                  break;
               case 612:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(68, 71); }
                  break;
               case 614:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 615;
                  break;
               case 615:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 616;
                  break;
               case 618:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 619;
                  break;
               case 619:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 620;
                  break;
               case 620:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 621;
                  break;
               case 621:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 622;
                  break;
               case 622:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 623;
                  break;
               case 623:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 624;
                  break;
               case 625:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(626, 628); }
                  break;
               case 627:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(337, 340); }
                  break;
               case 628:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(341, 343); }
                  break;
               case 630:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 631:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 630;
                  break;
               case 632:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 625;
                  break;
               case 633:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 636:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(344, 347); }
                  break;
               case 637:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(348, 350); }
                  break;
               case 690:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(351, 355); }
                  break;
               case 691:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(12, 15); }
                  break;
               case 693:
                  if ((0x1008400000000L & l) != 0L)
                     { jjCheckNAddStates(12, 15); }
                  break;
               case 694:
               case 718:
                  if (curChar == 34 && kind > 124)
                     kind = 124;
                  break;
               case 697:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(356, 361); }
                  break;
               case 698:
                  if ((0x3000000000000L & l) != 0L)
                     { jjCheckNAddStates(362, 366); }
                  break;
               case 700:
               case 705:
               case 713:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAdd(701); }
                  break;
               case 701:
                  if ((0xff000000000000L & l) != 0L)
                     { jjCheckNAddStates(12, 15); }
                  break;
               case 703:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 704;
                  break;
               case 704:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 705;
                  break;
               case 707:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 708;
                  break;
               case 708:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 709;
                  break;
               case 709:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 710;
                  break;
               case 710:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 711;
                  break;
               case 711:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 712;
                  break;
               case 712:
                  if ((0xff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 713;
                  break;
               case 714:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(715, 717); }
                  break;
               case 716:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(367, 370); }
                  break;
               case 717:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(371, 373); }
                  break;
               case 719:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 718;
                  break;
               case 720:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 719;
                  break;
               case 721:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 714;
                  break;
               case 722:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 721;
                  break;
               case 725:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(374, 377); }
                  break;
               case 726:
                  if ((0x47000000000L & l) != 0L)
                     { jjCheckNAddStates(378, 380); }
                  break;
               case 744:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 134)
                     kind = 134;
                  { jjAddStates(381, 383); }
                  break;
               case 750:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 135)
                     kind = 135;
                  jjstateSet[jjnewStateCnt++] = 750;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 667:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 683;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 669;
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 661;
                  break;
               case 543:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 590;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 542;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 668:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 684;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 678;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 667;
                  break;
               case 91:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 107)
                  {
                     if (kind > 123)
                        kind = 123;
                     { jjAddStates(384, 386); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 730:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 729;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 756:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 743:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 135)
                        kind = 135;
                     { jjCheckNAdd(750); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 134)
                        kind = 134;
                     { jjCheckNAddStates(381, 383); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 755:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 360;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 416:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 415;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 418:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 417;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 409:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 114)
                  {
                     if (kind > 134)
                        kind = 134;
                     { jjCheckNAdd(361); }
                  }
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 425;
                  else if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 420;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 413;
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 389:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 402;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 395;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 40:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 99)
                  {
                     if (kind > 119)
                        kind = 119;
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 178:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 177;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 729:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 728;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 223:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 222;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 733:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 739;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 732;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 42:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 41;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 540:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 539;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 641:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 658;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 651;
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 643;
                  break;
               case 596:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 598;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 595;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 734:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 738;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 420:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 419;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 46:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 108)
                     { jjAddStates(387, 389); }
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 179:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 178;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 739:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 734;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 661:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 682;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if (curChar == 104)
                     { jjCheckNAdd(677); }
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 666;
                  break;
               case 590:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 544;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 177:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 136;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 728:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 687;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 47:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(83, 85); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 594:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 593;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 222:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 181;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 542:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 541;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 688:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(724, 726); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 92:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(128, 130); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 415:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 101)
                  {
                     if (kind > 119)
                        kind = 119;
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 757:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 676;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 133:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 132;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 589:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 588;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 738:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 737;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 88:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 87;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 643:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 657;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 650;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 642;
                  break;
               case 182:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(218, 220); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 539:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 108)
                  {
                     if (kind > 119)
                        kind = 119;
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 417:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 416;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 137:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(173, 175); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 752:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 687:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 101)
                  {
                     if (kind > 124)
                        kind = 124;
                     { jjAddStates(390, 392); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 134:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 133;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 226:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 225;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 754:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 44:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 43;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 349:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 356;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 354;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 351;
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 181:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 117)
                  {
                     if (kind > 127)
                        kind = 127;
                     { jjAddStates(393, 395); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 419:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 418;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 747:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 748;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 742;
                  break;
               case 732:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 731;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 132:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 91;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAddStates(396, 404); }
                  }
                  else if (curChar == 92)
                     { jjAddStates(405, 408); }
                  else if (curChar == 96)
                     { jjCheckNAddStates(409, 414); }
                  if (curChar == 110)
                     { jjAddStates(415, 416); }
                  else if (curChar == 99)
                     { jjAddStates(417, 418); }
                  else if (curChar == 119)
                     { jjAddStates(419, 421); }
                  else if (curChar == 101)
                     { jjAddStates(422, 426); }
                  else if (curChar == 103)
                     { jjAddStates(427, 428); }
                  else if (curChar == 111)
                     { jjCheckNAddStates(429, 433); }
                  else if (curChar == 115)
                     { jjAddStates(434, 436); }
                  else if (curChar == 105)
                     { jjAddStates(437, 439); }
                  else if (curChar == 97)
                     { jjCheckNAddStates(440, 443); }
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 227;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 179;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 134;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 89;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 44;
                  else if (curChar == 92)
                     { jjAddStates(444, 445); }
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 41:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 40;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 742:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 749;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 743;
                  break;
               case 43:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 42;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 87:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 46;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 20:
                  if ((0x14402010000020L & l) != 0L)
                  {
                     if (kind > 111)
                        kind = 111;
                  }
                  else if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 530;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 525;
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 522;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 519;
                  if (curChar == 92)
                     { jjAddStates(446, 449); }
                  break;
               case 681:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 680;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 369:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 380;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 374;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 89:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 88;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 227:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 226;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 599:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  else if (curChar == 96)
                     { jjCheckNAddTwoStates(635, 637); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 597:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 653;
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 639;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 645;
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 596;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 641;
                  break;
               case 544:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 589;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 225:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 224;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 598:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 116)
                  {
                     if (kind > 126)
                        kind = 126;
                     { jjAddStates(450, 452); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 731:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 730;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 593:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 116)
                  {
                     if (kind > 119)
                        kind = 119;
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 541:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 540;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 595:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 594;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 368:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 379;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 373;
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 136:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 121)
                  {
                     if (kind > 125)
                        kind = 125;
                     { jjAddStates(453, 455); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 333:
                  if (curChar == 120)
                     { jjCheckNAdd(344); }
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 340;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 337;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 680:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 116)
                     { jjCheckNAdd(677); }
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 356:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 100)
                  {
                     if (kind > 134)
                        kind = 134;
                     { jjCheckNAdd(361); }
                  }
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 224:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 223;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 666:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 120)
                        kind = 120;
                     { jjCheckNAdd(267); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(266); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 107)
                        kind = 107;
                     { jjCheckNAddTwoStates(233, 234); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddStates(5, 7); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 96)
                        kind = 96;
                     { jjCheckNAdd(230); }
                  }
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 676;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 681;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 665;
                  else if (curChar == 95)
                  {
                     if (kind > 97)
                        kind = 97;
                     { jjCheckNAddTwoStates(17, 16); }
                  }
                  break;
               case 1:
                  { jjAddStates(57, 59); }
                  break;
               case 6:
                  { jjAddStates(72, 74); }
                  break;
               case 16:
                  if (curChar != 95)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddTwoStates(17, 16); }
                  break;
               case 17:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(5, 7); }
                  break;
               case 18:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 97)
                     kind = 97;
                  { jjCheckNAddStates(5, 7); }
                  break;
               case 19:
                  if (curChar == 92)
                     { jjAddStates(444, 445); }
                  break;
               case 21:
                  if (curChar == 92)
                     { jjAddStates(446, 449); }
                  break;
               case 22:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 24:
                  if (curChar != 95)
                     break;
                  if (kind > 111)
                     kind = 111;
                  jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 25:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 32:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 45:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 48:
               case 49:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(75, 79); }
                  break;
               case 50:
                  if (curChar == 95)
                     { jjCheckNAddStates(8, 11); }
                  break;
               case 51:
                  if (curChar == 92)
                     { jjAddStates(456, 457); }
                  break;
               case 52:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(8, 11); }
                  break;
               case 54:
                  if (curChar == 92)
                     { jjAddStates(458, 461); }
                  break;
               case 55:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 57:
                  if (curChar == 95)
                     { jjCheckNAddStates(86, 90); }
                  break;
               case 58:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 65:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 74:
               case 75:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(91, 94); }
                  break;
               case 76:
                  if (curChar == 95)
                     { jjCheckNAddStates(95, 97); }
                  break;
               case 82:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(83, 85); }
                  break;
               case 83:
               case 84:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(98, 101); }
                  break;
               case 85:
                  if (curChar == 95)
                     { jjCheckNAddStates(102, 104); }
                  break;
               case 86:
                  if (curChar == 96 && kind > 122)
                     kind = 122;
                  break;
               case 90:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 93:
               case 94:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(105, 109); }
                  break;
               case 95:
                  if (curChar == 95)
                     { jjCheckNAddStates(16, 19); }
                  break;
               case 96:
                  if (curChar == 92)
                     { jjAddStates(462, 463); }
                  break;
               case 97:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(16, 19); }
                  break;
               case 99:
                  if (curChar == 92)
                     { jjAddStates(464, 467); }
                  break;
               case 100:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 102:
                  if (curChar == 95)
                     { jjCheckNAddStates(116, 120); }
                  break;
               case 103:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 110:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 119:
               case 120:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(121, 124); }
                  break;
               case 121:
                  if (curChar == 95)
                     { jjCheckNAddStates(125, 127); }
                  break;
               case 127:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(128, 130); }
                  break;
               case 128:
               case 129:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(128, 131); }
                  break;
               case 130:
                  if (curChar == 95)
                     { jjCheckNAddStates(132, 134); }
                  break;
               case 131:
                  if (curChar == 96 && kind > 123)
                     kind = 123;
                  break;
               case 135:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 138:
               case 139:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(135, 139); }
                  break;
               case 140:
                  if (curChar == 95)
                     { jjCheckNAddStates(24, 27); }
                  break;
               case 141:
                  if (curChar == 92)
                     { jjAddStates(468, 469); }
                  break;
               case 142:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(24, 27); }
                  break;
               case 144:
                  if (curChar == 92)
                     { jjAddStates(470, 473); }
                  break;
               case 145:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 147:
                  if (curChar == 95)
                     { jjCheckNAddStates(146, 150); }
                  break;
               case 148:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 155:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 164:
               case 165:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(151, 154); }
                  break;
               case 166:
                  if (curChar == 95)
                     { jjCheckNAddStates(155, 157); }
                  break;
               case 172:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(173, 175); }
                  break;
               case 173:
               case 174:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(158, 161); }
                  break;
               case 175:
                  if (curChar == 95)
                     { jjCheckNAddStates(162, 164); }
                  break;
               case 176:
                  if (curChar == 96 && kind > 125)
                     kind = 125;
                  break;
               case 180:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 183:
               case 184:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(165, 169); }
                  break;
               case 185:
                  if (curChar == 95)
                     { jjCheckNAddStates(20, 23); }
                  break;
               case 186:
                  if (curChar == 92)
                     { jjAddStates(474, 475); }
                  break;
               case 187:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(20, 23); }
                  break;
               case 189:
                  if (curChar == 92)
                     { jjAddStates(476, 479); }
                  break;
               case 190:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 192:
                  if (curChar == 95)
                     { jjCheckNAddStates(176, 180); }
                  break;
               case 193:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 200:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 209:
               case 210:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(181, 184); }
                  break;
               case 211:
                  if (curChar == 95)
                     { jjCheckNAddStates(185, 187); }
                  break;
               case 217:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(218, 220); }
                  break;
               case 218:
               case 219:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(188, 191); }
                  break;
               case 220:
                  if (curChar == 95)
                     { jjCheckNAddStates(192, 194); }
                  break;
               case 221:
                  if (curChar == 96 && kind > 127)
                     kind = 127;
                  break;
               case 228:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAddStates(396, 404); }
                  break;
               case 230:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 96)
                     kind = 96;
                  { jjCheckNAdd(230); }
                  break;
               case 231:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(231, 232); }
                  break;
               case 232:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAddTwoStates(233, 234); }
                  break;
               case 233:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAddTwoStates(233, 234); }
                  break;
               case 235:
                  if (curChar == 109)
                     { jjCheckNAdd(236); }
                  break;
               case 236:
               case 237:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAddTwoStates(234, 237); }
                  break;
               case 238:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 239:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if (curChar == 114)
                     { jjCheckNAdd(236); }
                  break;
               case 242:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if (curChar == 101)
                     { jjCheckNAdd(236); }
                  break;
               case 249:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 250:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 254:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if (curChar == 116)
                     { jjCheckNAdd(236); }
                  break;
               case 257:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 261:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 262:
               case 263:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(263, 236); }
                  break;
               case 264:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(264, 265); }
                  break;
               case 265:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 108)
                     kind = 108;
                  { jjCheckNAdd(266); }
                  break;
               case 266:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 108)
                     kind = 108;
                  { jjCheckNAdd(266); }
                  break;
               case 267:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 120)
                     kind = 120;
                  { jjCheckNAdd(267); }
                  break;
               case 271:
                  if (curChar != 95)
                     break;
                  if (kind > 98)
                     kind = 98;
                  jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 274:
                  if (curChar == 95)
                     { jjAddStates(480, 481); }
                  break;
               case 277:
                  if (curChar != 95)
                     break;
                  if (kind > 99)
                     kind = 99;
                  jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 280:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(280, 281); }
                  break;
               case 281:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 284:
                  if (curChar != 95)
                     break;
                  if (kind > 100)
                     kind = 100;
                  jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 287:
                  if (curChar == 95)
                     { jjAddStates(482, 483); }
                  break;
               case 290:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(290, 281); }
                  break;
               case 293:
                  if (curChar == 95)
                     { jjAddStates(484, 485); }
                  break;
               case 296:
                  if (curChar != 95)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 299:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(299, 300); }
                  break;
               case 300:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 303:
                  if (curChar != 95)
                     break;
                  if (kind > 101)
                     kind = 101;
                  jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 306:
                  if (curChar == 95)
                     { jjAddStates(486, 487); }
                  break;
               case 309:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(309, 300); }
                  break;
               case 312:
                  if (curChar != 95)
                     break;
                  if (kind > 102)
                     kind = 102;
                  jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 315:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(315, 316); }
                  break;
               case 316:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 319:
                  if (curChar != 95)
                     break;
                  if (kind > 102)
                     kind = 102;
                  jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 322:
                  if (curChar == 95)
                     { jjAddStates(488, 489); }
                  break;
               case 325:
                  if (curChar == 95)
                     { jjCheckNAddTwoStates(325, 316); }
                  break;
               case 328:
                  if (curChar == 95)
                     { jjAddStates(490, 491); }
                  break;
               case 331:
                  if (curChar != 95)
                     break;
                  if (kind > 102)
                     kind = 102;
                  jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 335:
                  if (curChar != 95)
                     break;
                  if (kind > 103)
                     kind = 103;
                  jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 336:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 337;
                  break;
               case 338:
                  if (curChar != 95)
                     break;
                  if (kind > 104)
                     kind = 104;
                  jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 339:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if (curChar != 95)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 343:
                  if (curChar == 120)
                     { jjCheckNAdd(344); }
                  break;
               case 344:
                  if ((0x7eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAddTwoStates(344, 345); }
                  break;
               case 345:
                  if ((0x8000007eL & l) == 0L)
                     break;
                  if (kind > 106)
                     kind = 106;
                  { jjCheckNAdd(345); }
                  break;
               case 346:
                  if (curChar == 97)
                     { jjCheckNAddStates(440, 443); }
                  break;
               case 347:
                  if (curChar == 109)
                     { jjCheckNAdd(232); }
                  break;
               case 348:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 350:
                  if (curChar == 109)
                     { jjCheckNAdd(265); }
                  break;
               case 351:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 352:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 353:
                  if (curChar == 109 && kind > 120)
                     kind = 120;
                  break;
               case 354:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 355:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 357:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 358:
               case 359:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 134)
                     kind = 134;
                  { jjCheckNAdd(359); }
                  break;
               case 360:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 361:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 362:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 363:
                  if (curChar == 105)
                     { jjAddStates(437, 439); }
                  break;
               case 364:
                  if (curChar == 114)
                     { jjCheckNAdd(232); }
                  break;
               case 365:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 366:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 367:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 370:
                  if (curChar == 114)
                     { jjCheckNAdd(265); }
                  break;
               case 371:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 372:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 373:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 374:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 375:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 376:
                  if (curChar == 114 && kind > 120)
                     kind = 120;
                  break;
               case 377:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 378:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 379:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 380:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 381:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 380;
                  break;
               case 382:
                  if (curChar == 115)
                     { jjAddStates(434, 436); }
                  break;
               case 383:
                  if (curChar == 101)
                     { jjCheckNAdd(232); }
                  break;
               case 384:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 385:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 386:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 387:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 388:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 390:
                  if (curChar == 101)
                     { jjCheckNAdd(265); }
                  break;
               case 391:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 392:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 393:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 394:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 396:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 397:
                  if (curChar == 101 && kind > 120)
                     kind = 120;
                  break;
               case 398:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 399:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 400:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 401:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 400;
                  break;
               case 402:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 403:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 404:
                  if (curChar == 111)
                     { jjCheckNAddStates(429, 433); }
                  break;
               case 405:
                  if (curChar == 116)
                     { jjCheckNAdd(232); }
                  break;
               case 406:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 407:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 406;
                  break;
               case 408:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 410:
                  if (curChar == 116)
                     { jjCheckNAdd(265); }
                  break;
               case 411:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 412:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 413:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 414:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 421:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 422:
                  if (curChar == 116 && kind > 120)
                     kind = 120;
                  break;
               case 423:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 422;
                  break;
               case 424:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 425:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 426:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 427:
                  if (curChar != 114)
                     break;
                  if (kind > 134)
                     kind = 134;
                  { jjCheckNAdd(361); }
                  break;
               case 429:
               case 430:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(205, 209); }
                  break;
               case 431:
                  if (curChar == 95)
                     { jjCheckNAddStates(210, 213); }
                  break;
               case 432:
                  if (curChar == 92)
                     { jjAddStates(492, 493); }
                  break;
               case 433:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(210, 213); }
                  break;
               case 435:
                  if (curChar == 92)
                     { jjAddStates(494, 497); }
                  break;
               case 436:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 438:
                  if (curChar == 95)
                     { jjCheckNAddStates(220, 224); }
                  break;
               case 439:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 442:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 446:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 454:
               case 455:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(225, 229); }
                  break;
               case 456:
                  if (curChar == 95)
                     { jjCheckNAddStates(230, 233); }
                  break;
               case 457:
                  if (curChar == 92)
                     { jjAddStates(498, 499); }
                  break;
               case 458:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(230, 233); }
                  break;
               case 460:
                  if (curChar == 92)
                     { jjAddStates(500, 503); }
                  break;
               case 461:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 463:
                  if (curChar == 95)
                     { jjCheckNAddStates(240, 244); }
                  break;
               case 464:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 467:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 471:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 472;
                  break;
               case 481:
               case 482:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(245, 248); }
                  break;
               case 483:
                  if (curChar == 95)
                     { jjCheckNAddStates(249, 251); }
                  break;
               case 489:
               case 490:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(252, 255); }
                  break;
               case 491:
                  if (curChar == 95)
                     { jjCheckNAddStates(256, 258); }
                  break;
               case 497:
               case 498:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(259, 262); }
                  break;
               case 499:
                  if (curChar == 95)
                     { jjCheckNAddStates(263, 265); }
                  break;
               case 504:
                  if (curChar == 96)
                     { jjCheckNAddStates(409, 414); }
                  break;
               case 505:
               case 506:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(266, 269); }
                  break;
               case 507:
                  if (curChar == 95)
                     { jjCheckNAddStates(270, 272); }
                  break;
               case 508:
                  if (curChar == 96 && kind > 109)
                     kind = 109;
                  break;
               case 509:
               case 510:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(273, 276); }
                  break;
               case 511:
                  if (curChar == 95)
                     { jjCheckNAddStates(277, 279); }
                  break;
               case 512:
                  if (curChar == 96 && kind > 116)
                     kind = 116;
                  break;
               case 513:
               case 514:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(280, 283); }
                  break;
               case 515:
                  if (curChar == 95)
                     { jjCheckNAddStates(284, 286); }
                  break;
               case 516:
                  if (curChar == 96 && kind > 117)
                     kind = 117;
                  break;
               case 517:
                  if (curChar == 92)
                     { jjAddStates(405, 408); }
                  break;
               case 518:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 520:
                  if (curChar != 95)
                     break;
                  if (kind > 112)
                     kind = 112;
                  jjstateSet[jjnewStateCnt++] = 520;
                  break;
               case 521:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 522;
                  break;
               case 524:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 525;
                  break;
               case 529:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 530;
                  break;
               case 538:
                  if (curChar == 103)
                     { jjAddStates(427, 428); }
                  break;
               case 545:
                  if (curChar == 108)
                     { jjAddStates(504, 506); }
                  break;
               case 547:
               case 548:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(291, 295); }
                  break;
               case 549:
                  if (curChar == 95)
                     { jjCheckNAddStates(287, 290); }
                  break;
               case 550:
                  if (curChar == 92)
                     { jjAddStates(507, 508); }
                  break;
               case 551:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(287, 290); }
                  break;
               case 553:
                  if (curChar == 92)
                     { jjAddStates(509, 512); }
                  break;
               case 554:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 555;
                  break;
               case 556:
                  if (curChar == 95)
                     { jjCheckNAddStates(302, 306); }
                  break;
               case 557:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 558;
                  break;
               case 560:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 564:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 573:
               case 574:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(307, 310); }
                  break;
               case 575:
                  if (curChar == 95)
                     { jjCheckNAddStates(311, 313); }
                  break;
               case 581:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(582, 584); }
                  break;
               case 582:
               case 583:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(314, 317); }
                  break;
               case 584:
                  if (curChar == 95)
                     { jjCheckNAddStates(318, 320); }
                  break;
               case 585:
                  if (curChar == 96 && kind > 128)
                     kind = 128;
                  break;
               case 586:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 545;
                  break;
               case 587:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 586;
                  break;
               case 588:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 587;
                  break;
               case 591:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 590;
                  break;
               case 592:
                  if (curChar == 101)
                     { jjAddStates(422, 426); }
                  break;
               case 600:
               case 601:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(321, 325); }
                  break;
               case 602:
                  if (curChar == 95)
                     { jjCheckNAddStates(68, 71); }
                  break;
               case 603:
                  if (curChar == 92)
                     { jjAddStates(513, 514); }
                  break;
               case 604:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(68, 71); }
                  break;
               case 606:
                  if (curChar == 92)
                     { jjAddStates(515, 518); }
                  break;
               case 607:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 608;
                  break;
               case 609:
                  if (curChar == 95)
                     { jjCheckNAddStates(332, 336); }
                  break;
               case 610:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 611;
                  break;
               case 613:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 614;
                  break;
               case 617:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 618;
                  break;
               case 626:
               case 627:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(337, 340); }
                  break;
               case 628:
                  if (curChar == 95)
                     { jjCheckNAddStates(341, 343); }
                  break;
               case 634:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(635, 637); }
                  break;
               case 635:
               case 636:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(344, 347); }
                  break;
               case 637:
                  if (curChar == 95)
                     { jjCheckNAddStates(348, 350); }
                  break;
               case 638:
                  if (curChar == 96 && kind > 126)
                     kind = 126;
                  break;
               case 639:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 640:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 639;
                  break;
               case 642:
                  if (curChar == 102 && kind > 129)
                     kind = 129;
                  break;
               case 644:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 641;
                  break;
               case 645:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 651;
                  break;
               case 646:
                  if (curChar == 104 && kind > 131)
                     kind = 131;
                  break;
               case 647:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 646;
                  break;
               case 648:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 647;
                  break;
               case 649:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 648;
                  break;
               case 650:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 649;
                  break;
               case 651:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 650;
                  break;
               case 652:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 645;
                  break;
               case 653:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 658;
                  break;
               case 654:
                  if (curChar == 102 && kind > 133)
                     kind = 133;
                  break;
               case 655:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 654;
                  break;
               case 656:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 655;
                  break;
               case 657:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 656;
                  break;
               case 658:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 657;
                  break;
               case 659:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 653;
                  break;
               case 660:
                  if (curChar == 119)
                     { jjAddStates(419, 421); }
                  break;
               case 662:
                  if (curChar == 121 && kind > 121)
                     kind = 121;
                  break;
               case 663:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 662;
                  break;
               case 664:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 663;
                  break;
               case 665:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 664;
                  break;
               case 669:
                  if (curChar == 104)
                     { jjCheckNAdd(677); }
                  break;
               case 670:
                  if (curChar == 117 && kind > 130)
                     kind = 130;
                  break;
               case 671:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 670;
                  break;
               case 672:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 671;
                  break;
               case 673:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 672;
                  break;
               case 674:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 673;
                  break;
               case 675:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 674;
                  break;
               case 676:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 675;
                  break;
               case 677:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 676;
                  break;
               case 678:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 669;
                  break;
               case 679:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 678;
                  break;
               case 682:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 681;
                  break;
               case 683:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 682;
                  break;
               case 684:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 683;
                  break;
               case 685:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 684;
                  break;
               case 686:
                  if (curChar == 99)
                     { jjAddStates(417, 418); }
                  break;
               case 689:
               case 690:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(351, 355); }
                  break;
               case 691:
                  if (curChar == 95)
                     { jjCheckNAddStates(12, 15); }
                  break;
               case 692:
                  if (curChar == 92)
                     { jjAddStates(519, 520); }
                  break;
               case 693:
                  if ((0x14402010000020L & l) != 0L)
                     { jjCheckNAddStates(12, 15); }
                  break;
               case 695:
                  if (curChar == 92)
                     { jjAddStates(521, 524); }
                  break;
               case 696:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 697;
                  break;
               case 698:
                  if (curChar == 95)
                     { jjCheckNAddStates(362, 366); }
                  break;
               case 699:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 700;
                  break;
               case 702:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 703;
                  break;
               case 706:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 707;
                  break;
               case 715:
               case 716:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(367, 370); }
                  break;
               case 717:
                  if (curChar == 95)
                     { jjCheckNAddStates(371, 373); }
                  break;
               case 723:
                  if (curChar == 96)
                     { jjCheckNAddTwoStates(724, 726); }
                  break;
               case 724:
               case 725:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(374, 377); }
                  break;
               case 726:
                  if (curChar == 95)
                     { jjCheckNAddStates(378, 380); }
                  break;
               case 727:
                  if (curChar == 96 && kind > 124)
                     kind = 124;
                  break;
               case 735:
                  if (curChar == 101 && kind > 132)
                     kind = 132;
                  break;
               case 736:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 735;
                  break;
               case 737:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 736;
                  break;
               case 740:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 739;
                  break;
               case 741:
                  if (curChar == 110)
                     { jjAddStates(415, 416); }
                  break;
               case 744:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 134)
                     kind = 134;
                  { jjCheckNAddStates(381, 383); }
                  break;
               case 745:
                  if (curChar == 97)
                     { jjCheckNAdd(362); }
                  break;
               case 746:
                  if (curChar == 111)
                     { jjCheckNAdd(427); }
                  break;
               case 748:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 749;
                  break;
               case 749:
               case 750:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 135)
                     kind = 135;
                  { jjCheckNAdd(750); }
                  break;
               case 751:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 748;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(57, 59); }
                  break;
               case 6:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(72, 74); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 752 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x80L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_1(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(1, 7);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   240, 247, 255, 261, 262, 17, 18, 16, 48, 50, 51, 53, 689, 691, 692, 694, 
   93, 95, 96, 98, 183, 185, 186, 188, 138, 140, 141, 143, 269, 270, 272, 273, 
   278, 279, 285, 286, 291, 292, 297, 298, 304, 305, 310, 311, 313, 314, 320, 321, 
   326, 327, 487, 495, 503, 333, 336, 339, 343, 1, 2, 4, 429, 431, 432, 434, 
   454, 456, 457, 459, 600, 602, 603, 605, 6, 7, 9, 48, 49, 50, 51, 53, 
   48, 50, 51, 56, 57, 53, 48, 50, 51, 57, 53, 74, 75, 76, 79, 74, 
   76, 79, 83, 84, 85, 86, 83, 85, 86, 93, 94, 95, 96, 98, 93, 95, 
   96, 101, 102, 98, 93, 95, 96, 102, 98, 119, 120, 121, 124, 119, 121, 124, 
   128, 129, 130, 131, 128, 130, 131, 138, 139, 140, 141, 143, 138, 140, 141, 146, 
   147, 143, 138, 140, 141, 147, 143, 164, 165, 166, 169, 164, 166, 169, 173, 174, 
   175, 176, 173, 175, 176, 183, 184, 185, 186, 188, 183, 185, 186, 191, 192, 188, 
   183, 185, 186, 192, 188, 209, 210, 211, 214, 209, 211, 214, 218, 219, 220, 221, 
   218, 220, 221, 263, 236, 282, 283, 301, 302, 317, 318, 340, 341, 429, 430, 431, 
   432, 434, 429, 431, 432, 434, 429, 431, 432, 437, 438, 434, 429, 431, 432, 438, 
   434, 454, 455, 456, 457, 459, 454, 456, 457, 459, 454, 456, 457, 462, 463, 459, 
   454, 456, 457, 463, 459, 481, 482, 483, 486, 481, 483, 486, 489, 490, 491, 494, 
   489, 491, 494, 497, 498, 499, 502, 497, 499, 502, 505, 506, 507, 508, 505, 507, 
   508, 509, 510, 511, 512, 509, 511, 512, 513, 514, 515, 516, 513, 515, 516, 547, 
   549, 550, 552, 547, 548, 549, 550, 552, 547, 549, 550, 555, 556, 552, 547, 549, 
   550, 556, 552, 573, 574, 575, 578, 573, 575, 578, 582, 583, 584, 585, 582, 584, 
   585, 600, 601, 602, 603, 605, 600, 602, 603, 608, 609, 605, 600, 602, 603, 609, 
   605, 626, 627, 628, 631, 626, 628, 631, 635, 636, 637, 638, 635, 637, 638, 689, 
   690, 691, 692, 694, 689, 691, 692, 697, 698, 694, 689, 691, 692, 698, 694, 715, 
   716, 717, 720, 715, 717, 720, 724, 725, 726, 727, 724, 726, 727, 744, 745, 746, 
   92, 126, 127, 47, 81, 82, 688, 722, 723, 182, 216, 217, 230, 17, 18, 16, 
   231, 232, 264, 265, 267, 518, 521, 524, 529, 505, 507, 509, 511, 513, 515, 747, 
   751, 733, 740, 668, 679, 685, 597, 640, 644, 652, 659, 543, 591, 409, 414, 421, 
   426, 427, 389, 396, 403, 369, 375, 381, 349, 352, 355, 362, 20, 21, 22, 25, 
   28, 32, 599, 633, 634, 137, 171, 172, 52, 54, 55, 58, 61, 65, 97, 99, 
   100, 103, 106, 110, 142, 144, 145, 148, 151, 155, 187, 189, 190, 193, 196, 200, 
   274, 275, 287, 288, 293, 294, 306, 307, 322, 323, 328, 329, 433, 435, 436, 439, 
   442, 446, 458, 460, 461, 464, 467, 471, 546, 580, 581, 551, 553, 554, 557, 560, 
   564, 604, 606, 607, 610, 613, 617, 693, 695, 696, 699, 702, 706, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, "\12", "\143\141\163\145", 
"\144\157", "\145\156\144", "\145\170\160\157\162\164", "\147\154\157\142\141\154", 
"\151\156\143\154\165\144\145", "\160\165\142\154\151\143", "\163\167\151\164\143\150", 
"\165\156\164\151\154", "\141\163", "\143\157\156\163\164\141\156\164", "\145\154\163\145", 
"\145\156\164\162\171", "\146\141\154\154\164\150\162\165", "\147\157\164\157", 
"\154\141\142\145\154", "\162\145\164\162\171", "\164\150\145\156", "\167\150\151\154\145", 
"\142\162\145\141\153", "\143\157\156\164\151\156\165\145", "\145\154\163\145\144\145\146", 
"\145\156\165\155", "\151\146", "\154\157\157\160", "\157\166\145\162\162\151\144\145", 
"\162\145\164\165\162\156", "\164\157", "\167\151\164\150", "\142\171", 
"\144\145\160\162\145\143\141\164\145", "\145\154\163\151\146", "\145\170\151\164", 
"\146\165\156\143\164\151\157\156", "\151\146\144\145\146", "\156\141\155\145\163\160\141\143\145", 
"\160\162\157\143\145\144\165\162\145", "\162\157\165\164\151\156\145", "\164\171\160\145", 
"\167\151\164\150\157\165\164", "\160\162\157\146\151\154\145", 
"\160\162\157\146\151\154\145\137\164\151\155\145", "\164\162\141\143\145", "\142\141\164\143\150", 
"\164\171\160\145\137\143\150\145\143\153", "\151\156\144\151\162\145\143\164\137\151\156\143\154\165\144\145\163", 
"\151\156\154\151\156\145", "\167\141\162\156\151\156\147", "\163\141\166\145", 
"\162\145\163\164\157\162\145", "\163\164\162\151\143\164", "\145\154\163\151\146\144\145\146", 
"\146\157\162", "\50", "\51", "\173", "\175", "\133", "\135", "\73", "\54", "\56", null, 
"\56\56", null, null, "\72", "\156\157\164", "\53", "\55", "\52", "\57", "\134", "\46", 
"\76", "\74", "\74\75", "\76\75", "\75", "\41\75", "\157\162", "\141\156\144", 
"\170\157\162", "\77", "\44", null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, "\60", "\61", };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   if (jjmatchedPos < 0)
   {
      if (image == null)
         curTokenImage = "";
      else
         curTokenImage = image.toString();
      beginLine = endLine = input_stream.getEndLine();
      beginColumn = endColumn = input_stream.getEndColumn();
   }
   else
   {
      String im = jjstrLiteralImages[jjmatchedKind];
      curTokenImage = (im == null) ? input_stream.GetImage() : im;
      beginLine = input_stream.getBeginLine();
      beginColumn = input_stream.getBeginColumn();
      endLine = input_stream.getEndLine();
      endColumn = input_stream.getEndColumn();
   }
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002200L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 134;
         jjmatchedPos = -1;
         curPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 8)
         {
            jjmatchedKind = 8;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

int[] jjemptyLineNo = new int[2];
int[] jjemptyColNo = new int[2];
boolean[] jjbeenHere = new boolean[2];
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 0 :
         break;
      case 9 :
         break;
      case 10 :
         break;
      case 11 :
         break;
      case 12 :
         break;
      case 13 :
         break;
      case 14 :
         break;
      case 15 :
         break;
      case 16 :
         break;
      case 17 :
         break;
      case 18 :
         break;
      case 19 :
         break;
      case 20 :
         break;
      case 21 :
         break;
      case 22 :
         break;
      case 23 :
         break;
      case 24 :
         break;
      case 25 :
         break;
      case 26 :
         break;
      case 27 :
         break;
      case 28 :
         break;
      case 29 :
         break;
      case 30 :
         break;
      case 31 :
         break;
      case 32 :
         break;
      case 33 :
         break;
      case 34 :
         break;
      case 35 :
         break;
      case 36 :
         break;
      case 37 :
         break;
      case 38 :
         break;
      case 39 :
         break;
      case 40 :
         break;
      case 41 :
         break;
      case 42 :
         break;
      case 43 :
         break;
      case 44 :
         break;
      case 45 :
         break;
      case 46 :
         break;
      case 47 :
         break;
      case 48 :
         break;
      case 49 :
         break;
      case 50 :
         break;
      case 51 :
         break;
      case 52 :
         break;
      case 53 :
         break;
      case 54 :
         break;
      case 55 :
         break;
      case 56 :
         break;
      case 57 :
         break;
      case 58 :
         break;
      case 59 :
         break;
      case 60 :
         break;
      case 61 :
         break;
      case 62 :
         break;
      case 63 :
         break;
      case 64 :
         break;
      case 65 :
         break;
      case 66 :
         break;
      case 67 :
         break;
      case 68 :
         break;
      case 69 :
         break;
      case 70 :
         break;
      case 71 :
         break;
      case 73 :
         break;
      case 76 :
         break;
      case 77 :
         break;
      case 78 :
         break;
      case 79 :
         break;
      case 80 :
         break;
      case 81 :
         break;
      case 82 :
         break;
      case 83 :
         break;
      case 84 :
         break;
      case 85 :
         break;
      case 86 :
         break;
      case 87 :
         break;
      case 88 :
         break;
      case 89 :
         break;
      case 90 :
         break;
      case 91 :
         break;
      case 92 :
         break;
      case 93 :
         break;
      case 94 :
         break;
      case 95 :
         break;
      case 96 :
         break;
      case 97 :
         break;
      case 98 :
         break;
      case 99 :
         break;
      case 100 :
         break;
      case 101 :
         break;
      case 102 :
         break;
      case 103 :
         break;
      case 104 :
         break;
      case 105 :
         break;
      case 106 :
         break;
      case 107 :
         break;
      case 108 :
         break;
      case 109 :
         break;
      case 110 :
         break;
      case 111 :
         break;
      case 112 :
         break;
      case 113 :
         break;
      case 114 :
         break;
      case 115 :
         break;
      case 116 :
         break;
      case 117 :
         break;
      case 118 :
         break;
      case 119 :
         break;
      case 120 :
         break;
      case 121 :
         break;
      case 122 :
         break;
      case 123 :
         break;
      case 124 :
         break;
      case 125 :
         break;
      case 126 :
         break;
      case 127 :
         break;
      case 128 :
         break;
      case 129 :
         break;
      case 130 :
         break;
      case 131 :
         break;
      case 132 :
         break;
      case 133 :
         break;
      case 134 :
         if (jjmatchedPos == -1)
         {
            if (jjbeenHere[0] &&
                jjemptyLineNo[0] == input_stream.getBeginLine() &&
                jjemptyColNo[0] == input_stream.getBeginColumn())
               throw new TokenMgrError(("Error: Bailing out of infinite loop caused by repeated empty string matches at line " + input_stream.getBeginLine() + ", column " + input_stream.getBeginColumn() + "."), TokenMgrError.LOOP_DETECTED);
            jjemptyLineNo[0] = input_stream.getBeginLine();
            jjemptyColNo[0] = input_stream.getBeginColumn();
            jjbeenHere[0] = true;
         }
         break;
      case 135 :
         break;
      case 136 :
         break;
      case 137 :
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public MeuphoriaTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public MeuphoriaTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream)
  {
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 752; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "WithinComment",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xfffffffffffffe01L, 0xfffffffffffff2ffL, 0x3ffL, 
};
static final long[] jjtoSkip = {
   0xfeL, 0x0L, 0x0L, 
};
static final long[] jjtoMore = {
   0x100L, 0x0L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[752];
    private final int[] jjstateSet = new int[2 * 752];

    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    
    protected char curChar;
}
